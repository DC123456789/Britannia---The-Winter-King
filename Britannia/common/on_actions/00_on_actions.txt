#character
on_startup = {
	events = {
		GR.13 #True cognatic for rule gender = all
		ZP.5 #Change Zorastrian pet traits into modifiers
		JD.60005 #Convert prosthetics event modifiers into artifacts
		#JD.50401 # Set correct value of the Silk Road
		#JD.30504 # Clean up living members of the chinese dynasty
		
		314453			# Fix Lleyn's flag
		
		# Anglo-Saxon Jarldoms
		314270
		314271
		314272
		314273
		314274
		314275
		314276
		314277
		
		# Frankish Counties
		314280
		314281
		314282
		314283
		314284
		314285
		314286
		314287
		314288
		314289
		314291
		314292
		314293
		314294
		314295
		314296
		
		# Frisia
		314300
		
		# Roman Praefectures
		314350
		314351
		314352
		314353
		314354
		314355
		314356
		314357
		314358
		
		# Hibernia
		# 31429506
		
		# Armoricans
		314297
		
		# Dalriada
		314359
		
		# Danish Jarldoms
		314365
		314366
		
		# Empires
		312122
	}
}

#character
on_yearly_pulse = {
	events = {
		110018	# Plot Maintenance
		110019	# Plot Maintenance
		110020	# Plot Maintenance
		319000	# Loyal and Unloyal Traits Cleaner
		312601	# Druid Skills Checker and Title Remover
		313170	# Kings of Anglia and Cantia granting provinces in central Britain
		313171	# Kings of Anglia and Cantia granting provinces in central Britain
		313172	# Kings of Anglia and Cantia granting provinces in central Britain
		313173	# Kings of Anglia and Cantia granting provinces in central Britain
		313174	# Kings of Anglia and Cantia granting provinces in central Britain
		313175	# Kings of Anglia and Cantia granting provinces in central Britain
		313176	# Kings of Anglia and Cantia granting provinces in central Britain
		313178	# Kings of Anglia and Cantia granting duchies in central Britain
		3129205	# Collapse the High Kingdom of Alba if too small
		3129206	# Collapse the Imperium Galliarum if too small
		3129207	# Collapse the High Kingdom of Hen Ogledd if too small
		302500 # Destroy Tribal kingdoms if too small
		312997 # Court Costs
		313018 # Flag clearing
		319010 # Drop Health bonus
		301999 # Remove former triggered modifiers
		313112 # anglia_unstable_realm modifier
		313090 # Decline of Sussex Start
		313092 # Decline of Sussex End - Modifier Expires
		313094 # Decline of Sussex End - Lost all revolting vassals
		313095 # sussex_unstable_realm modifier
		
		# AI forced creation of duchies
		315000 # Mercia
		315001 # Wessex
		315002 # Northumbria
		315003 # East Anglia, Essex, Sussex, Kent
		315004 # Ripuarian Franks/Austrasia
		315005 # Salian Franks/Soissons
		315006 # Neustria/Paris
		315007 # Orleans
		315008 # Waskonia
		315009 # Aquitaine
		315010 # Burgundy
		
		63106 # (Safety flag clearance check event)
		ZE.1100 # Disobedient daughter is unhappy
		ZE.9000 # Ally not contributing in war
		# ZE.10000 # Mercenary event tombula
		RIP.10012 # Check for plague notifications
		RIP.11700 # Prosperity system
		RIP.5050 # Scurvy event
		RIP.30316 # clean up immortal crisis 
		RIP.30317 # immortal crisis spreads
		#MNM.4430 # Passive nice trait gain for buddhist/jain monastic societies
		MNM.9815 # Seal of Solomon artifact makes you immune to possession
		MNM.70030 # Secret society visibility reduction
		bear.7 # Secret bear generation
		bear.1 # Secret bear discovery. Called here and in bear.7, as bear.1 can be temporarily precluded

		# Muslim Conquest Events
		301800
		301801
		301802
		301803
		301804
		301805
		301806
		301807
		301808
		301809
		
		# Benedictine Order Founded
		302000
		
		# Climate events
		314010
		314011
		314012
		314013
	}
	
	random_events = {
		100 = 319710		# Storm Approaching
		2000 = 0
	}
		
	random_events = {

		# Skills Events
		75 = 302401
		75 = 302402
		75 = 302403
		75 = 302404
		75 = 302405
		75 = 302406
		75 = 302407
		75 = 302408
		
		3000 = 0
	}
	
	random_events = {
	
		# Feudal Life Events
		100 = 4000
		100 = 4005
		100 = 4010
		100 = 4015
		100 = 4020
		100 = 4035
		100 = 4036
		100 = 4040
		100 = 4050
		100 = 4060
		100 = 4085
		100 = 4115
		100 = 4130
		100 = 4135
		100 = 4145
		100 = 4150
		100 = 4155
		100 = 4175
		
		# Married Life Events		# ALL DISABLED

		# Lovers Events
		100 = 64000
		100 = 64005
		100 = 64006
		100 = 64010
		100 = 64015
		100 = 64025
		100 = 64030
		100 = 64035
		100 = 64040
		
		# Job Flavour Events
		100 = 75010
		100 = 75020
		100 = 75030
		100 = 75040
		100 = 75050
		100 = 75060
		100 = 75065
		100 = 75070
		100 = 75075
		100 = 75080
		100 = 75085
		100 = 75090
		100 = 75095
		100 = 75105
		100 = 75110
		100 = 75120

		# Dynasty requests
		#350 = 66000
		350 = 66099 # Landless claimant asks dynasty head to press the claim in a war
		
		# Rumours Events
		20 = 69003 
		
		# Court Events
		100 = 73000
		100 = 73001
		100 = 73002
		100 = 73003
		100 = 73004
		100 = 73005
		100 = 73006
		100 = 73007
		100 = 73008
		100 = 73009
		100 = 73010
		
		# Bastard Events
		100 = 76000
		50 = 76005
		50 = 76010
		50 = 76015
		50 = 76020
		100 = 76025
		
		# Ward Events
		100 = 78000
		100 = 78005
		100 = 78010
		100 = 78015
		100 = 78018
		100 = 78025
		100 = 78030
		
		#Various Events
		100 = TOG.3403
		100 = TOG.3401
		100 = TOG.3402
		100 = 100019
		100 = 100024 
		50 = 79007 # Shieldmaiden training event
		150 = 37250 #Wife of same education offers to help
		
		# Reincarnation: Memories of the previous life
		1000 = RoI.10020
		1000 = RoI.10021
		1000 = RoI.10022
		
		# Way of Life events
		100 = WoL.12506 # Legendary Wisdom
		100 = WoL.12507 # Respected Ruler
		
		# Zeus Disobedient Daughter Events
		2000 = ZE.1300 # Disobedient daughter asks to marry lover
		
		# Zeus Councillor Random Events
		300 = ZE.4000 # Marshal suggests new commander
		300 = ZE.4010 # Marshal wants to do experiments with new weaponry
		200 = ZE.4100 # Marshal on mission turns against liege
		100 = ZE.4120 # Marshal - abuse of office, runs protection racket in province
		
		#100 = ZE.5000 # Zealous Lord Spiritual asks to go and proselytize among heathens
		200 = ZE.5010 # Zealous Lord Spiritual insists in building more temple holdings, willing to donate own money
		300 = ZE.5020 # Lord Spiritual on mission turns disloyal
		100 = ZE.5030 # Lord Spiritual - abuse of office - charges money from populace for godly favor
		500 = ZE.5040 # Craven or Cynical Lord Spiritual complains about dangerous mission to convert heathens
		
		
		#100 = ZE.3000 # Steward takes loan to cover up incompetence
		100 = ZE.3002 # Steward makes extra money because of high stewardship
		100 = ZE.3004 # Steward offers to make statue for liege
		100 = ZE.3011 # Steward offers to teach liege 
		
		100 = ZE.2060 # Councillor steals money from the realm coffers
		
		100 = ZE.2020 # Chancellor tries to teach ruler foreign languages
		100 = ZE.2030 # Chancellor sets up bureaucratic scheme to get hearings with the ruler
		
		100 = ZE.2070 # Spymaster uses realm spynetwork to blackmail people
		100 = ZE.2075 # Spymaster tries to improve spy defenses

		#Alliance events
		100 = ZE.8000
		100 = ZE.8010
		300 = ZE.9100

		#Favor events
		100 = ZE.8100 # Drank too much and fell
		100 = ZE.8110 # Vassal arguing with spouse
		100 = ZE.23000 # Councillor is Overburden with Work
		100 = ZE.23005 # Troublesome Peasants
		100 = ZE.22300 # Pardon a young noble
		200 = ZE.22400 # Voter saves another voters face at a Council Meeting
		200 = ZE.22500 # Godly voter shows you how to be more pious
		100 = ZE.22600 # Ask foreign voter for help
		200 = ZE.22700 # Give land to an unlanded friend for a favor
		200 = ZE.22800 # Offer to train your Liege's commanders
		
		#Dynamic mercenary events
		40 = ZE.23150 # Band Leader Speaks Highly of Employer
		
		#AI secretly convert event
		35 = MNM.3948 # Convert to spouse/friend/province
		
		#Female councillors
		50 = 77777 # Visit from talented woman
		100 = 77790 # Female relative wants to get on council
		150 = 77760 # Female vassal wants to get on council

		#End of days events
		#50 = RIP.14000

		#Chess with death
		25 = RIP.30220
		
		#Immortal vassal crisis
		25 = RIP.30315
		50 = RIP.30318
		#Immortal rival
		25 = RIP.30300

		#Gamebook
		100 = GBC.1 # Making a friend in mourning
		
		#Physician Flavor events
		100 = RIP.4010 # Court Physician recommends that you "Take it Easy"
		100 = RIP.4011 # Court Physician gifts you a guide dog
		200 = RIP.4013 # Court Physician suggests fertility treatment
		100 = RIP.4020 # Court Physician Friend teaches you medicine
		100 = RIP.4022 # Court Physician suggests you implement provincial apothecaries (prosperity boost)
		100 = RIP.4030 # Court Physician asks for patronage
		200 = RIP.4040 # Court Physician training event
		100 = RIP.4100 # A Physician-Missionary arrives in a Tribal or Nomadic Court
		
		#Random Prosperity Increasing Events
		125 = RIP.4300 # Steward suggests building new roads
		125 = RIP.4301 # Lord Spiritual suggests building shrines
		125 = RIP.4302 # Marshal suggests building outposts
		125 = RIP.4303 # Spymaster suggests setting up local messenger stations
		125 = RIP.4304 # Chancellor suggests sponsoring local harvest festivals
		125 = RIP.4305 # You decide upon personally visiting a province
		
		#Maimed Flavor events
		100 = RIP.29100 # Disfigured events
		100 = RIP.29200 # One-eyed events
		100 = RIP.29300 # One-handed events
		100 = RIP.29400	# One-legged events
		100 = RIP.29511 # Close relation taking care of you
		
		#Hospital events
		100 = RIP.4501 # Pilgrim physician arrives
		100 = RIP.4504 # Perform charity
		100 = RIP.4512 # Religious heads demand money for hospital presence
		75 = RIP.4514 # Leper arrives at court
		100 = RIP.4520 # Soup kitchen is damaged
		100 = RIP.4530 # Court physician seek learning at hospital
		
		#Pet events
		100 = 77850 # Cat event tombula
		150 = 77860 # Cat makes you happy
		25 = 6360 #Mittens

		#Monks and Mystics events
		100 = MNM.9000 # Artifact rumor
		100 = MNM.3910 # Commission painting
		30 = MNM.7829 # AI-only disciple recruitment

		#Artifact events
		500 = MNM.9816 # Blessed Mantle allows you to make Water of the Blessed Mantle (-> logic)
		
		#Jade Dragon events 
		#150 = JD.7010 # Radhanite Merchant asks for money
		
		#20 = JD.2100 # Chance of Religious Liberation CB
		
		150 = JD.4100
		
		# Former MTTH Events
		50 = SoA.5219 # Donate to local monastery - Formerly 2000 month MTTH
		
		2000 = 0
	}
}


#character
on_bi_yearly_pulse = {
	events = {
		TOG.3005 # Lose Berserker Trait when too old
		SoA.5300 # Christian becoming a wicked priest
		#SoA.5301 # Muslim becoming a wicked caliph
		SoA.5302 # Norse becoming an unworthy priest
		ancrel.0157 # Celtic becoming an bad druid
		#SoA.5303 # Tengri becoming an unworthy priest
		#SoA.5304 # Zoroastrian becoming an immoral priest
		#SoA.5305 # Aztec becoming an unworthy priest
	}
	
	random_events = {

		# Various Traits Events
		10 = 65000
		10 = 65001
		10 = 65003
		10 = 65005
		10 = 65007
		10 = 65009
		10 = 65166
		10 = 65011
		10 = 65020
		10 = 65021
		10 = 65022
		10 = 65023
		10 = 65030
		10 = 65031
		10 = 65032
		10 = 65033
		10 = 65034
		10 = 65035
		10 = 65036
		10 = 65037
		10 = 65040
		10 = 65041
		10 = 65042
		10 = 65043
		10 = 65165
		10 = 65044
		10 = 65045
		10 = 65048
		10 = 65049
		10 = 65050
		10 = 65051
		10 = 65052
		10 = 65053
		10 = 65055
		10 = 65057
		10 = 65060
		10 = 65061
		10 = 65065
		10 = 65070
		10 = 65071
		10 = 65072
		10 = 65074
		10 = 65080
		10 = 65081
		10 = 65085
		10 = 65090
		10 = 65095
		10 = 65100
		10 = 65101
		10 = 65102
		10 = 65105
		10 = 65106
		10 = 65107
		10 = 65110
		10 = 65115
		10 = 65120
		10 = 65125
		10 = 65126
		10 = 65130
		10 = 65135
		10 = 65140
		10 = 65145
		10 = 65150
		10 = 65155
		10 = 65160

		# Seven Virtues
		10 = 3020
		10 = 3021
		10 = 3022
		10 = 3025
		10 = 3026
		10 = 3030
		10 = 3035
		10 = 3012
		10 = 3013
		10 = 3095
		10 = 3080
		10 = 3081
		10 = 3082
		10 = 3083
		10 = 3084
		10 = 3085
		10 = 3120
		10 = 3121
		10 = 3123
		10 = 3125
		10 = 3126
		10 = 3200
		10 = 3202
		10 = 3203
		10 = 3205
		10 = 3240
		10 = 3242
		10 = 3243
		10 = 3245
		10 = 3246
		10 = 3247
		10 = 3248
		10 = 3258
		10 = 3160
		10 = 3170
		10 = 3175

		# Seven Deadly Sins
		10 = 3000
		10 = 3001
		10 = 3005
		10 = 3010
		10 = 3011		
		10 = 3040
		10 = 3045
		10 = 3050
		10 = 3055
		10 = 3060
		10 = 3065
		10 = 3070
		10 = 3075
		10 = 3100
		10 = 3105
		10 = 3110
		10 = 3115
		10 = 3180
		10 = 3185
		10 = 3190
		10 = 3195
		10 = 3140
		10 = 3141
		10 = 3142
		10 = 3143
		10 = 3144
		10 = 3145
		10 = 3220
		10 = 3225
		10 = 3230
		10 = 3235
		
		# Misc Traits, Paranoid, Honest,Gregagrious, Craven
		10 = 3480
		10 = 3485
		10 = 3490
		10 = 3495	
		10 = 3280
		10 = 3282
		10 = 3283
		10 = 3286
		10 = 3710
		10 = 3715
		10 = 3720
		10 = 3725
		10 = 3300
		10 = 3305
		10 = 3310
		10 = 3315

		
		# Deceitful
		10 = 3260
		10 = 3261
		10 = 3262
		10 = 3263
	

		# Lifestyle events
		10 = 3520
		10 = 3525
		10 = 3530
		10 = 3535
		10 = 3540
		10 = 3543
		10 = 3546
		10 = 3550
		10 = 3555
		10 = 3560
		10 = 3563
		10 = 3568
		10 = 3570
		10 = 3575
		10 = 3585
		10 = 3590
		10 = 3593
		10 = 3600
		10 = 3605
		10 = 3610
		10 = 3615
		10 = 3620
		10 = 3625
		10 = 3630
		10 = 3635
		10 = 3640
		10 = 3645
		10 = 3650
		10 = 3655
		10 = 3660
		10 = 3665
		10 = 3675
		10 = 3680
		10 = 3685
		10 = 3690
		10 = 3700
		
		20 = TOG.3009
		
		# Roman flavor
		
		20 = romeflavorevent.45001
		20 = romeflavorevent.45002
		20 = romeflavorevent.45005
		10 = romeflavorevent.45006
		20 = romeflavorevent.45007
		10 = romeflavorevent.45008
		20 = romeflavorevent.45009
		20 = romeflavorevent.45010
		20 = romeflavorevent.45020
		20 = romeflavorevent.45021
		20 = romeflavorevent.45022
		10 = romeflavorevent.45025
		10 = romeflavorevent.45027
		20 = romeflavorevent.45033
		20 = romeflavorevent.45034
		20 = romeflavorevent.45035
		
		
		500 = 0 # Chance of no bi-yearly event
	}
}

#character
on_five_year_pulse = {
	events = {
		# GR.1
		MNM.10030 # Have AI characters join societies
	}
	
	random_events = {
		
		# Foreign Travellers
		50 = 3124150			# Germanic Pagan
		50 = 3124151			# Germanic Christian
		50 = 3124152			# Imperial Pagan
		50 = 3124153			# Imperial Christian
		
		
		# TRAITS
		
		#Brave
		10 = 3320
		10 = 3325
		10 = 3330
		10 = 3335
		
		#Shy
		10 = 3340
		10 = 3345
		10 = 3350
		10 = 3355
		
		#Ambitious
		10 = 3360
		10 = 3365
		10 = 3370
		10 = 3375
		
		#Content
		10 = 3380
		10 = 3385
		10 = 3390
		10 = 3395
		
		#Arbitrary
		10 = 3400
		10 = 3405
		10 = 3410
		10 = 3415
		
		#Just
		10 = 3420
		10 = 3425
		10 = 3430
		10 = 3435
		
		#Cynical
		10 = 3440
		10 = 3445
		10 = 3450
		10 = 3455		
		
		#Zealous
		10 = 3460
		10 = 3465
		10 = 3470
		10 = 3475

		#Trusting
		10 = 3500
		10 = 3505
		10 = 3510
		10 = 3515
		
		#Personality Traits
		10 = 1000
		10 = 1001
		10 = 1002
		10 = 1003
		10 = 1004
		10 = 1005
		10 = 1006
		10 = 1007
		10 = 1008
		10 = 1009
		10 = 1010
		10 = 1011
		10 = 1012
		10 = 1013
		10 = 1014
		10 = 1015
		10 = 1016
		10 = 1017
		10 = 1018
		10 = 1019
		10 = 1028
		10 = 1029
		10 = 1030
		10 = 1031
		10 = 1032
		10 = 1033
		10 = 1034
		10 = 1035
		10 = 1036
		10 = 1037
		10 = 1038
		10 = 1039
		10 = 1040
		10 = 1041
		10 = 1042
		10 = 1043
		10 = 1044
		10 = 1045
		10 = 1046
		10 = 1047
		10 = 1048
		10 = 1049
		10 = 1050
		10 = 1051
		10 = 1052
		10 = 1053
		10 = 1054
		10 = 1057
		10 = 1058
		10 = 1060
		10 = 1070

		#Zoroastrian pets
		# 1 = ZP.1
	}
}

#character
on_decade_pulse = {
	events = {
		RIP.10031 # clear global flags from bubonic plague
	}
	
	random_events = {
		100 = 63050 #former MTTH event
		40 = SoA.4020 #former MTTH event
		100 = 0
	}
}

# For characters 2 to 16 years old
on_yearly_childhood_pulse = {
	random_events = {
		# Childhood Personality Events
		
		#Age 6-16, aiming to get at least 4 traits before adult.
		100 = 1500
		100 = 1510
		100 = 1520
		100 = 1530
		100 = 1540
		100 = 1550
		100 = 1560
		100 = 1570
		100 = 1580
		100 = 1590
		100 = 1600
		100 = 1610
		100 = 1620
		100 = 1630
		100 = 1640
		100 = 1650
		100 = 1660
		100 = 1670
		100 = 1680
		100 = 1690
		100 = 1700
		100 = 1710
		100 = 1720
		100 = 1730
		100 = 1965
		5000 = RoI.10010 # Acknowledged reincarnated child acquires trait from previous personality
		
		#Toddler flavour events (age 2-5), not very common, but some will get them.
		10 = 1900 
		10 = 1901
		10 = 1902
		10 = 1903
		10 = 1904
		
		#Young children flavour events, (age 6-10), not very common, but some will get then..
		20 = 1905
		20 = 1906
		20 = 1907
		20 = 1908
		20 = 1909
		20 = 1910
		20 = 1911
		20 = 1912
		
		#Youngsters flavour events (age 11-15), not very common, but some will get then..
		50 = 1913
		50 = 1914
		50 = 1915
		50 = 1916
		50 = 1917
		50 = 1918
		50 = 1919
		50 = 1920
		50 = 1921
		50 = 1922
		50 = 1923
		50 = 1924
		50 = 1925
		50 = 1926
		50 = 1927
		50 = 1928
		50 = 1929
		50 = 1930
		50 = 1931
		50 = 1932
		50 = 1933
		50 = 1934
		50 = 1935
		
		#Friends rival flavour events moved from MTTH to childhood pulse.
		1000 = 100005
		1000 = 100015
		
		#Roman flavor for children!
		150 = romeflavorevent.45028
		150 = romeflavorevent.45029
		50 = romeflavorevent.45030
		150 = romeflavorevent.45031
		150 = romeflavorevent.45032
		
		1000 = 0
	}
}

# Yearly pulse (six months from on_yearly_pulse) intended for Focus events (only fires for characters with a Focus)
on_focus_pulse = {

	random_events = {
		1000 = 0
		
		# Family Focus
		300 = WoL.3010 # Relations with spouse improve
		200 = WoL.3020 # Relations with sibling improve
		400 = WoL.3030 # Relations with parent improve
		400 = WoL.3040 # Relations with child improve
		200 = WoL.3048 # Relations between two close relatives improve
		200 = WoL.3059 # Relations between two non-adult children improve
		
		# Theology focus
		500 = WoL.7000 # Study religious myths?
		200 = WoL.7010 # Befriend priest through your religious interest
		200 = WoL.7020 # Visit holy site and speak with priests there (not Muslims, Christians, Jews or Indians)
		200 = WoL.7030 # Reflect on own life and how it relates to the gods.
		200 = WoL.7040 # Theologian's view of other religions - can gain Sympathy for other faiths
		200 = WoL.7050 # Question own faith - can gain Cynical or Zealous
		50 = WoL.7060 # Embrace heresy? Zealous characters only. Can lose the trait or become heretic.
		400 = WoL.7070 # Embrace theologian lifestyle?
		200 = WoL.7080 # Mystical experience - lose Depressed and Stressed
		200 = WoL.7090 # Meditation/Prayer in Seclusion - Go into hiding for a week. Lose Drunkard, Gluttonous and Lustful and possible gain Temperate and Chaste (depending on religion). Tiny Chance of restored eyesight or cured illness.
		
		# Theology focus Druid Events
		200 = 312620
		150 = 312621
		150 = 312622
		150 = 312623
		170 = 312624
		120 = 312625
		100 = 312626
		100 = 312627
		100 = 312628
		100 = 312629
		100 = 312630
		100 = 312631
		100 = 312632
		100 = 312633
		100 = 312634

		# Hunting focus
		200 = WoL.5000 # Epic Hunt chain start
		200 = WoL.5200 # Receive hunting dog
		200 = WoL.5210 # Dog makes you happy
		200 = WoL.5211 # Dog makes you popular
		200 = WoL.5220 # Train your dog?
		200 = WoL.5230 # Bad dog kills other dog
		200 = WoL.5231 # Bad dog kills or wounds courtier
		
		# War Focus
		120 = WoL.11300 # Improved martial education
		120 = WoL.11301 # Leader Trait gained: Troop type specialist
		120 = WoL.11302 # Leader Trait gained: Terrain/climate specialist
		120 = WoL.11303 # Leader Trait gained: Battle tactics
		120 = WoL.11304 # Leader Trait gained: Inspiration, logistics and sieges
		120 = WoL.11305 # Leader Trait gained: Offense vs Defense
		120 = WoL.11310 # Teach a commander one of my leader traits
		
		# Rulership Focus
		50 = WoL.12000 # The Architect
		50 = WoL.12010 # Depressed
		25 = WoL.12011 # Stressed
		50 = WoL.12027 # Farm Fire
		50 = WoL.12015 # The Murders
		50 = WoL.12028 # Witch!
		50 = WoL.12029 # Drunkard
		50 = WoL.12025 # Noble Feud
		25 = WoL.12030 # City brigands
	}
}

#on combat pulse
on_combat_pulse = {
	random_events = {
		1800 = 0
		180 = 5556000 		# Battlefield Duel
		30 = 242 			# Killed
		60 = 243 			# Wounded
		20 = 244 			# Maimed
		25 = 245 			# Serious head injury
		60 = 246 			# Improves martial education
		35 = 247 			# Flat improvement to martial skill

		50 = 248 			# Knowledge boost in capital from battle.
		30 = 255 			# Marshal: Unnecessary violence
		50 = 270 			# Gain Brave
		20 = 271 			# Gain Craven
		35 = 272 			# Gain Wroth
		45 = 273 			# Gain Patient
		
		50 = 96500 			# Gain Combat Trait 1
		40 = 96501 			# Gain Combat Trait 2
		40 = 96502 			# Gain Combat Trait 3
		40 = 96503			# Gain Combat Trait 4	

		50 = TOG.3000 		# Becomes Berserker
		15 = TOG.3001 		# Berserker Maimed
		20 = TOG.3002 		# Berserker Wounded
		15 = TOG.3003 			# Berserker Killed
		25 = TOG.3004 		# Berserker Kills Many
		15 = 79009 # Shieldmaiden can save liege on battlefield
		15 = 79001 # Shieldmaiden saves liege, but she is injured (small chain)

		50 = MNM.1202 # Scrying vision inspires greatness
		50 = MNM.1203 # Scrying vision injury

	}
}

#on siege pulse
on_siege_pulse = {
	random_events = {
		500000 = 0
		50 = 62000
		50 = 62001
		50 = 62003
		50 = 62004
		50 = 62005
		50 = 62006
		50 = 62007
		50 = 62008
		50 = 62009
		50 = 62014
		75 = 62015
		1 = 62011	
	}
}

#character
on_battle_won = {
	random_events = {
		100 = 0
		10 = 260 	# Heroism shown
		10 = 261 	# Soldier Distinguish himself.
	}
}

on_battle_won_leader = {
	random_events = {
		80 = 0
		20 = 312931 		# Victorious Warrior Trait
	}
}

# Winning army leader is ROOT - opponent army leader is FROM
on_major_battle_won_leader = {
	events = {
		CM.10031
	}
	random_events = {
		15 = romeflavorevent.45036 # Roman acclamation for victorious general
		60 = 0
	}
}

# Winning army owner is ROOT - opponent army owner is FROM
on_battle_won_owner = {
}

# any leader in battle on winning side is ROOT - opponent army leader is FROM
on_major_battle_won = {
	events = {
		CM.10029 # Chronicle
		
	}
}

#character
on_battle_lost = {
	random_events = {
		75 = 0
		25 = 250 	# Imprisoned by the enemy
	}
}

# Any leader in battle on losing side is ROOT - opponent army leader is FROM
on_major_battle_lost = {
	events = {
		CM.10030 # Chronicle
	}
}

on_battle_lost_leader = {
}

# Losing army leader ROOT - opponent army leader is FROM
on_major_battle_lost_leader = {
	events = {
		CM.10032
	}
}

# Losing army owner is ROOT - opponent army owner is FROM
on_battle_lost_owner = {
	events = {
	}
}

on_siege_won_leader = {
	events = {
		312170 		# Siege of Ynys Trebes
		319952 		# Release Previous Prisoners
		319900 		# Sacking and Pillaging - Castle (Small)
		319901 		# Sacking and Pillaging - Castle (Medium)
		319902 		# Sacking and Pillaging - Castle (Large)
		319920 		# Sacking and Pillaging - Town (Small)
		319921 		# Sacking and Pillaging - Town (Medium)	 
		319922 		# Sacking and Pillaging - Town (Large)
		319950 		# Siege Imprisonment - Holder in Settlement
		319951 		# Siege Imprisonment - Holder NOT in Settlement
		CM.10033 	# Chronicle for certain major locations
		CM.10034 	# Chronicle for certain major locations
	}
}

on_siege_lost_leader = {
}

# Fires for the owner of the winning unit (ROOT). The taken Holding title is in FROM.
on_siege_over_winner = {
	events = {
		TOG.1005 # Peasants take county capital
		TOG.1025 # Heretics take county capital
		TOG.1045 # Nationalists take county capital
		TOG.1065 # Religious rebels take county capital
		CM.10035 # Chronicle for certain major locations
		RIP.11702 # Prosperity lost when sieged
		RIP.11713 # Monument to Glory teardown
		HL.4813 # Nomads may pillage holdings on siege
		#MNM.6222 # Assassins occupy holding
		#MNM.7111 # Devil Worshipers desecrate holding
		MNM.9900 # Chance to steal artifact from capital holdings
	}
	random_events = {
		400 = 0 # Nothing happens
		# 100 = SoA.5400 # Massacre at Beziers-type event	
	}
}

# Fires for all characters presumed to be in the Holding at the time. Siege winner unit owner in the 'new_character' scope, lost holding title in FROM, local character in ROOT.
on_siege_over_loc_chars = {
	random_events = {
 		1000 = 0 # Nothing happens
		200 = TOG.1190 # Rebels kill character
 	}
}

#character
on_failed_assassination = {
	random_events = {
 		65 = 156 		# No harm done
 		25 = 157 		# Wounded
 		10 = 158 		# Maimed
 	}
}

#character
on_failed_assassination_disc = {
	random_events = {
 		50 = 159 		# No harm done
 		35 = 160 		# Wounded
 		15 = 161 		# Maimed
 	}
}

#character
on_assassination = {
	events = {
 		162
 	}
}

#character
on_assassination_disc = {
	events = {
 		163
 	}
}

#character
on_birth = {
	events = {
 		300 # A Bastard is born
		312 # The child of a consort is born	
		318 # A Bastard is born, but is not recognized as such by the mother's spouse (cuckoo!)	
		335 # Hidden utility event for all children born
		CM.10011 # Chronicle entry
		
		312111 # Special event for maintaining dynasty of Arthur
		#39350 # Assign pagan religion trait
		301702 # Assign Manichean caste trait
		319001 # Assign Roman culture trait
		302530 # Remove Born in the Purple
		
		bct.0 # BCT congential trait inheritance
		bct.100
		bct.200
		bct.300
		bct.400
		bct.500
		bct.600
		
		RIP.11064 # Babies born in seclusion get seclusion modifier
		#MNM.7508 # DW Demon child
 	}
	
	random_events = {
		200 = 0
		100000 = MNM.1206 # A Child is born, Hermetic Scrying vision fulfilleds
		50 = RIP.29600 # Firstborn/first son reaction 
		1 = RIP.29805 # Reincarnation for Manicheans
	}
}

#character (at 2 months)
on_pregnancy = {
	events = {
 		400 # Pregnancy in matrimony
 		401 # Pregnancy out of wedlock
 		402 # Pregnancy in matrimony, with another father!
 		410 # Pregnancy as consort
 		412 # Pregnancy as consort, with another father!		
 	}
}

# character
on_adulthood = {
	events = {
		312932		
		# HL.1040 # Wolf Child reaches maturity
		ZE.13998 # Clear adolescence trait event chain flags on adulthood
		
		# Childhood Traits mature if they haven't yet
		ZE.13000 # Haughty
		ZE.13010 # Affectionate
		ZE.13020 # Timid
		ZE.13030 # Rowdy
		ZE.13040 # Willful
		ZE.13050 # Brooding
		ZE.13060 # Indolent
		ZE.13070 # Playful
		ZE.13080 # Conscientious
		ZE.13090 # Fussy
		ZE.13100 # Curious
		ZE.13110 # Idolizer
		
		# Resolve education and add trait
		ZE.14100 # Diplomacy
		ZE.14200 # Martial
		ZE.14300 # Stewardship
		ZE.14400 # Intrigue
		ZE.14500 # Learning
		ZE.14700 # Lack of focus
		
		# SoA.3020 # Demon child's true nature asserts itself

		MNM.1269 # Horoscoped child gets new modifiers
		MNM.4302 # Monastic Order education bonus purity effect
		
		301703 # Assign Manichaean caste trait
	}
}

on_adolescence = { # Checked on 12th birthday.
	events = {
		ZE.12998 # Clear childhood event chain flags
		MNM.3429 # Educator/guardian/parent with secret religion get a chance to convince child to convert secretly
	}
}

#character
on_crusade_creation = {
	events = {
		CM.10015  # Chronicle entry
 	}
}

# Character. 
on_marriage = {
	events = {
 		3120101		# Family Relations
		3120102		# Family Relations
		3120104		# Clear flag
		500 		# Royal Marriage Aid Duty
		CM.10023  	# Chronicle entry
		CM.10036 	# Chronicle entry - primary heir
		ZE.1015 # Disobedient daughter is unhappy with marriage
		GBC.199 # Game book event, falling in love with someone else at marriage feast
		BCThelper.100 	# BCT Helper
 	}
	random_events = {
		10 = ZE.1010 # Daughter becomes disobedient - undesired marriage
		2000 = 0 # No random event
	}
}

#character. Triggers when someone gets imprisoned for any reason. - ROOT is prisoner, FROM is imprisoner
on_become_imprisoned_any_reason = {
	events = {
		ZE.14600 # Being thrown in prison affects education negatively
		RIP.12097 # Being thrown in prison removes seclusion modifier
		MNM.9033 # Imprisoned councillor cannot hunt for relics
		685 # Remove in-hiding trait on imprisonment
	}
}

#character. Triggers if someone tries to imprison someone landed and fails. This leads to an automatic war declaration(independece)
on_avoided_imprison_started_war = {
	events = {
 		150 # Avoided imprison, declared independece
 	}
}

#character. Triggers if someone becomes imprisoned by the diplo-action
on_became_imprisoned = {
	events = {
 		151 # Was imprisoned
		CM.10024  # Chronicle entry
 	}
}

#character. Triggers if someone tries to imprison someone unlanded and fails. Character is exiled to another country
on_avoided_imprison_fled_country = {
	events = {
 		152
 	}
}

#character. Triggers if someone is released from prison
on_released_from_prison = {
	events = {
 		153
		CM.10025  # Chronicle entry
		ZE.12219  # Released from dungeon must choose whether to leave pet rat behind
 	}
}

#character. Triggers if someone is executed, character not dead yet
on_executed = {
	events = {
 		154
 	}
}

#character. Triggers if someone is exiled
on_exiled = {
	events = {
 		155
 	}
}

#character. Fires every month for characters who are preparing an invasion.
on_prepared_invasion_monthly = {
	random_events = {
		15 = 0
		15 = 62322 	# A small force flocks to your banner
		15 = 62320 	# A significant force flocks to your banner
		2 = 62321 	# A Hero joins your cause with his retinue
	}
}

#character. Fires if a prepared invasion becomes invalid.
on_prepared_invasion_aborts = {
	events = {
		62300 # Handle abort
	}
}

#character. Fires if a prepared invasion expires.
on_prepared_invasion_expires = {
	events = {
		62310 # Handle expiration
	}
}

on_death = {
	events = {
		31203121		# The Winter King - MASTER DEATH Event
		24500
		24502
		650
		WoL.6335 		# Owner of Necronomicon dies...
		CM.10010 		# Chronicle entry
		ZE.1030 		# Daughter becomes disobedient - killed lover
		ZE.1040 		# Daughter becomes disobedient - killed friend
		#312998			# Gavelkind Hotfix		
		#HL.12
		HL.4998
		532 #Clears regents if heir has one already
		RIP.4400 #Nicknames for executions
		GR.10
		#MNM.6844 #Removes mark of death block for Assassins GM
		MNM.6991 #Clears any quests targeting this character
		#MNM.6012 #Transfers assassins debt to heir
		MNM.1415 #Announces hermetics apprentice death
		#SoA.3091 # The Death of the Demon Child?
		#RoI.248 # clearing inventory of cursed diamond
		#740 # Achievement Unwelcome Visitors
		MNM.9030 # Notify of dead relic hunter
		MNM.1611 # Clears Apprentice minor titles
		#JD.60210 # Destroy Pretender Chinese Empire if heir is not same dynasty and chinese
		680
		#JD.60015 # Notify of Suzerain dying and you being free
		JD.60006 # Destroy prosthetics
		JD.3042 # Clear Supply Horses modifier if no longer Nomadic
		#JD.10080 # Your Chinese Prince/Princess has died (for children or spouse - must be read before JD.60310!)
		#JD.60310 # Courtier from China dies

		# Clean up traits as we don't keep zoroastrian pets in death
		#ZP.5
		
		313100			# Death of Aelle
		316040			# Death of Brythonic Archdruid (notification)
		316054			# Death of Brythonic Archdruid Successor
		316140			# Death of Pictish Archdruid (notification)
		316154			# Death of Pictish Archdruid Successor
		316240			# Death of Gaelic Archdruid (notification)
		316254			# Death of Gaelic Archdruid Successor
		
		313079			# Continue Alternate Rise of Mercia
		319100			# Daughters of Celtic rulers get inheritable claims
		
		history.2001	# Death of Coel Hen
		history.1001	# Death of AAtE
		history.32		# Death of Meirchion
		312115			# Death of Uther/Mordred/Arthur, and none of those three is the heir
		312118			# Death of Arthur, if High King and 312115 does not apply
		
		#330000			# Death of tribute/suzerain for independence events
		foederati.20	# Death of foederati/foederati suzerain
		315154			# Death of revolting Soissons tributary
		
		319020			# Special maintenance
	}
	random_events = {
		1 = RIP.29800 #reincarnation investigation
		10 = 24505
		10 = 24510
		25 = RIP.29000 #Lovers/rivals/friends react
		100 = MNM.1207 # Hermetic Scrying vision fulfilled
		100 = 0
	}
}

on_merc_rampage = {
	events = {
 		38050
 	}
}

on_merc_leave = {
	events = {
 		38051
 	}
}

on_merc_turn_coat_from = {
	events = {
 		38052
 	}
}

on_merc_turn_coat_to = {
	events = {
 		38053
 	}
}

on_holy_order_leave = {
	events = {
 		38054
 	}
}

on_letter_event_message = {
	events = {
		1
	}
}

on_character_event_message = {
	events = {
		2
	}
}

on_loot_settlement = {
	random_events = {
		5 = TOG.3300
		5 = TOG.3301
		5 = TOG.3302
		5 = TOG.3303
		35 = TOG.3320
		250 = 0
	}
	events = {
		TOG.3321
		TOG.3322
		TOG.3323
		RIP.11720
		MNM.9899 # Chance to steal artifact from capital holdings
	}
}

# When someone is looting currently in a province
# ROOT = Looter, FROM = Province
on_loot_province = {
	events = {
	}
}

# Fires for vassals that can become independent as a result of liege being over vassal limit
on_over_vassal_limit_succession = {
	events = {
		63100
	}
}

###########################
# DIPLOMATIC NOTIFICATIONS
###########################

# FROM is the character recieving the event
# FROMFROM is the person sending the event
# ROOT is empty or a third party
# new_character is empty or a third party

DEMAND_RELIGIOUS_CONVERSION_INTERACTION_ACCEPT_EVENT = {
	events = {
		202
	}
}

DEMAND_RELIGIOUS_CONVERSION_INTERACTION_DECLINE_EVENT = {
	events = {
		203
	}
}

REVOKE_TITLE_INTERACTION_ACCEPT_EVENT = {
	events = {
		204
		315903
	}
}

REVOKE_TITLE_INTERACTION_DECLINE_EVENT = {
	events = {
		205
	}
}

OFFER_PEACE_INTERACTION_ACCEPT_EVENT = {
	events = {
		206
	}
}

OFFER_PEACE_INTERACTION_DECLINE_EVENT = {
	events = {
		207
	}
}

SEND_GIFT_INTERACTION_ACCEPT_EVENT = {
	events = {
		208
	}
}

SEND_GIFT_INTERACTION_DECLINE_EVENT = {
	events = {
		209
	}
}

OFFER_VASSALIZATION_INTERACTION_ACCEPT_EVENT = {
	events = {
		210
	}
}

OFFER_VASSALIZATION_INTERACTION_DECLINE_EVENT = {
	events = {
		211
	}
}

ARRANGE_BETROTHAL_INTERACTION_ACCEPT_EVENT = {
	events = {
		212
	}
}

ARRANGE_BETROTHAL_INTERACTION_DECLINE_EVENT = {
	events = {
		213
	}
}

ARRANGE_SUCC_BETROTHAL_INTERACTION_ACCEPT_EVENT = {
	events = {
		330
	}
}

ARRANGE_SUCC_BETROTHAL_INTERACTION_DECLINE_EVENT = {
	events = {
		331
	}
}

OFFER_SUCCESSION_MARRIGE_INTERACTION_ACCEPT_EVENT = {
	events = {
		214
		37255
	}
}

OFFER_SUCCESSION_MARRIGE_INTERACTION_DECLINE_EVENT = {
	events = {
		215
	}
}

OFFER_MARRIGE_INTERACTION_ACCEPT_EVENT = {
	events = {
		216
		37255
	}
}

OFFER_MARRIGE_INTERACTION_DECLINE_EVENT = {
	events = {
		217
	}
}

RANSOM_CHARACTER_INTERACTION_ACCEPT_EVENT = {
	events = {
		218
	}
}

RANSOM_CHARACTER_INTERACTION_DECLINE_EVENT = {
	events = {
		219
	}
}

EDUCATE_CHARACTER_INTERACTION_ACCEPT_EVENT = {
	events = {
		220
	}
}

EDUCATE_CHARACTER_INTERACTION_DECLINE_EVENT = {
	events = {
		221
	}
}

ABANDON_AMBITION_INTERACTION_ACCEPT_EVENT = {
	events = {
		222
	}
}

ABANDON_AMBITION_INTERACTION_DECLINE_EVENT = {
	events = {
		223
	}
}

STOP_BACKING_AMBITION_INTERACTION_ACCEPT_EVENT = {
	events = {
		224
	}
}

STOP_BACKING_AMBITION_INTERACTION_DECLINE_EVENT = {
	events = {
		225
	}
}

JOIN_AMBITION_INTERACTION_ACCEPT_EVENT = {
	events = {
		226
	}
}

JOIN_AMBITION_INTERACTION_DECLINE_EVENT = {
	events = {
		227
	}
}

GRANT_LANDED_TITLE_INTERACTION_ACCEPT_EVENT = {
	events = {
		MNM.1217
		228
	}
}

GRANT_LANDED_TITLE_INTERACTION_DECLINE_EVENT = {
	events = {
#		229
	}
}

APPOINT_TO_OFFICE_INTERACTION_ACCEPT_EVENT = {
	events = {
		230
	}
}

APPOINT_TO_OFFICE_INTERACTION_DECLINE_EVENT = {
	events = {
		231
	}
}

ASK_FOR_INVASION_INTERACTION_ACCEPT_EVENT = {
	events = {
		232
	}
}

ASK_FOR_INVASION_INTERACTION_DECLINE_EVENT = {
	events = {
		233
	}
}

ASK_FOR_DIVORCE_INTERACTION_ACCEPT_EVENT = {
	events = {
		234
		CM.10037
	}
}

ASK_FOR_DIVORCE_INTERACTION_DECLINE_EVENT = {
	events = {
		235
	}
}

ASK_FOR_EXCOMMUNICATION_INTERACTION_ACCEPT_EVENT = {
	events = {
		236
	}
}

ASK_FOR_EXCOMMUNICATION_INTERACTION_DECLINE_EVENT = {
	events = {
		237
	}
}

CALL_ALLY_INTERACTION_ACCEPT_EVENT = {
	events = {
		238
		41000 # Vassal accepts
		CM.10014
	}
}

CALL_ALLY_INTERACTION_DECLINE_EVENT = {
	events = {
		239
		41001 # Vassal
	}
}

DECLARE_WAR_INTERACTION_ACCEPT_EVENT = {
	events = {
		240
		241
	}
}

RETRACT_VASSAL_INTERACTION_ACCEPT_EVENT = {
	events = {
		274
	}
}

RETRACT_VASSAL_INTERACTION_DECLINE_EVENT = {
	events = {
		275
	}
}

INVITE_TO_COURT_INTERACTION_ACCEPT_EVENT = {
	events = {
		280
	}
}

INVITE_TO_COURT_INTERACTION_DECLINE_EVENT = {
	events = {
		281
	}
}

TRANSFER_VASSAL_INTERACTION_ACCEPT_EVENT = {
	events = {
		315905
		315907
	}
}

ASK_FOR_VASSALIZATION_INTERACTION_ACCEPT_EVENT = {
	events = {
		282
	}
}

ASK_FOR_VASSALIZATION_INTERACTION_DECLINE_EVENT = {
	events = {
		283
	}
}

ASK_TO_LIFT_EXCOMMUNICATION_INTERACTION_ACCEPT_EVENT = {
	events = {
		284
	}
}

ASK_TO_LIFT_EXCOMMUNICATION_INTERACTION_DECLINE_EVENT = {
	events = {
		285
	}
}

ASK_TO_RANSOM_CHARACTER_INTERACTION_ACCEPT_EVENT = {
	events = {
		286
	}
}

ASK_TO_RANSOM_CHARACTER_INTERACTION_DECLINE_EVENT = {
	events = {
		287
	}
}

SETTLE_ADVENTURER_INTERACTION_ACCEPT_EVENT = {
	events = {
		288
		# 725
	}
}

SETTLE_ADVENTURER_INTERACTION_DECLINE_EVENT = {
	events = {
		289
	}
}

ASK_TO_JOIN_WAR_INTERACTION_ACCEPT_EVENT = {
	events = {
		293
		CM.10013
	}
}

ASK_TO_JOIN_WAR_INTERACTION_DECLINE_EVENT = {
	events = {
		294
	}
}

ASK_TO_EMBARGO_INTERACTION_ACCEPT_EVENT = {
	events = {
		295
	}
}

ASK_TO_EMBARGO_INTERACTION_DECLINE_EVENT = {
	events = {
		296
	}
}

MAKE_CONSORT_INTERACTION_ACCEPT_EVENT = {
	events = {
		297
	}
}

MAKE_CONSORT_INTERACTION_DECLINE_EVENT = {
	events = {
		298
	}
}

ABSORB_CLAN_INTERACTION_ACCEPT_EVENT = {
	events = {
		503
	}
}

ABSORB_CLAN_INTERACTION_DECLINE_EVENT = {
	events = {
		504
	}
}

SPLIT_CLAN_INTERACTION_ACCEPT_EVENT = {
	events = {
		509
	}
}

SPLIT_CLAN_INTERACTION_DECLINE_EVENT = {
	events = {
		510
	}
}

FORM_BLOOD_OATH_INTERACTION_ACCEPT_EVENT = {
	events = {
		505
	}
}

FORM_BLOOD_OATH_INTERACTION_DECLINE_EVENT = {
	events = {
		506
	}
}

SETTLE_FEUD_INTERACTION_ACCEPT_EVENT = {
	events = {
		507
	}
}

SETTLE_FEUD_INTERACTION_DECLINE_EVENT = {
	events = {
		508
	}
}
FORM_ALLIANCE_INTERACTION_ACCEPT_EVENT = {
	events = {
		diploresponse.1
	}
}

FORM_ALLIANCE_INTERACTION_DECLINE_EVENT = {
	events = {
		diploresponse.2
	}
}

DISSOLVE_ALLIANCE_INTERACTION_ACCEPT_EVENT = {
	events = {
	}
}

DISSOLVE_ALLIANCE_INTERACTION_DECLINE_EVENT = {
	events = {
	}
}

BUY_FAVOR_INTERACTION_ACCEPT_EVENT = {
	events = {
		520
	}
}
BUY_FAVOR_INTERACTION_DECLINE_EVENT = {
	events = {
		521
	}
}

REQUEST_SUPPORT_INTERACTION_ACCEPT_EVENT = {
	events = {
		522
	}
}
REQUEST_SUPPORT_INTERACTION_DECLINE_EVENT = {
	events = {
		523
	}
}

FORM_NON_AGGRESSION_PACT_INTERACTION_ACCEPT_EVENT = {
	events = {
		524
	}
}
FORM_NON_AGGRESSION_PACT_INTERACTION_DECLINE_EVENT = {
	events = {
		525
	}
}

ASK_COUNCIL_POSITION_INTERACTION_ACCEPT_EVENT = {
	events = {
		526
	}
}
ASK_COUNCIL_POSITION_INTERACTION_DECLINE_EVENT = {
	events = {
		527
	}
}

ASK_REALM_PEACE_INTERACTION_ACCEPT_EVENT = {
	events = {
		528
	}
}
ASK_REALM_PEACE_INTERACTION_DECLINE_EVENT = {
	events = {
		529
	}
}

FORCE_JOIN_FACTION_INTERACTION_ACCEPT_EVENT = {
	events = {
		530
	}
}
FORCE_JOIN_FACTION_INTERACTION_DECLINE_EVENT = {
	events = {
		531
	}
}

ASK_TO_JOIN_AMBITION_INTERACTION_ACCEPT_EVENT = {
	events = {
		535
	}
}
ASK_TO_JOIN_AMBITION_INTERACTION_DECLINE_EVENT = {
	events = {
		536
	}
}

OFFER_CONSORT_INTERACTION_ACCEPT_EVENT = {
	events = {
		537
	}
}

GIVE_ARTIFACT_INTERACTION_ACCEPT_EVENT = {
	events = {
		538
	}
}

# never triggered, but reserved for CB use
on_warleader_death = {
	events = {
		251
		252
	}
}

# Respond to a proposed change of law
on_approve_law = {
	events = {
		290
		675
	}
}

# Respond to a proposed change of law
councilor_on_approve_law = {
	events = {
		750
	}
}

# Respond to a proposed change of de jure law
on_approve_de_jure_law = {
	events = {
		291
		292
		676
	}
}

# When rebels appear
on_rebel_revolt = {
	events = {
		1000025000	# Non-TOG Better Rebels
		1000025001	# Non-TOG Better Rebels
		TOG.1030 	# Heretic rebels reinforced
		TOG.1020	# Heretic rebels rise up
		TOG.1050 	# Nationalist rebels reinforced
		TOG.1040	# Nationalist rebels rise up
		TOG.1070 	# Religious rebels reinforced
		TOG.1060	# Religious rebels rise up
		TOG.1010 	# Peasant rebels reinforced
		TOG.1000 	# Peasant rebels rise up
	}
}

# When province defects to rebels
on_defect_to_rebels = {
	events = {
		610
	}
}

# When rebels disperse
on_defect_from_rebels = {
	events = {
		615
	}
}

# When a mission succeeds
on_crusade_success = {
	events = {
		620
		CM.10016  # Chronicle entry
	}
}

# When a mission fails
on_crusade_failure = {
	events = {
		621
		CM.10017  # Chronicle entry
	}
}

# When a mission invalidates
on_crusade_invalid = {
	events = {
		534
	}
}

# When a pagan ruler forces a prisoner to be his consort
on_forced_consort = {
	events = {
		660
	}
}

# When a pagan religion is reformed
on_reform_religion = {
	events = {
		670
		316000			# Brythonic reformation check
		316001			# Brythonic pagan reformation
		316101			# Pictish pagan reformation
		316201			# Gaelic pagan reformation
	}
}

# When the religion changes in a county, ROOT is province. FROM has the old religion.
on_county_religion_change = {
	events = {
		SoA.4121
		#MNM.6206 #Convert province assassin quest
	}
}

# When a character accepts religious conversion (the diplomatic action)
# FROMFROM is the demander. FROM is the vassal. ROOT is the character. Fires for the vassal and each of his courtiers and vassals.
on_vassal_accepts_religious_conversion = {
	events = {
		39700 # Hidden event actually changing the religion
	}
}

# A heresy has become the new norm, replacing the old orthodoxy
on_heresy_takeover = {
	events = {
		SoA.4200
	}
}

# Fires for a newly elected Doge. FROM is the previous (dying or abdicating) doge.
on_become_doge = {
	events = {
		# 701
	}
}

on_elective_gavelkind_succession = {
	events = {
		63103
	}
}

# Fires when a navy moves into a port. Starts in unit scope, FROM is the owner.
on_entering_port = {
	events = {
		# 700
	}
}

# Fires when a cardinal is elected. SoA only! FROM is the Religious head.
on_rel_elector_chosen = {
}

# Fires when a Pope is elected. SoA only! FROM is the previous Religious Head
on_rel_head_chosen = {
	events = {
		# 704
	}
}

# ROOT is the looter, FROM is the settlement title
on_settlement_looted = {
}

# ROOT is the navy's owner, FROM is the province
on_navy_returns_with_loot = {
	events = {
		TOG.3404 #Prosperity gain from loot
	}
}

# ROOT is the creating character, FROM is the title
on_create_title = {
	events = {
		CM.10021
		# 739 # Got Land achievement
	}
}

# ROOT is the character, FROM is the title, FROMFROM is the old holder
on_new_holder = {
	events = {
		HL.4999 #Preserve Nomad Culture
		HL.4996 #Clear Nomad Agitation when conquered by a non-nomad
		HL.4812 #Clear nomadic pillage holding modifiers upon succession/conquest
		HL.4811 #Clear the 'Rampaging Nomads'-Modifier when conquered by a non-nomad
		HL.140 #Landless nomad gains a title.
		ZE.7000 # Check for Gain Any Title ambition.
		ZE.6010 #ambition event for unlanded son.
		RIP.12098 #check if we need to remove in_seclusion.
		RIP.11715 #Removes crown focus on new holder
		533
		# MNM.6990 #Makes sure d_hashshashin owner is always shiite & member of the_assassins
		# 738 # Black Pope achievement
		MNM.1215 # The Hermetics Scrying Power result (for new holder)
		MNM.1216 # The Hermetics Scrying Power result (for old holder)

		# Clean up zoroastrian pets on province modifiers in case capital lost
		# ZP.7
		
		#JD.60204 # Rebel General's Empire continues temple names, triggers for any title with the uses_temple_names_by_script title flag
		
		#539 # Fix adventurers turning Tribal land Feudal
		
		55004	# When granting land to newly created vassals, maintain government form
		
		315901 # Make sure legion commanders don't have any other titles
		315902 # Legionary succession
		301444 # Make sure Benoc Folc holder doesn't have any other titles
		301445
		312116 # Decline of Dumnonia event
		313112 # anglia_unstable_realm modifier
		313095 # sussex_unstable_realm modifier
		315109 # Transfer Senate title flag
		31203122 # Master succession event
		
		319021	# Special maintenance
		#3129960
		#3129961
	}
}

# ROOT is the character, FROM is the title, FROMFROM is the old holder
on_new_holder_inheritance = {
	events = {
		HL.4812 #Clear nomadic pillage holding modifiers upon succession/conquest
		CM.10039 # Chronicle entry
		HL.140 #Landless nomad gains a title.
		RIP.11715 #Removes crown focus on new holder
		533
		# MNM.6990 #Makes sure d_hashshashin owner is always shiite & member of the_assassins
		# 738 # Black Pope achievement
		MNM.1215 # The Hermetics Scrying Power result (for new holder)
		MNM.1216 # The Hermetics Scrying Power result (for old holder)
		
		312999
		3160400 # Death of Brythonic Archdruid (actual event to move title)
		3160401 # Death of Brythonic Archdruid (bounce event if proper heir already has title)
		3161400 # Death of Pictish Archdruid (actual event to move title)
		3161401 # Death of Pictish Archdruid (bounce event if proper heir already has title)
		3162400 # Death of Gaelic Archdruid (actual event to move title)
		3162401 # Death of Gaelic Archdruid (bounce event if proper heir already has title)
		foederati.12
		314430
		314431
		313015
		
		315901 # Make sure legion commanders don't have any other titles
		315902 # Legionary succession
		301444 # Make sure Benoc Folc holder doesn't have any other titles
		301445
		312116 # Decline of Dumnonia event
		313112 # anglia_unstable_realm modifier
		313095 # sussex_unstable_realm modifier
		315109 # Transfer Senate title flag
		315155 # Death of revolting Soissons tributary
		31203122 # Master succession event
		319006 # Assign correct government to inheriting mayors
		
		319021	# Special maintenance
	}
}

# ROOT is the character, FROM is the title, FROMFROM is the old holder
on_new_holder_usurpation = {
	events = {
		HL.4999 #Preserve Nomad Culture
		HL.4996 #Clear Nomad Agitation when conquered by a non-nomad
		HL.4812 #Clear nomadic pillage holding modifiers upon succession/conquest
		HL.4811 #Clear the 'Rampaging Nomads'-Modifier when conquered by a non-nomad
		HL.140 #Landless nomad gains a title.
		CM.10022
		RIP.11715 #Removes crown focus on new holder
		533
		# MNM.6990 #Makes sure d_hashshashin owner is always shiite & member of the_assassins
		# 738 # Black Pope achievement
		MNM.1215 # The Hermetics Scrying Power result (for new holder)
		MNM.1216 # The Hermetics Scrying Power result (for old holder)
#		MNM.6230 # Clearing covert province quest if new owner
		
		#539 # Fix adventurers turning Tribal land Feudal
		
		314430
		314431
		
		301444 # Make sure Benoc Folc holder doesn't have any other titles
		301445
		312116 # Decline of Dumnonia event
		313112 # anglia_unstable_realm modifier
		313095 # sussex_unstable_realm modifier
		315109 # Transfer Senate title flag
		31203122 # Master succession event
		
		319021	# Special maintenance
		#3129960
		#3129961
	}
}

# Fires at the end of each year if the chronicle is empty
on_create_chronicle_if_empty = {
	random_events = {
		100 = CM.10500
		100 = CM.10502
		100 = CM.10504
		100 = CM.10506
		100 = CM.10507
		100 = CM.10509
		100 = CM.10511
		100 = CM.10513
		100 = CM.10515
		100 = CM.10517
		100 = CM.10519
		100 = CM.10521
		100 = CM.10523
		100 = CM.10525
		100 = CM.10527
		100 = CM.10529
	}
}

# Fires when the player changes character
# FROM is the old character, ROOT is the new holder
on_chronicle_owner_change = {
	events = {
		CM.10001
	}
}

# Fires when the game starts (not from saves)
on_chronicle_start = {
	events = {
		CM.10000
		3120312		# Startup Event
		history.31	# Meirchion's fertility
		
		history.1002	# AAtE introduction
		history.3002 # Vortigern introduction
		
		301700		# Manichean trait setup
		319003 		# Roman culture trait setup
	}
}

# Character converts religion, for whatever reason. ROOT is the character after conversion and the FROM scope has the old religion.
on_character_convert_religion = {
	events = {
		CM.10026
		TOG.7101 #Removes main deity for defensive pagans
		
		# If switched religion then trait is gone and we need to clean up modifiers for zoroastrian pets
		# ZP.6
		
		316047			# Conversion of Brythonic Archdruid
		316055			# Conversion of Brythonic Archdruid Successor
		316147			# Conversion of Pictish Archdruid
		316155			# Conversion of Pictish Archdruid Successor
		316247			# Conversion of Gaelic Archdruid
		316255			# Conversion of Gaelic Archdruid Successor
		
		#39350 # Assign pagan religion trait
		301702 # Assign Manichean caste trait
	}
}

# Character converts secret religion, for whatever reason. ROOT is the character after conversion and the FROM scope has the old religion. Note that this fires even when the secret religion is reset as a result of the character converting to it, or if the character didn't previously have a secret religion
on_character_convert_secret_religion = {
	events = {
	}
}

# Character converts culture, for whatever reason. ROOT is the character after conversion and the FROM scope has the old culture.
on_character_convert_culture = {
	events = {
		CM.10027
		317900
		317901
		314430
		314431
		319002		# Remove Roman cultural traits
	}
}

on_acquire_nickname = {
	events = {
		CM.10028
	}
}

# From = Attacker, Root = Defender
on_war_started = {
	events = {
		CM.10012
		#JD.30020 # Western protectorate receives reinforcements from China
		#JD.30030 # Western protectorate receives reinforcements from China
		#JD.30015 # Clean up trade contracts
	}
}

# From = Attacker, Root = Defender
on_war_ended_victory = {
	events = {
		CM.10038
		#JD.30051 # Offmap China end of war clean-up
	}
}

# From = Attacker, Root = Defender
on_war_ended_whitepeace = {
	events = {
		CM.10040
		#JD.30050 # Offmap China end of war clean-up
	}
}

# From = Attacker, Root = Defender
on_war_ended_defeat = {
	events = {
		CM.10041
		#JD.30052 # Offmap China end of war clean-up
		316043			# Check if Brythonic Archdruid is unlanded
		316143			# Check if Pictish Archdruid is unlanded
		316243			# Check if Gaelic Archdruid is unlanded
	}
}

# From = Attacker, Root = Defender
on_war_ended_invalid = {
	events = {
		#JD.30050 # Offmap China end of war clean-up
	}
}

# From = Divorcer, Root = Spouse, New = Religious head if applicable
on_divorce = {
	events = {
	}
}

# ROOT = Builder, FROM = Title
on_settlement_construction_start = {
	events = {
		#JD.40002 # Start constructing a city on the Silk Road for trade competition
	}
}

# ROOT = Builder, FROM = Province
on_trade_post_construction_start = {
	events = {
	}
}

# ROOT = Builder, FROM = Province
on_fort_construction_start = {
	events = {
	}
}

# ROOT = Builder, FROM = Province
on_hospital_construction_start = {
	events = {
	}
}

# ROOT = Builder, FROM = Title
on_settlement_construction_completed = {
	events = {
		44482
		55006
		MNM.4024
		#JD.40003 # Finish constructing a city on the Silk Road for trade competition
	}
}

# ROOT = Builder, FROM = Province
on_trade_post_construction_completed = {
	events = {
	}
}

# ROOT = Builder, FROM = Province
on_fort_construction_completed = {
	events = {
	}
}

# ROOT = Builder, FROM = Province
on_hospital_construction_completed = {
	events = {
		# 733 # Achievement Hospitable
	}
}

# ROOT = Builder, FROM = The Holding Title
on_holding_building_start = {
	events = {
		RIP.30100
	}
}

# ROOT = Starter, FROM = Target 
on_feud_started = {
	events = {
	}
}

# ROOT = Ender, FROM = Target 
on_feud_ended = {
}

on_blood_brother_death = {
	events = {
	}
}

# ROOT = AI character
on_ai_end_raid = {
	events = {
	}
}

on_mercenary_hired = {
	events = {
		# ZE.10038
	}
}

on_mercenary_dismissed = {
	events = {
		# ZE.10039
	}
}
# ROOT = target, FROM = starter, FROMFROM = chosen replacement
on_mercenary_captain_replacement = {
	events = {
		# ZE.11040
	}
}

on_enforce_peace = {
}

on_enforce_peace_start = {
}

on_enforce_peace_six_vassals = {
	events = {
		# 727
	}
}

on_law_vote_passed = {
	events = {
		# 726
	}
}

on_law_vote_failed = {
}

on_player_mercenary_income = {
	events = {
		# 728
	}
}

on_outbreak = {
	events = {
		312140
		#RIP.10000
		#RIP.4000
	}
}

on_province_major_modifier = {
	events = {
		910030
	}
}

# Fires every two years for characters who are members of any society
on_society_bi_yearly_pulse = {
	events = {
		#MNM.6199 # Assassins quest tombola
		#MNM.7200 # Devil Worshipers quest tombola
		MNM.4000 # Monastic order quest tombola
		MNM.3000 # Secret religious society quest tombola
		MNM.1000 # Hermetics quest tombola
		#MNM.7000 # Devil Worshipers: soul corruption chance
	}
	
	random_events = {
		50 = MNM.10020 # Criminal societies: stressed
		100 = MNM.20000 # Devil Worshippers: Orgy
		100 = MNM.20010 # Devil Worshippers: Night on the Town
		75 = MNM.20030 # Devil Worshippers: Grand Summoning
		100 = MNM.20040 # Devil Worshippers: Impersonating Priests
		100 = MNM.20060 # Devil Worshippers: Infernal Choir (only with Rivals)
		75 = MNM.7854 # Devil Worshipers: Demon Hunters Attack
		100 = MNM.6899 # Assassins: friend or foe?
		100 = MNM.6910 # Assassins: assisting a murder plot
		50 = MNM.6920 # Assassins: blackmailing superior
		100 = MNM.3260 # Monastic Orders: Advising a Poet
		100 = MNM.4200 # Monastic Orders: Learning about Roses
		100 = MNM.4210 # Monastic Orders: Fellow member drowsing off
		100 = MNM.4435 # Monastic Orders: Friendship & Love
		100 = MNM.4217 # Monastic Order: Burn heretical books
		50 = MNM.4610 # Monastic Orders: Monastery has Artifact
		100 = MNM.3920 # Secret Religious societies: Worried member
		100 = MNM.3930 # Secret Religious societies: Fellow society member goes for a round
		100 = MNM.3505 # Secret Religious societies: Get help from another member with problematic trait
		100 = MNM.3500 # Secret Religious societies: I am so stressed
		50 = MNM.1620 # Hermetic Society: Divine Summoning
		50 = MNM.1460 # Hermetic Society: Gathering of the Minds
		50 = MNM.5110 # Hermetic Society: Warding off Evil
		50 = MNM.10040 # Every society: Gain rival
		50 = MNM.10043 # Every society: Gain friend (or possibly lover...?)
		150 = 0 # Nothing
	}
}

# A character has switched their society interest
# Root = Character
# From = Society
on_character_switch_society_interest = {
	events = {
		MNM.10010
		MNM.10024 # Backup for refounding societies
	}
}

# A character ranks up in their society, or becomes grandmaster
# Root = Character
# From = Society
on_character_society_rank_up = {
	events = {
		#735 # Dark Lord achievement
		#736 # Birthright achievement
		#737 # Jihad Sultan achievement
		MNM.1750 # Grandmaster notification event
	}
}

# A character ranks down in their society
# Root = Character
# From = Society
on_character_society_rank_down = {
	events = {
	}
}

# A character joins a society. The has_game_started trigger can be useful to avoid firing events from auto-assignment of characters at game start
# Root = Character
# From = Society
on_character_join_society = {
	events = {
	}
}

# A character leaves or is forced to leave a society
# Root = Character
# From = Society
on_character_leave_society = {
	events = {
		MNM.10018 #clears on-going event flags and effects
		MNM.1611 # Clears Apprentice minor titles
	}
}
# A character asks to join a society. Only works on player
# Root = Character
# From = Society
on_character_ask_to_join_society = {
	events = {
		MNM.4450 #Join Monastic Order
		MNM.100 #Join Hermetics
		MNM.10024 # Backup for refounding societies
	}
}

# A character is removed from society for failing the potential trigger.
# Root = Character
# From = Society
on_character_kicked_from_society = {
	events = {
		MNM.10021
	}
}

# A character stops showing interest in a society for failing the CanJoin trigger.
# Root = Character
# From = Society
on_character_stop_showing_interest = {
	events = {
		MNM.10019
	}
}

# Someone joins a society that has no members
# Root = Character
# From = Society
on_society_created = {
	events = {
	}
}

# The last member of a society leaves the society and is not replaced
# Root = Character
# From = Society
on_society_destroyed = {
	events = {
	}
}

# A character selects a focus
# Root = Character
on_focus_selected = {
	events = {
	}
}

# A character succeeds in a quest. This happens just before the quest disappears, so you can access the quest itself. Only invoked when a quest is cleared via script. E.G., does not happen on death
# Root = Character
on_quest_success = {
	events = {
		MNM.6666
	}
}

# A character fails a quest. This happens just before the quest disappears, so you can access the quest itself. Only invoked when a quest is cleared via script. E.G., does not happen on death
# Root = Character
on_quest_failure = {
	events = {
		MNM.6667
	}
}

# An indestructible society failed to find a new leader from existing characters
# Root = Society
# From = Previous leader
on_society_failed_to_find_new_leader = {
	events = {
	}
}

on_artifact_inheritance = {
	events = {
		MNM.5107 # for inheriting ingredients
	}
}

# An offmap power changes its policy. Triggers for the governor
# Root = Governor
# From = Offmap
on_offmap_policy_changed = {
	events = {
		#JD.30501 # Print policy update to logs
		#JD.50020 # News from China about Policy Change
		#JD.50400 # Update Silk Road values
		#JD.32298 # Abandon kowtow when China goes Isolationist
	}
}

# An offmap power changes its status. Triggers for the governor
# Root = Governor
# From = Offmap
on_offmap_status_changed = {
	events = {
		#JD.30502 # Print status update to logs
		#JD.50030 # News from China about Status Change
		#JD.50400 # Update Silk Road values
	}
}


# An offmap power changes its governor. Triggers for the new governor
# Root = New governor
# From = Old governor
# FromFrom = Offmap
on_offmap_governor_changed = {
	events = {
	}
}

# An offmap power changes its ruler. Triggers for the new ruler
# Root = New ruler
# From = Old ruler
# FromFrom = Offmap
on_offmap_ruler_changed = {
	events = {
		#JD.30503 # Logging new ruler data
		#JD.10005 # In case of dynasty change...
		#JD.10202 # Delayed cleanup event. Makes sure the new administration may also launch Chinese invasions.
		#JD.50000 # Select a new Policy and send News Event
		#JD.31000 # Logging for emperor statistics
	}
}

# Happens once a month on a random day. Triggers for the governor
# Root = Governor
# From = Offmap
on_offmap_monthly_pulse = {
	events = {
		#JD.10121 #Fallback event to make sure that Displaced Royals, Jurchen Invaders, and Rebel Generals actually appear (regardless of new administration in China or not)
	}
	random_events = {
	}
}

# Happens once a year during a random monthly update. Triggers for the governor (once for each offmap governor, if there's more than one)
# Root = Governor
# From = Offmap
on_offmap_yearly_pulse = {
	events = {
		#JD.10100 # Chinese Invasion tombola
		#JD.40000 # Chinese Trade Competition
		#JD.30500 # China logging variable increment
		#JD.10200 # Chinese Invasion clean-up event - REGULAR (tributary invasion + other flags)
		#JD.10201 # Chinese Invasion clean-up event - MAJOR Invasion (rare)
	}
	
	random_events = {
		10000 = 0
		#300 = JD.50100 # Status returns to 'Stable'
		#150 = JD.50120 # Status changes to 'Unrest'
		#50 = JD.50140 # Status changes to 'Mongol Invasion'
		#450 = JD.50160 # 'Mongol Invasion' Resolution
		#50 = JD.50180 # Status changes to 'Jurchen Invasion'
		#450 = JD.50200 # 'Jurchen Invasion' Resolution
		#100 = JD.50220 # Status changes to 'Great Famine'
		#100 = JD.50240 # Status changes to 'Devastating Plague'
		#100 = JD.50260 # Status changes to 'Golden Age'
		#350 = JD.50280 # Status changes to 'Civil War'
		#400 = JD.50300 # 'Civil War' Resolution
	}
}

# Happens just prior to the EU4 converter converting the game
# Root = Player. Random character if in observe mode
on_eu4_conversion_start = {
	events = {
		#JD.60205 # Prepare on map China for conversion
	}
}

# Happens just after the EU4 converter is done converting the game
# Root = Player. Random character if in observe mode
on_eu4_conversion_done = {
	events = {
		#JD.60206 # Restore on map China after conversion
	}
}

# Happens when tyranny is caused by the code rather than script. That is; won't trigger if you use "add_opinion_modifier" to add tyranny. Fires for every character that gets the "tyrant" opinion penalty towards the tyrant
# Root = Upset character
# From = Tyrant
on_tyranny_gained = {
	events = {
	}
}

# Happens when tyranny is caused by the code rather than script. That is; won't trigger if you use "add_opinion_modifier" to add tyranny. Only happens for the tyrant themselves, rather than for each of their "victims", so happens exactly once per tyranny-giving action
# Root = Tyrant
on_tyranny_gained_tyrant_only = {
	events = {
	}
}

# Triggers if someone tries to revoke someone's title, and the person refuses and starts a war in response
# Root = The person declaring war
# From = The revoker
# FromFrom = The title being revoked
on_revoke_attempted_started_war = {
	events = {
		681
 	}
}

# Triggers if someone tries to retract someone's vassal, and the person refuses and starts a war in response
# Root = The person declaring war
# From = The revoker
# FromFrom = The vassal title being retracted
on_retract_vassal_attempted_started_war = {
	events = {
		682
 	}
}

# Triggers if someone tries to absorb a clan, and the person refuses and starts a war in response
# Root = The person declaring war
# From = The revoker
on_absorb_clan_attempted_started_war = {
	events = {
		683
 	}
}

# Triggers if someone tries to split a clan, and the person refuses and starts a war in response
# Root = The person declaring war
# From = The revoker
on_split_clan_attempted_started_war = {
	events = {
		684
 	}
}