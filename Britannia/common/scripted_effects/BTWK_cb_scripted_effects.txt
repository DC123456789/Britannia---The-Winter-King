county_conquest_on_success_title_effect = {
	any_direct_de_jure_vassal_title = { # take all baronies under the one we're fighting for
		limit = {
			has_holder = yes
			holder_scope = {
				NOT = { culture = ROOT }
				OR = {
					character = FROM
					is_liege_or_above = FROM
				}
			}
		}
		usurp_title_plus_barony_if_unlanded = ROOT
	}
	usurp_title_plus_barony_if_unlanded = ROOT
	any_attacker = {
		limit = { character = ROOT }
		show_scope_change = no
		participation_scaled_prestige = 75
	}
	any_attacker = {
		limit = {
			character = ROOT
			NOT = { religion_group = christian }
		}
		piety = 50
	}
	any_attacker = {
		limit = {
			NOT = { character = ROOT }
		}
		hidden_tooltip = { participation_scaled_prestige = 75 }
	}
	if = {
		limit = {
			higher_tier_than = BARON
			NOT = { culture = ROOT }
		}
		hidden_tooltip = { conquest_culture = ROOT }
	}
	if = {
		limit = { ROOT = { has_character_flag = foederate_revolt } }
		hidden_tooltip = { ROOT = { character_event = {	id = 313038 } } }
	}
	
	#To handle Warrior Lodge mission "Wage War" completion...
	attacker = { save_event_target_as = attacker_target }
	defender = { save_event_target_as = defender_target }

	if = { 
		limit = {
			event_target:attacker_target = { has_quest = quest_warrior_lodge_war }
			is_quest_target_of = event_target:attacker_target
		}
		event_target:attacker_target = {
			show_scope_change = no
			tooltip = { clr_quest = quest_warrior_lodge_war }
			set_character_flag = won_war@event_target:defender_target
			#character_event = { id = HF.10514 days = 3 } #Sent from on_action instead
		}
	}
}

county_conquest_on_fail_title_effect = {
	ROOT = {
		show_scope_change = no
		prestige = -100
	}
	if = {
		limit = { ROOT = { has_character_flag = foederate_revolt } }
		hidden_tooltip = { ROOT = { character_event = {	id = 313040 } } }
	}
	any_defender = {
		limit = { character = FROM }
		show_scope_change = no
		participation_scaled_prestige = 50
	}
	any_defender = {
		limit = { NOT = { character = FROM } }
		hidden_tooltip = { participation_scaled_prestige = 50 }
	}
	
	#To handle Warrior Lodge mission "Wage War" completion...
	attacker = { save_event_target_as = attacker_target }
	defender = { save_event_target_as = defender_target }

	if = { 
		limit = {
			event_target:attacker_target = { has_quest = quest_warrior_lodge_war }
			is_quest_target_of = event_target:attacker_target
		}
		event_target:attacker_target = {
			show_scope_change = no
			tooltip = { clr_quest = quest_warrior_lodge_war }
			set_character_flag = white_peace@event_target:defender_target
			#character_event = { id = HF.10514 days = 3 } #Sent from on_action instead
		}
	}
}

county_conquest_on_reverse_demand_effect = {
	ROOT = {
		show_scope_change = no
		prestige = -200
		transfer_scaled_wealth = {
			to = FROM
			value = 4.0
		}
	}
	if = {
		limit = { ROOT = { has_character_flag = foederate_revolt } }
		hidden_tooltip = { ROOT = { character_event = {	id = 313039 } } }
	}
	any_defender = {
		limit = { character = FROM }
		show_scope_change = no
		participation_scaled_prestige = 100
	}
	any_defender = {
		limit = { NOT = { character = FROM } }
		hidden_tooltip = { participation_scaled_prestige = 100 }
	}
}

county_conquest_on_reverse_demand_title_effect = {
	#To handle Warrior Lodge mission "Wage War" completion...
	attacker = { save_event_target_as = attacker_target }
	defender = { save_event_target_as = defender_target }

	if = { 
		limit = {
			event_target:attacker_target = { has_quest = quest_warrior_lodge_war }
			is_quest_target_of = event_target:attacker_target
		}
		event_target:attacker_target = {
			show_scope_change = no
			tooltip = { clr_quest = quest_warrior_lodge_war }
			set_character_flag = lost_war@event_target:defender_target
			#character_event = { id = HF.10514 days = 3 } #Sent from on_action instead
		}
	}
}
depose_high_king_britannia_cb_on_success_effect = {
	FROM = {
		prestige = -500
	}

	ROOT = {
		prestige = 100
		participation_scaled_prestige = 100
	}
	any_attacker = {
		limit = { NOT = { character = ROOT } }
		hidden_tooltip = { participation_scaled_prestige = 150 }
	}
	if = {
		limit = { NOT = { has_global_flag = britannia_formalized_high_kingship } }
		custom_tooltip = {
			text = depose_high_king_britannia_cb_succ_tip
		}
		hidden_tooltip = {
			FROM = { character_event = { id = 312166 } }
			ROOT = {
				if = {
					limit = {
						is_tributary = yes
						suzerain = {
							OR = {
								character = FROM
								any_liege = {
									character = FROM
								}
							}
						}
					}
					suzerain = {
						remove_tributary = PREV
					}
				}
				any_vassal = {
					limit = {
						is_tributary = yes
						suzerain = {
							OR = {
								character = FROM
								any_liege = {
									character = FROM
								}
							}
						}
					}
					suzerain = {
						remove_tributary = PREV
					}
				}
			}
		}
	}
	else = {		# Standard depose liege effect
		FROM = {
			if = {
				limit = { NOT = { has_dlc = "Zeus" } }
				any_demesne_title = { # All titles
					limit = {
						OR = {
							tier = king
							tier = emperor
						}
	#					is_titular = no
						NOT = { has_law = crown_authority_0 }
					}
					if = {
						limit = { has_law = crown_authority_1 }
						add_law = crown_authority_0
					}
					if = {
						limit = { has_law = crown_authority_2 }
						add_law = crown_authority_1
					}
					if = {
						limit = { has_law = crown_authority_3 }
						add_law = crown_authority_2
					}
					if = {
						limit = { has_law = crown_authority_4 }
						add_law = crown_authority_3
					}
				}
			}
			
			primary_title = { set_title_flag = former_primary_title }
			if = {
				limit = { NOT = { government = tribal_government } }
				abdicate = yes
			}
		}
		
		# Transfer foederati
		hidden_tooltip = {
			any_title = { 
				limit = { 
					has_title_flag = former_primary_title 
					higher_tier_than = COUNT
				}
				holder_scope = { 
					character_event = { id = foederati.21 } 
				}
			}
		}
	}
}

usurp_all_top_level_titles_to_ROOT_effect = {
	if = {
		limit = { tier = BARON }
		any_demesne_title = {
			limit = { tier = BARON }
			usurp_title = ROOT
		}
	}
	if = {
		limit = { tier = COUNT }
		any_demesne_title = {
			limit = { tier = COUNT }
			usurp_title = ROOT
		}
	}
	if = {
		limit = { tier = DUKE }
		any_demesne_title = {
			limit = { tier = DUKE }
			usurp_title = ROOT
		}
	}
	if = {
		limit = { tier = KING }
		any_demesne_title = {
			limit = { tier = KING }
			usurp_title = ROOT
		}
	}
	if = {
		limit = { tier = EMPEROR }
		any_demesne_title = {
			limit = { tier = EMPEROR }
			usurp_title = ROOT
		}
	}
}

vassalize_under_ROOT_tribal_effect = {
	# First, just vassalize if possible
	if = {
		limit = { lower_tier_than = ROOT }
		set_defacto_liege = ROOT
	}
	# If not, usurp FROM's top-level titles if FROM is duke or higher
	else_if = {
		limit = {
			higher_tier_than = COUNT
		}
		usurp_all_top_level_titles_to_ROOT_effect = yes
		set_defacto_liege = ROOT
	}
	# If it's a count subjugating a count, try to give ROOT his capital duchy
	else_if = {
		limit = {
			ROOT = { 
				capital_scope = { 
					duchy = {
						has_holder = no
						ROOT = { is_landed_title_allowed = PREV }
					}
				}
			}
		}
		ROOT = {
			capital_scope = { 
				duchy = {
					grant_title = ROOT
				}
			}
			set_defacto_vassal = PREV
		}
	}
	# Otherwise, try any duchy that ROOT holds a province in
	else_if = {
		limit = {
			ROOT = { 
				any_demesne_title = { 
					duchy = {
						has_holder = no
						ROOT = { is_landed_title_allowed = PREV }
					}
				}
			}
		}
		ROOT = {
			random_demesne_title = { 
				limit = {
					duchy = {
						has_holder = no
						ROOT = { is_landed_title_allowed = PREV }
					}
				}
				duchy = {
					grant_title = ROOT
				}
			}
			set_defacto_vassal = PREV
		}
	}
	# Otherwise, try any duchy that FROM holds a province in (since ROOT will rule over FROM after this)
	else_if = {
		limit = {
			any_demesne_title = { 
				duchy = {
					has_holder = no
					ROOT = { is_landed_title_allowed = PREV }
				}
			}
		}
		random_demesne_title = { 
			limit = {
				duchy = {
					has_holder = no
					ROOT = { is_landed_title_allowed = PREV }
				}
			}
			duchy = {
				grant_title = ROOT
			}
		}
		set_defacto_vassal = ROOT
	}	
	# If not, make a temporary custom duchy title for ROOT to hold
	else = {
		ROOT = {
			primary_title = {
				create_title = {
					tier = DUKE
					landless = no
					temporary = no
					custom_created = yes
					culture = ROOT
					holder = ROOT
					base_title = THIS
					copy_title_laws = yes
				}
				new_title = {
					set_title_flag = temporary_tribal_title
				}
			}
			set_defacto_vassal = PREV
		}
	}
}

# Vassalizes all provinces with the province flag vassalize_province held by the current scope to ROOT
# Clears the flag after effect finishes executing to avoid possible collisions with subsequent calls
vassalize_all_flagged_provinces_to_ROOT_effect = {
	ROOT = { save_event_target_as = vassalization_event_target }
	vassalize_all_flagged_provinces_to_event_target_effect = yes
}

# Vassalizes all provinces with the province flag vassalize_province held by the current scope to 
# the event target vassalization_event_target
vassalize_all_flagged_provinces_to_event_target_effect = {
	any_realm_lord = {
		limit = {
			capital_scope = {
				has_province_flag = vassalize_province
			}
			NOT = { character = PREV }
			higher_tier_than = BARON
		}
		set_defacto_liege = event_target:vassalization_event_target
		opinion = {
			modifier = opinion_subjugated
			who = event_target:vassalization_event_target
			months = 120
		}
		any_demesne_title = {
			limit = {
				lower_tier_than = DUKE
				NOR = {
					county = {
						has_province_flag = vassalize_province
					}
					location = {
						has_province_flag = vassalize_province
					}
				}
			}
			usurp_title = PREVPREV
		}
		# Return any vassals not in the vassalization zone
		any_vassal = {
			limit = {
				capital_scope = {
					NOT = { has_province_flag = vassalize_province }
				}
			}	
			set_defacto_liege = PREVPREV
			any_demesne_title = {
				limit = {
					lower_tier_than = DUKE
					OR = {
						county = {
							has_province_flag = vassalize_province
						}
						location = {
							has_province_flag = vassalize_province
						}
					}
				}
				usurp_title = PREVPREV
			}
			# Return any of THEIR vassals that are in the vassalization zone
			any_vassal = {
				limit = {
					capital_scope = {
						has_province_flag = vassalize_province
					}
				}	
				set_defacto_liege = PREVPREV
				any_demesne_title = {
					limit = {
						lower_tier_than = DUKE
						NOR = {
							county = {
								has_province_flag = vassalize_province
							}
							location = {
								has_province_flag = vassalize_province
							}
						}
					}
					usurp_title = PREVPREV
				}
			}
		}
	}
	any_realm_lord = {
		limit = {
			capital_scope = {
				NOT = { has_province_flag = vassalize_province }
			}
			NOT = { character = PREV }
		}
		any_demesne_title = {
			limit = {
				lower_tier_than = DUKE
				OR = {
					county = {
						has_province_flag = vassalize_province
					}
					location = {
						has_province_flag = vassalize_province
					}
				}
			}
			usurp_title = event_target:vassalization_event_target
		}
	}
	any_demesne_title = {
		limit = {
			lower_tier_than = DUKE
			OR = {
				county = {
					has_province_flag = vassalize_province
				}
				location = {
					has_province_flag = vassalize_province
				}
			}
		}
		usurp_title = event_target:vassalization_event_target
	}
	any_realm_lord = {
		limit = {
			capital_scope = {
				has_province_flag = vassalize_province
			}
			NOT = { character = PREV }
			tier = BARON
		}
		capital_scope = {
			owner = {
				set_defacto_vassal = PREVPREV
			}
		}
		any_demesne_title = {
			limit = {
				county = {
					NOT = { has_province_flag = vassalize_province }
				}
			}
			county = {
				owner = {
					usurp_title = PREVPREV
				}
			}
		}
	}
	any_province = {
		clr_province_flag = vassalize_province
	}
}

check_recalculate_aengland_variables_effect = {
	hidden_tooltip = {
		if = {
			limit = {
				OR = {
					ROOT = { holds_anglo_saxon_kingdom_trigger = yes }
					ROOT = { has_landed_title = e_aengland }
					FROM = { holds_anglo_saxon_kingdom_trigger = yes }
					FROM = { has_landed_title = e_aengland }
				}
			}
			1 = { province_event = { id = 320210 } }
		}
	}
}