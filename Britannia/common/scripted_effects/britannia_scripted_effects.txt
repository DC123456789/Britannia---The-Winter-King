#	Example:
# 
#	example_effect = {
#		treasury = 100
#		prestige = 50
#	}
#
#
#	In a script file:
#
#	effect = {
#		example_effect = yes
#	}
#
# Naming convention:  xxxx_effect
#

### BRITANNIA CUSTOM SCRIPTED EFFECTS ###

restore_roman_provinces_gaul_effect = {
	set_global_flag = roman_provinces_gaul_restored
	
	if = {
		limit = { NOT = { has_global_flag = maxima_sequanorum_conquered_burgundy } }
		d_sequania = { de_jure_liege = k_maxima_sequanorum }
		d_equestria = { de_jure_liege = k_maxima_sequanorum }
		d_helvitioria = { de_jure_liege = k_maxima_sequanorum }
		d_rauricia = { de_jure_liege = k_maxima_sequanorum }
	}
	if = {
		limit = { NOT = { has_global_flag = lugdunensisprima_conquered_burgundy } }
		d_sapaudia = { de_jure_liege = k_lugdunesis_prima }
		d_aeduia = { de_jure_liege = k_lugdunesis_prima }
		d_nivernia = { de_jure_liege = k_lugdunesis_prima }
		d_cabiolonia = { de_jure_liege = k_lugdunesis_prima }
		d_matiscia = { de_jure_liege = k_lugdunesis_prima }
		d_lingonia = { de_jure_liege = k_lugdunesis_prima }
	}
	if = {
		limit = { NOT = { has_global_flag = viennensisprima_conquered_burgundy } }
		d_allobrigia = { de_jure_liege = k_viennensis_prima }
		d_segovellaunia = { de_jure_liege = k_viennensis_prima }
		d_helvia = { de_jure_liege = k_viennensis_prima }
		d_gratianopolitia = { de_jure_liege = k_viennensis_prima }
		d_vocontia = { de_jure_liege = k_viennensis_prima }
		d_genavensia = { de_jure_liege = k_viennensis_prima }
	}
	
	d_veliocassia = { de_jure_liege = k_lugdunesis_secunda }
	d_lexovia = { de_jure_liege = k_lugdunesis_secunda }
	d_eburovicia = { de_jure_liege = k_lugdunesis_secunda }
	d_sagia = { de_jure_liege = k_lugdunesis_secunda }
	d_baiocassia = { de_jure_liege = k_lugdunesis_secunda }
	
	if = {
		limit = { 
			OR = {
				has_global_flag = benoic_renamed
				AND = {
					has_global_flag = broceliande_renamed 
					has_global_flag = benoic_destroyed
				}
			}
		}
		d_normannia = { de_jure_liege = k_lugdunesis_secunda }
		d_trebes = { de_jure_liege = k_lugdunesis_secunda }
	}
	
	d_namnetia = { de_jure_liege = k_lugdunesis_tertia }
	d_andecavia = { de_jure_liege = k_lugdunesis_tertia }
	d_cenomannia = { de_jure_liege = k_lugdunesis_tertia }
	d_turonia = { de_jure_liege = k_lugdunesis_tertia }
	if = {
		limit = { has_global_flag = broceliande_renamed }
		d_broerec = { de_jure_liege = k_lugdunesis_tertia }
		d_domnonea = { de_jure_liege = k_lugdunesis_tertia }
		d_finis_terrae = { de_jure_liege = k_lugdunesis_tertia }
	}
	if = {
		limit = {
			OR = {
				has_global_flag = benoic_renamed
				AND = {
					has_global_flag = broceliande_renamed 
					has_global_flag = benoic_destroyed
				}
			}
		}
		d_redonia = { de_jure_liege = k_lugdunesis_tertia }
	}
	
	d_parisia = { de_jure_liege = k_lugdunesis_quartia }
	d_meldia = { de_jure_liege = k_lugdunesis_quartia }
	d_senonia = { de_jure_liege = k_lugdunesis_quartia }
	d_autissiodoria = { de_jure_liege = k_lugdunesis_quartia }
	d_aureliania = { de_jure_liege = k_lugdunesis_quartia }
	d_carnutia = { de_jure_liege = k_lugdunesis_quartia }
	d_blesum = { de_jure_liege = k_lugdunesis_quartia }
	d_tricassia = { de_jure_liege = k_lugdunesis_quartia }
	
	d_mediomatricia = { de_jure_liege = k_belgica_prima }
	d_treveria = { de_jure_liege = k_belgica_prima }
	d_verodunensia = { de_jure_liege = k_belgica_prima }
	d_leucia = { de_jure_liege = k_belgica_prima }
	
	d_alaudania = { de_jure_liege = k_belgica_secunda }
	d_catalaunia = { de_jure_liege = k_belgica_secunda }
	d_suessionia = { de_jure_liege = k_belgica_secunda }
	d_ambiania = { de_jure_liege = k_belgica_secunda }
	d_viromanduia = { de_jure_liege = k_belgica_secunda }
	d_bellovacia = { de_jure_liege = k_belgica_secunda }
	d_morinia = { de_jure_liege = k_belgica_secunda }
	d_atrebatia = { de_jure_liege = k_belgica_secunda }
	d_nervia = { de_jure_liege = k_belgica_secunda }
	d_menapia = { de_jure_liege = k_belgica_secunda }
	
	d_tribocia = { de_jure_liege = k_germania_prima }
	d_nemetia = { de_jure_liege = k_germania_prima }
	d_vangionia = { de_jure_liege = k_germania_prima }
	d_moguntiacensia = { de_jure_liege = k_germania_prima }
	
	d_toxandria = { de_jure_liege = k_germania_secunda }
	d_tungria = { de_jure_liege = k_germania_secunda }
	d_batavia = { de_jure_liege = k_germania_secunda }
	d_cananefatia = { de_jure_liege = k_germania_secunda }
	d_ubia = { de_jure_liege = k_germania_secunda }
	
	if = {
		limit = { NOT = { has_global_flag = aquitaniaprima_conquered_visigoths } }
		d_biturigia = { de_jure_liege = k_aquitania_prima }
		d_lemovicia = { de_jure_liege = k_aquitania_prima }
		d_alvernia = { de_jure_liege = k_aquitania_prima }
		d_gabalia = { de_jure_liege = k_aquitania_prima }
		d_vellavia = { de_jure_liege = k_aquitania_prima }
		d_cadurcia = { de_jure_liege = k_aquitania_prima }
		d_rutenia = { de_jure_liege = k_aquitania_prima }
		d_albigensia = { de_jure_liege = k_aquitania_prima }
	}
	if = {
		limit = { NOT = { has_global_flag = tolosa_conquered_visigoths } }
		d_tolosatia = { de_jure_liege = k_narbonensis_prima }
	}
	if = {
		limit = { NOT = { has_global_flag = aquitania_secunda_conquered_visigoths } }
		d_aquitania = { de_jure_liege = k_aquitania_secunda }
		d_santonia = { de_jure_liege = k_aquitania_secunda }
		d_ecolismensia = { de_jure_liege = k_aquitania_secunda }
		d_petrocoria = { de_jure_liege = k_aquitania_secunda }
		if = {
			limit = { 
				NAND = { 
					has_global_flag = aquitania_created 
					has_global_flag = basque_vasconia_created
				} 
			}
			d_viviscia = { de_jure_liege = k_aquitania_secunda }
			d_nitiobrogia = { de_jure_liege = k_aquitania_secunda }
		}
	}
	if = {
		limit = { 
			NOR = { 
				has_global_flag = aquitania_tertia_conquered_visigoths
				has_global_flag = basque_vasconia_created  
			} 
		}
		d_elusatia = { de_jure_liege = k_aquitania_tertia }
		d_auscia = { de_jure_liege = k_aquitania_tertia }
		d_lactoratia = { de_jure_liege = k_aquitania_tertia }
		d_convenia = { de_jure_liege = k_aquitania_tertia }
		d_consorannia = { de_jure_liege = k_aquitania_tertia }
		d_bigerria = { de_jure_liege = k_aquitania_tertia }
		d_aturensia = { de_jure_liege = k_aquitania_tertia }
		d_vasatia = { de_jure_liege = k_aquitania_tertia }
		d_benearia = { de_jure_liege = k_aquitania_tertia }
		d_iluronensia = { de_jure_liege = k_aquitania_tertia }
		d_boiatia = { de_jure_liege = k_aquitania_tertia }
		d_tarbellia = { de_jure_liege = k_aquitania_tertia }
	}
	if = {
		limit = { NOT = { has_global_flag = septimania_conquered_visigoths } }
		d_tolosatia = { de_jure_liege = k_narbonensis_prima }
		d_narbonensia = { de_jure_liege = k_narbonensis_prima }
		d_biterrensia = { de_jure_liege = k_narbonensis_prima }
		d_lutevania = { de_jure_liege = k_narbonensis_prima }
		d_nemausensia = { de_jure_liege = k_narbonensis_prima }
		d_ucetiensia = { de_jure_liege = k_narbonensis_prima }
	}
	if = {
		limit = { 
			NOR = { 
				has_global_flag = northern_provence_conquered_burgundy
				has_global_flag = northern_provence_conquered_ostrogoths  
			} 
		}
		d_avenionensia = { de_jure_liege = k_viennensis_secunda }
		d_arausicensia = { de_jure_liege = k_viennensis_secunda }
		d_tricastinensia = { de_jure_liege = k_viennensis_secunda }
		d_vasensia = { de_jure_liege = k_viennensis_secunda }
		d_carpentoratensia = { de_jure_liege = k_viennensis_secunda }
		d_cavilonensia = { de_jure_liege = k_viennensis_secunda }
		d_aptensia = { de_jure_liege = k_narbonensis_secunda }
		d_segesteronensia = { de_jure_liege = k_narbonensis_secunda }
		d_vapincensia = { de_jure_liege = k_narbonensis_secunda }
		d_ebrodunensia = { de_jure_liege = k_alpes_maritimae }
	}
	if = {
		limit = { 
			NOR = { 
				has_global_flag = southern_provence_conquered_visigoths 
				has_global_flag = southern_provence_conquered_ostrogoths 
				has_global_flag = southern_provence_conquered_burgundy 
			} 
		}
		d_arelatensia = { de_jure_liege = k_viennensis_secunda }
		d_massiliensia = { de_jure_liege = k_viennensis_secunda }
		d_tolonensia = { de_jure_liege = k_viennensis_secunda }
		d_aquensia = { de_jure_liege = k_narbonensis_secunda }
		d_regensia = { de_jure_liege = k_narbonensis_secunda }
		d_forojuliensia = { de_jure_liege = k_narbonensis_secunda }
		d_diniensia = { de_jure_liege = k_alpes_maritimae }
		d_sanitiensia = { de_jure_liege = k_alpes_maritimae }
		d_glannativia = { de_jure_liege = k_alpes_maritimae }
		d_vintiensia = { de_jure_liege = k_alpes_maritimae }
		d_antipolitania = { de_jure_liege = k_alpes_maritimae }
		d_cemelenensia = { de_jure_liege = k_alpes_maritimae }
	}
	
	#k_gaul = { destroy_landed_title = THIS }
}

convert_to_local_roman_culture_effect = {
	if = {
		limit = { is_romanoscandian_area_trigger = yes }
		culture = romanoscandian
	}
	else_if = {
		limit = { is_romanogermanic_area_trigger = yes }
		culture = romanogermanic
	}
	else_if = {
		limit = { is_romanoaquitanian_area_trigger = yes }
		culture = romanoaquitanian
	}
	else_if = {
		limit = { is_romanogallic_area_trigger = yes }
		culture = romanogallic
	}
	else_if = {
		limit = { is_romanobritish_area_trigger = yes }
		culture = romanobritish
	}
}

germanic_convert_to_tribal_effect = {
	if = {
		limit = { NOT = { any_province_holding = { holding_type = TRIBAL } } }
		any_province_holding = {
			limit = { is_capital = yes }
			convert_to = TRIBAL
		}
	}
	any_province_holding = {
		limit = { holding_type = TRIBAL }
		hidden_tooltip = {
			add_building = tb_market_town_1
			add_building = tb_market_town_2
			add_building = tb_market_town_3
			add_building = tb_market_town_4
			if = {
				limit = { year = 520 }
				add_building = tb_market_town_5
			}
			if = {
				limit = { year = 570 }
				add_building = tb_market_town_6
			}
			if = {
				limit = { PREV = { port = yes } }
				add_building = tb_shipyard_1
				add_building = tb_shipyard_2
				if = {
					limit = { year = 510 }
					add_building = tb_shipyard_3
				}
			}
			add_building = tb_training_grounds_1
			add_building = tb_training_grounds_2
			if = {
				limit = { year = 490 }
				add_building = tb_training_grounds_3
			}
			if = {
				limit = { year = 550 }
				add_building = tb_training_grounds_4
			}
			add_building = tb_war_camp_1
			add_building = tb_war_camp_2
			add_building = tb_war_camp_3
			if = {
				limit = { year = 540 }
				add_building = tb_war_camp_4
			}
			add_building = tb_practice_range_1
			add_building = tb_practice_range_2
			if = {
				limit = { year = 480 }
				add_building = tb_practice_range_3
			}
			if = {
				limit = { year = 530 }
				add_building = tb_practice_range_4
			}
			add_building = tb_arsenal_1
			add_building = tb_arsenal_2
			add_building = tb_arsenal_3
			if = {
				limit = { year = 5660 }
				add_building = tb_arsenal_4
			}
			if = {
				limit = {
					OR = {
						region = custom_wre
						region = custom_valentia
					}
				}
				random = {
					chance = 50
					add_building = tb_roman_fort_1
				}
			}
			add_building = tb_hillfort_1
			add_building = tb_hillfort_2
			add_building = tb_hillfort_3
			add_building = tb_hillfort_4
			add_building = tb_hillfort_5
			if = {
				limit = { year = 510 }
				add_building = tb_hillfort_6
			}
			if = {
				limit = { year = 570 }
				add_building = tb_hillfort_7
			}
			if = {
				limit = { year = 620 }
				add_building = tb_hillfort_8
			}
			refill_holding_levy = yes
		}
	}
	any_province_holding = {
		limit = { NOT = { holding_type = TRIBAL } }
		random_list = {
			50 = {
				modifier = {
					factor = 0
					is_holy_site = ROOT
				}
				modifier = {
					factor = 4
					holding_type = city
				}
				modifier = {
					factor = 3
					holding_type = castle
				}
				destroy_settlement = THIS
			}
			50 = {		# Settlement stays (mostly temples)
			}
		}
	}
}

convert_to_proper_feudal_government_effect = {
	if = {
		limit = {
			religion_group = muslim
		}
		set_government_type = muslim_government
	}
	else_if = {
		limit = { ROOT = { government = imperial_government } }
		set_government_type = imperial_government
	}
	else_if = {
		limit = {
			ROOT = { is_romanized_or_germanic_government_trigger = yes }
		}
		if = {
			limit = { 
				culture_group = germanic
				is_romanized_germanic_trigger = no
			}
			set_government_type = germanic_government
		}
		else_if = {
			limit = { 
				ROOT = { government = sub_roman_brythonic_government }
			}
			set_government_type = sub_roman_brythonic_government
		}
		else = {
			set_government_type = sub_roman_government
		}
	}
	else = {
		set_government_type = feudal_government
	}
}

# Called from county scope
declare_conquest_war = {
	add_claim = ROOT
	reverse_war = {
		target = ROOT
		casus_belli = county_conquest
	}
	hidden_tooltip = {
		if = {
			limit = { ROOT = { war = no } }
			reverse_war = {
				target = ROOT
				casus_belli = claim
			}
		}
	}
}

unsafe_declare_conquest_war = {
	add_claim = ROOT
	reverse_war = {
		target = ROOT
		casus_belli = county_conquest
	}
	hidden_tooltip = {
		if = {
			limit = { ROOT = { war = no } }
			reverse_unsafe_war = {
				target = ROOT
				casus_belli = claim
			}
		}
	}
}

# Tries to declare an Anglo-Saxon subjugation war first, then falls back on a county_conquest/claim war if not allowed
declare_anglosaxon_conquest_war = {
	if = {
		limit = { year = 560 }
		ROOT = {
			if = {
				limit = { has_character_modifier = vassalize_timer }
				remove_character_modifier = vassalize_timer
			}
			if = {
				limit = { NOT = { prestige = 1000 } }
				export_to_variable = {
					which = char_prestige
					value = prestige
				}
				multiply_variable = {
					which = char_prestige
					value = -1
				}
				change_variable = {
					which = char_prestige
					value = 1150
				}
				prestige = char_prestige
			}
		}
		reverse_war = {
			target = ROOT
			casus_belli = anglosaxon_subjugation
		}
	}
	if = {
		limit = { ROOT = { war = no } }
		declare_conquest_war = yes
	}
}

destroy_landless_count_level_title_effect = {
	unsafe_destroy_landed_title = THIS
	activate_title = {
		title = THIS
		status = no
	}
	set_title_flag = disabled_county_title
	hidden_tooltip = {
		d_null = {
			holder_scope = {
				grant_title_no_opinion = PREVPREV
				set_defacto_liege = THIS
			}
		}
	}
}

roman_legion_succession_effect = {
	create_character = {
		random_traits = yes
		dynasty = random
		employer = ROOT
		religion = ROOT
		culture = ROOT
		female = no
		age = 30
		attributes = {
			martial = 3
			diplomacy = 3
		}
		trait = skilled_tactician
		trait = skilled_warrior
		trait = veteran
		trait = roman_trained
	}
	new_character = {
		grant_title = PREV
		set_character_flag = new_legion_commander
		gender_succ = agnatic
		succession_w_cooldown = open_elective
		
		# Randomize martial skill
		random_list = {
			15 = {
				change_martial = 1
				add_trait = tough_soldier
				remove_trait = skilled_tactician
			}
			35 = {
				change_martial = 2
			}
			35 = {
				change_martial = 4
			}
			15 = {
				change_martial = 5
				add_trait = brilliant_strategist
				remove_trait = skilled_tactician
			}
		}
		
		# Randomize diplomacy skill
		random_list = {
			25 = {
			}
			25 = {
				change_diplomacy = 1
			}
			25 = {
				change_diplomacy = 2
			}
			25 = {
				change_diplomacy = 3
			}
		}
	}
}

convert_to_thuringian_culture_effect = {
	if = {
		limit = { NOT = { has_global_flag = thuringian_culture_switched } }
		culture = oldthuringian
	}
	if = {
		limit = { has_global_flag = thuringian_culture_switched }
		culture = thuringian
	}
}

convert_to_flagged_religion_effect = {
	if = {
		limit = { has_character_flag = converted_catholic }
		religion = catholic
		clr_character_flag = converted_catholic
	}
	if = {
		limit = { has_character_flag = converted_pelagian }
		religion = pelagian
		clr_character_flag = converted_pelagian
	}
	if = {
		limit = { has_character_flag = converted_nestorian }
		religion = nestorian
		clr_character_flag = converted_nestorian
	}
	if = {
		limit = { has_character_flag = converted_priscillian }
		religion = priscillian
		clr_character_flag = converted_priscillian
	}
	if = {
		limit = { has_character_flag = converted_arian }
		religion = arian
		clr_character_flag = converted_arian
	}
	if = {
		limit = { has_character_flag = converted_gnostic }
		religion = gnostic
		clr_character_flag = converted_gnostic
	}
	if = {
		limit = { has_character_flag = converted_sunni }
		religion = sunni
		clr_character_flag = converted_sunni
	}
	if = {
		limit = { has_character_flag = converted_shiite }
		religion = shiite
		clr_character_flag = converted_shiite
	}
	if = {
		limit = { has_character_flag = converted_ibadi }
		religion = ibadi
		clr_character_flag = converted_ibadi
	}
	if = {
		limit = { has_character_flag = converted_jewish }
		religion = jewish
		clr_character_flag = converted_jewish
	}
	if = {
		limit = { has_character_flag = converted_manichean }
		religion = manichean
		clr_character_flag = converted_manichean
	}
	if = {
		limit = { has_character_flag = converted_briton_pagan }
		religion = briton_pagan
		clr_character_flag = converted_briton_pagan
	}
	if = {
		limit = { has_character_flag = converted_pict_pagan }
		religion = pict_pagan
		clr_character_flag = converted_pict_pagan
	}
	if = {
		limit = { has_character_flag = converted_gael_pagan }
		religion = gael_pagan
		clr_character_flag = converted_gael_pagan
	}
	if = {
		limit = { has_character_flag = converted_norse_pagan }
		religion = norse_pagan
		clr_character_flag = converted_norse_pagan
	}
	if = {
		limit = { has_character_flag = converted_germanic_pagan }
		religion = germanic_pagan
		clr_character_flag = converted_germanic_pagan
	}
	if = {
		limit = { has_character_flag = converted_frankish_pagan }
		religion = frankish_pagan
		clr_character_flag = converted_frankish_pagan
	}
	if = {
		limit = { has_character_flag = converted_suebic_pagan }
		religion = suebic_pagan
		clr_character_flag = converted_suebic_pagan
	}
	if = {
		limit = { has_character_flag = converted_gothic_pagan }
		religion = gothic_pagan
		clr_character_flag = converted_gothic_pagan
	}
	if = {
		limit = { has_character_flag = converted_alan_pagan }
		religion = alan_pagan
		clr_character_flag = converted_alan_pagan
	}
	if = {
		limit = { has_character_flag = converted_tengri_pagan }
		religion = tengri_pagan
		clr_character_flag = converted_tengri_pagan
	}
	if = {
		limit = { has_character_flag = converted_vasconic_pagan }
		religion = vasconic_pagan
		clr_character_flag = converted_vasconic_pagan
	}
	if = {
		limit = { has_character_flag = converted_briton_pagan_reformed }
		religion = briton_pagan_reformed
		clr_character_flag = converted_briton_pagan_reformed
	}
	if = {
		limit = { has_character_flag = converted_britannic_pagan }
		religion = britannic_pagan
		clr_character_flag = converted_britannic_pagan
	}
	if = {
		limit = { has_character_flag = converted_pict_pagan_reformed }
		religion = pict_pagan_reformed
		clr_character_flag = converted_pict_pagan_reformed
	}
	if = {
		limit = { has_character_flag = converted_gael_pagan_reformed }
		religion = gael_pagan_reformed
		clr_character_flag = converted_gael_pagan_reformed
	}
	if = {
		limit = { has_character_flag = converted_norse_pagan_reformed }
		religion = norse_pagan_reformed
		clr_character_flag = converted_norse_pagan_reformed
	}
	if = {
		limit = { has_character_flag = converted_germanic_pagan_reformed }
		religion = germanic_pagan_reformed
		clr_character_flag = converted_germanic_pagan_reformed
	}
	if = {
		limit = { has_character_flag = converted_frankish_pagan_reformed }
		religion = frankish_pagan_reformed
		clr_character_flag = converted_frankish_pagan_reformed
	}
	if = {
		limit = { has_character_flag = converted_suebic_pagan_reformed }
		religion = suebic_pagan_reformed
		clr_character_flag = converted_suebic_pagan_reformed
	}
	if = {
		limit = { has_character_flag = converted_gothic_pagan_reformed }
		religion = gothic_pagan_reformed
		clr_character_flag = converted_gothic_pagan_reformed
	}
	if = {
		limit = { has_character_flag = converted_alan_pagan_reformed }
		religion = alan_pagan_reformed
		clr_character_flag = converted_alan_pagan_reformed
	}
	if = {
		limit = { has_character_flag = converted_tengri_pagan_reformed }
		religion = tengri_pagan_reformed
		clr_character_flag = converted_tengri_pagan_reformed
	}
	if = {
		limit = { has_character_flag = converted_vasconic_pagan_reformed }
		religion = vasconic_pagan_reformed
		clr_character_flag = converted_vasconic_pagan_reformed
	}
	if = {
		limit = { has_character_flag = converted_roman_pagan }
		religion = roman_pagan
		clr_character_flag = converted_roman_pagan
	}
	if = {
		limit = { has_character_flag = converted_roman_pagan_reformed }
		religion = roman_pagan_reformed
		clr_character_flag = converted_roman_pagan_reformed
	}
	# if = {
		# limit = { has_character_flag = converted_sol_invictus }
		# religion = sol_invictus
		# clr_character_flag = converted_sol_invictus
	# }
	if = {
		limit = { has_character_flag = converted_titan_pagan }
		religion = titan_pagan
		clr_character_flag = converted_titan_pagan
	}
	if = {
		limit = { has_character_flag = converted_promethean_pagan }
		religion = promethean_pagan
		clr_character_flag = converted_promethean_pagan
	}
}

remove_base_levies_modifiers = {
	remove_character_modifier = base_levies_1
	remove_character_modifier = base_levies_2
	remove_character_modifier = base_levies_3
	remove_character_modifier = base_levies_4
	remove_character_modifier = base_levies_5
	remove_character_modifier = base_levies_6
	remove_character_modifier = base_levies_7
	remove_character_modifier = base_levies_8
	remove_character_modifier = base_levies_9
	remove_character_modifier = base_levies_10
	remove_character_modifier = base_levies_11
	remove_character_modifier = base_levies_12
	remove_character_modifier = base_levies_13
}

remove_tribal_modifiers = {
	remove_character_modifier = tribal_modifier_0
	remove_character_modifier = tribal_modifier_1
	remove_character_modifier = tribal_modifier_2
	remove_character_modifier = tribal_modifier_3
	remove_character_modifier = tribal_modifier_4
	remove_character_modifier = tribal_modifier_5
	remove_character_modifier = tribal_modifier_6
	remove_character_modifier = tribal_modifier_7
	remove_character_modifier = tribal_modifier_8
	remove_character_modifier = tribal_modifier_9
	remove_character_modifier = tribal_modifier_10
	remove_character_modifier = tribal_modifier_11
	remove_character_modifier = tribal_modifier_12
	remove_character_modifier = tribal_modifier_13
	remove_character_modifier = tribal_modifier_14
	remove_character_modifier = tribal_modifier_15
	remove_character_modifier = tribal_modifier_16
	remove_character_modifier = tribal_modifier_17
	remove_character_modifier = tribal_modifier_18
	remove_character_modifier = tribal_modifier_19
	remove_character_modifier = tribal_modifier_20
	remove_character_modifier = tribal_modifier_-1
	remove_character_modifier = tribal_modifier_-2
	remove_character_modifier = tribal_modifier_-3
	remove_character_modifier = tribal_modifier_-4
	remove_character_modifier = tribal_modifier_-5
	remove_character_modifier = tribal_modifier_-6
	remove_character_modifier = tribal_modifier_-7
	remove_character_modifier = tribal_modifier_-8
	remove_character_modifier = tribal_modifier_-9
	remove_character_modifier = tribal_modifier_-10
	remove_character_modifier = tribal_modifier_-11
	remove_character_modifier = tribal_modifier_-12
	remove_character_modifier = tribal_modifier_-13
	remove_character_modifier = tribal_modifier_-14
	remove_character_modifier = tribal_modifier_-15
}

convert_tribal_holding_to_castle_effect = {
	if = {
		limit = {
			dejure_liege_title = {
				holder = ROOT
				location = {
					NOT = { any_province_holding = { holding_type = city } }
					num_of_empty_holdings = 1
				}
			}
			OR = {
				has_building = tb_market_town_5
				has_building = tb_market_town_6
				has_building = tb_market_town_7
				has_building = tb_market_town_8
			}
		}
		random = {
			chance = 25
			modifier = {
				factor = 2
				has_building = tb_market_town_6
				NOR = {
					has_building = tb_market_town_7
					has_building = tb_market_town_8
				}
			}
			modifier = {
				factor = 3
				has_building = tb_market_town_7
				NOT = {
					has_building = tb_market_town_8
				}
			}
			modifier = {
				factor = 4
				has_building = tb_market_town_8
			}
			location = {
				custom_tooltip = {
					text = build_city_tooltip
				}
				hidden_tooltip = { 
					build_holding = {
						type = city
					}
				}
			}
		}
	}
	
	convert_to = CASTLE
	hidden_tooltip = { refill_holding_levy = yes }
	location = { #Clear Tribal Great Pillars
		clr_province_flag = flag_great_pillar_tengri
		clr_province_flag = flag_great_pillar_norse
		clr_province_flag = flag_great_pillar_celtic
		clr_province_flag = flag_great_pillar_alan
		clr_province_flag = flag_great_pillar_vasconic
		clr_province_flag = flag_great_pillar_roman
	}
	hidden_tooltip = {
		location = { province_event = { id = 302507 } }	# Check Tribal Different Culture Group modifiers
	}
}

destroy_landed_title_and_transfer_vassals_to_liege_effect = {
	holder_scope = {
		if = {
			limit = { 
				independent = no
				NOT = {
					any_demesne_title = {
						higher_tier_than = COUNT
						NOT = { de_jure_liege = k_benoic }
					}
				}
			}
			any_vassal = {
				limit = { higher_tier_than = BARON }
				top_liege = {
					set_defacto_vassal = PREVPREV
				}
			}
			destroy_landed_title = PREV
			if = {
				limit = { independent = yes	}
				top_liege = {
					set_defacto_vassal = PREVPREV
				}
			}
		}			
	}
	destroy_landed_title = THIS
}

decrease_prosperity_or_increase_depopulation_effect = {
	hidden_tooltip = {
		set_variable = { which = prosperity_value value = 0 }
	}
	# Provinces with prosperity 2 or 3 lose prosperity, but don't become depopulated
	if = {
		limit = {
			has_province_modifier = prosperity_modifier_3
		}
		remove_province_modifier = prosperity_modifier_3
		break = yes
	}
	if = {
		limit = {
			has_province_modifier = prosperity_modifier_2
		}
		remove_province_modifier = prosperity_modifier_2
		break = yes
	}
	if = {
		limit = {
			has_province_modifier = prosperity_modifier_1
		}
		remove_province_modifier = prosperity_modifier_1
	}
	if = {
		limit = {
			has_province_modifier = depopulated_2
		}
		remove_province_modifier = depopulated_2
		add_province_modifier = {
			name = depopulated_3
			duration = -1
		}
	}
	if = {
		limit = {
			has_province_modifier = depopulated_1
		}
		remove_province_modifier = depopulated_1
		add_province_modifier = {
			name = depopulated_2
			duration = -1
		}
	}
	if = {
		limit = {
			NOR = {
				has_province_modifier = depopulated_3
				has_province_modifier = depopulated_2
				has_province_modifier = depopulated_1
			}
		}
		add_province_modifier = {
			name = depopulated_1
			duration = -1
		}
	}
}

increase_depopulation_always_effect = {
	hidden_tooltip = {
		set_variable = { which = prosperity_value value = 0 }
	}
	if = {
		limit = {
			has_province_modifier = prosperity_modifier_3
		}
		remove_province_modifier = prosperity_modifier_3
	}
	if = {
		limit = {
			has_province_modifier = prosperity_modifier_2
		}
		remove_province_modifier = prosperity_modifier_2
	}
	if = {
		limit = {
			has_province_modifier = prosperity_modifier_1
		}
		remove_province_modifier = prosperity_modifier_1
	}
	if = {
		limit = {
			has_province_modifier = depopulated_2
		}
		remove_province_modifier = depopulated_2
		add_province_modifier = {
			name = depopulated_3
			duration = -1
		}
	}
	if = {
		limit = {
			has_province_modifier = depopulated_1
		}
		remove_province_modifier = depopulated_1
		add_province_modifier = {
			name = depopulated_2
			duration = -1
		}
	}
	if = {
		limit = {
			NOR = {
				has_province_modifier = depopulated_3
				has_province_modifier = depopulated_2
				has_province_modifier = depopulated_1
			}
		}
		add_province_modifier = {
			name = depopulated_1
			duration = -1
		}
	}
}

set_proper_rebel_government_effect = {
	# If revolting from a tribal province, becomes a tribal ruler
	if = {
		limit = { ROOT = { any_province_holding = { holding_type = tribal } } }
		if = {
			limit = {
				ROOT = { 
					owner = { 
						government = tribal_government
						top_liege = { government = tribal_government } 
					} 
				}
			}
			set_government_type = tribal_government
		}
		else = {
			set_government_type = high_tribal_government
		}
	}
	else = {
		if = {
			limit = {
				religion_group = muslim
			}
			set_government_type = muslim_government
		}
		else_if = {
			limit = {
				ROOT = { 
					owner = { 
						top_liege = {
							OR = {							
								is_romanized_or_germanic_government_trigger = yes 
								AND = {
									is_tribal = yes
									ROOT = {
										NOT = { any_province_holding = { holding_type = TRIBAL } }
									}
									OR = {
										is_roman_culture_trigger = yes
										is_frankish_culture_trigger = yes
										is_romanized_germanic_trigger = yes
									}
								}
							} 
						}
					}
				}
			}
			if = {
				limit = { 
					culture_group = germanic
					is_romanized_germanic_trigger = no
				}
				set_government_type = germanic_government
			}
			else_if = {
				limit = { 
					ROOT = { owner = { top_liege = { government = sub_roman_brythonic_government } } }
				}
				set_government_type = sub_roman_brythonic_government
			}
			else = {
				set_government_type = sub_roman_government
			}
		}
		else = {
			set_government_type = feudal_government
		}
	}
}

britannia_flag_proper_post_revolt_government_effect = {
	if = {
		limit = {
			government = high_tribal_government
		}
		set_character_flag = set_to_high_tribal_government
	}
	else_if = {
		limit = {
			government = sub_roman_government
		}
		set_character_flag = set_to_sub_roman_government
	}
	else_if = {
		limit = {
			government = sub_roman_brythonic_government
		}
		set_character_flag = set_to_sub_roman_brythonic_government
	}
	else_if = {
		limit = {
			government = germanic_government
		}
		set_character_flag = set_to_germanic_government
	}
}

make_britannia_subject_of_ROOT_effect = {
	ROOT = {
		if = {
			limit = { is_tributary = yes }
			suzerain = {
				remove_tributary = PREV
			}
		}
		if = {
			limit = { NOT = { has_global_flag = britannia_established_central_mint } }
			make_tributary = {
				who = PREV 
				tributary_type = britannia_subject 
			}
		}
		else = {
			make_tributary = {
				who = PREV 
				tributary_type = britannia_subject
				percentage = 0.15
			}
		}
	}
}

make_britannia_subject_of_event_target_effect = {
	event_target:britannia_high_king = {
		if = {
			limit = { is_tributary = yes }
			suzerain = {
				remove_tributary = PREV
			}
		}
		if = {
			limit = { NOT = { has_global_flag = britannia_established_central_mint } }
			make_tributary = {
				who = PREV 
				tributary_type = britannia_subject 
			}
		}
		else = {
			make_tributary = {
				who = PREV 
				tributary_type = britannia_subject
				percentage = 0.15
			}
		}
	}
}

britannia_revoke_last_reform_effect = {
	if = {
		limit = { has_global_flag = britannia_restored_roman_senate }
		clr_global_flag = britannia_restored_roman_senate
	}
	else_if = {
		limit = { has_global_flag = britannia_unified_legal_code }
		clr_global_flag = britannia_unified_legal_code
	}
	else_if = {
		limit = { has_global_flag = britannia_formalized_heir }
		clr_global_flag = britannia_formalized_heir
	}
	else_if = {
		limit = { has_global_flag = britannia_centralized_church }
		clr_global_flag = britannia_centralized_church
	}
	else_if = {
		limit = { has_global_flag = britannia_empowered_high_council }
		clr_global_flag = britannia_empowered_high_council
	}
	else_if = {
		limit = { has_global_flag = britannia_established_central_mint }
		clr_global_flag = britannia_established_central_mint
	}
	else_if = {
		limit = { has_global_flag = britannia_formalized_high_kingship }
		clr_global_flag = britannia_formalized_high_kingship
	}
}

convert_to_proper_subroman_government_effect = {
	if = {
		limit = {
			OR = {
				is_brythonic_culture_trigger = yes
				AND = {
					OR = {
						culture_group = imperiale
						is_romanized_germanic_trigger = yes
					}
					capital_scope = {
						region = world_britannia
					}
				}
			}
		}
		set_government_type = sub_roman_brythonic_government
	}
	else = {
		set_government_type = sub_roman_government
	}
}

destroy_random_nonspecial_building_effect = {
	custom_tooltip = {
		text = destroy_random_nonspecial_building_tooltip
	}
	hidden_tooltip = {
		if = {
			limit = { holding_type = CASTLE }
			random_list = {
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_caer_1 }
							has_building = ca_caer_2
						}
					}
					remove_building = ca_caer_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_caer_2 }
							has_building = ca_caer_3
						}
					}
					remove_building = ca_caer_2
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_caer_3 }
					}
					remove_building = ca_caer_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_wall_1 }
							has_building = ca_wall_2
						}
					}
					remove_building = ca_wall_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_wall_2 }
							has_building = ca_wall_3
						}
					}
					remove_building = ca_wall_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_wall_3 }
							has_building = ca_wall_4
						}
					}
					remove_building = ca_wall_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_wall_4 }
							has_building = ca_wall_5
						}
					}
					remove_building = ca_wall_4
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_wall_5 }
							has_building = ca_wall_6
						}
					}
					remove_building = ca_wall_5
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_wall_6 }
					}
					remove_building = ca_wall_6
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_wall_q_1 }
							has_building = ca_wall_q_2
						}
					}
					remove_building = ca_wall_q_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_wall_q_2 }
							has_building = ca_wall_q_3
						}
					}
					remove_building = ca_wall_q_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_wall_q_3 }
							has_building = ca_wall_q_4
						}
					}
					remove_building = ca_wall_q_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_wall_q_4 }
							has_building = ca_wall_q_5
						}
					}
					remove_building = ca_wall_q_4
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_wall_q_5 }
							has_building = ca_wall_q_6
						}
					}
					remove_building = ca_wall_q_5
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_wall_q_6 }
					}
					remove_building = ca_wall_q_6
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_keep_1 }
							has_building = ca_keep_2
						}
					}
					remove_building = ca_keep_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_keep_2 }
							has_building = ca_keep_3
						}
					}
					remove_building = ca_keep_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_keep_3 }
							has_building = ca_keep_4
						}
					}
					remove_building = ca_keep_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_keep_4 }
							has_building = ca_keep_5
						}
					}
					remove_building = ca_keep_4
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_keep_5 }
							has_building = ca_keep_6
						}
					}
					remove_building = ca_keep_5
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_keep_6 }
					}
					remove_building = ca_keep_6
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_warrior_cult }
					}
					remove_building = ca_warrior_cult
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_samarobriva_hall }
					}
					remove_building = ca_samarobriva_hall
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_saxon_war_hall_1 }
							has_building = ca_saxon_war_hall_2
						}
					}
					remove_building = ca_saxon_war_hall_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_saxon_war_hall_2 }
							has_building = ca_saxon_war_hall_3
						}
					}
					remove_building = ca_saxon_war_hall_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_saxon_war_hall_3 }
							has_building = ca_saxon_war_hall_4
						}
					}
					remove_building = ca_saxon_war_hall_3
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_saxon_war_hall_4 }
					}
					remove_building = ca_saxon_war_hall_4
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_irish_war_hall_1 }
							has_building = ca_irish_war_hall_2
						}
					}
					remove_building = ca_irish_war_hall_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_irish_war_hall_2 }
					}
					remove_building = ca_irish_war_hall_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_briton_war_hall_1 }
							has_building = ca_briton_war_hall_2
						}
					}
					remove_building = ca_briton_war_hall_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_briton_war_hall_2 }
					}
					remove_building = ca_briton_war_hall_2
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_basque_war_hall_1 }
					}
					remove_building = ca_basque_war_hall_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_norse_war_hall_1 }
							has_building = ca_norse_war_hall_2
						}
					}
					remove_building = ca_norse_war_hall_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_norse_war_hall_2 }
					}
					remove_building = ca_norse_war_hall_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_norse_war_hall_port_1 }
							has_building = ca_norse_war_hall_port_2
						}
					}
					remove_building = ca_norse_war_hall_port_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_norse_war_hall_port_2 }
					}
					remove_building = ca_norse_war_hall_port_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_barracks_1 }
							has_building = ca_barracks_2
						}
					}
					remove_building = ca_barracks_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_barracks_2 }
							has_building = ca_barracks_3
						}
					}
					remove_building = ca_barracks_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_barracks_3 }
							has_building = ca_barracks_4
						}
					}
					remove_building = ca_barracks_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_barracks_4 }
							has_building = ca_barracks_5
						}
					}
					remove_building = ca_barracks_4
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_barracks_5 }
							has_building = ca_barracks_6
						}
					}
					remove_building = ca_barracks_5
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_barracks_6 }
					}
					remove_building = ca_barracks_6
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_stable_1 }
							has_building = ca_stable_2
						}
					}
					remove_building = ca_stable_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_stable_2 }
							has_building = ca_stable_3
						}
					}
					remove_building = ca_stable_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_stable_3 }
							has_building = ca_stable_4
						}
					}
					remove_building = ca_stable_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_stable_4 }
							has_building = ca_stable_5
						}
					}
					remove_building = ca_stable_4
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_stable_5 }
					}
					remove_building = ca_stable_5
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_militia_barracks_1 }
							has_building = ca_militia_barracks_2
						}
					}
					remove_building = ca_militia_barracks_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_militia_barracks_2 }
							has_building = ca_militia_barracks_3
						}
					}
					remove_building = ca_militia_barracks_2
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_militia_barracks_3 }
					}
					remove_building = ca_militia_barracks_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_training_grounds_1 }
							has_building = ca_training_grounds_2
						}
					}
					remove_building = ca_training_grounds_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_training_grounds_2 }
					}
					remove_building = ca_training_grounds_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_justice_1 }
							has_building = ca_justice_2
						}
					}
					remove_building = ca_justice_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_justice_2 }
					}
					remove_building = ca_justice_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_library_1 }
							has_building = ca_library_2
						}
					}
					remove_building = ca_library_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_library_2 }
					}
					remove_building = ca_library_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_smith_1 }
							has_building = ca_smith_2
						}
					}
					remove_building = ca_smith_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_smith_2 }
					}
					remove_building = ca_smith_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_health_1 }
							has_building = ca_health_2
						}
					}
					remove_building = ca_health_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_health_2 }
					}
					remove_building = ca_health_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_farms_1 }
							has_building = ca_farms_2
						}
					}
					remove_building = ca_farms_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_farms_2 }
					}
					remove_building = ca_farms_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_cattle }
							has_building = ca_cattle_2
						}
					}
					remove_building = ca_cattle
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_cattle_2 }
					}
					remove_building = ca_cattle_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_sheep_1 }
							has_building = ca_sheep_2
						}
					}
					remove_building = ca_sheep_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_sheep_2 }
					}
					remove_building = ca_sheep_2
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_goat }
					}
					remove_building = ca_goat
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_swine_pen }
					}
					remove_building = ca_swine_pen
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_hunters_camp }
					}
					remove_building = ca_hunters_camp
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_lumberyard }
					}
					remove_building = ca_lumberyard
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_dartmoor_mines }
					}
					remove_building = ca_dartmoor_mines
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_gold_mines }
							has_building = ca_gold_mines_2
						}
					}
					remove_building = ca_gold_mines
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_gold_mines_2 }
					}
					remove_building = ca_gold_mines_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_copper_mines }
							has_building = ca_copper_mines_2
						}
					}
					remove_building = ca_copper_mines
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_copper_mines_2 }
					}
					remove_building = ca_copper_mines_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_iron_mines }
							has_building = ca_iron_mines_2
						}
					}
					remove_building = ca_iron_mines
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_iron_mines_2 }
					}
					remove_building = ca_iron_mines_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_lead_mines }
							has_building = ca_lead_mines_2
						}
					}
					remove_building = ca_lead_mines
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_lead_mines_2 }
					}
					remove_building = ca_lead_mines_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_vineyard_1 }
							has_building = ca_vineyard_2
						}
					}
					remove_building = ca_vineyard_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_vineyard_2 }
					}
					remove_building = ca_vineyard_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_town_1 }
							has_building = ca_town_2
						}
					}
					remove_building = ca_town_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_town_2 }
							has_building = ca_town_3
						}
					}
					remove_building = ca_town_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_town_3 }
							has_building = ca_town_4
						}
					}
					remove_building = ca_town_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_town_4 }
							has_building = ca_town_5
						}
					}
					remove_building = ca_town_4
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_town_5 }
					}
					remove_building = ca_town_5
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_shipyard_1 }
							has_building = ca_shipyard_2
						}
					}
					remove_building = ca_shipyard_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ca_shipyard_2 }
							has_building = ca_shipyard_3
						}
					}
					remove_building = ca_shipyard_2
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ca_shipyard_3 }
					}
					remove_building = ca_shipyard_3
				}
			}
		}
		if = {
			limit = { holding_type = CITY }
			random_list = {
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_wall_1 }
							has_building = ct_wall_2
						}
					}
					remove_building = ct_wall_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_wall_2 }
							has_building = ct_wall_3
						}
					}
					remove_building = ct_wall_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_wall_3 }
							has_building = ct_wall_4
						}
					}
					remove_building = ct_wall_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_wall_4 }
							has_building = ct_wall_5
						}
					}
					remove_building = ct_wall_4
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ct_wall_5 }
					}
					remove_building = ct_wall_5
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_wall_q_1 }
							has_building = ct_wall_q_2
						}
					}
					remove_building = ct_wall_q_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_wall_q_2 }
							has_building = ct_wall_q_3
						}
					}
					remove_building = ct_wall_q_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_wall_q_3 }
							has_building = ct_wall_q_4
						}
					}
					remove_building = ct_wall_q_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_wall_q_4 }
							has_building = ct_wall_q_5
						}
					}
					remove_building = ct_wall_q_4
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ct_wall_q_5 }
					}
					remove_building = ct_wall_q_5
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_justice_1 }
							has_building = ct_justice_2
						}
					}
					remove_building = ct_justice_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ct_justice_2 }
					}
					remove_building = ct_justice_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_as_hall_1 }
							has_building = ct_as_hall_2
						}
					}
					remove_building = ct_as_hall_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ct_as_hall_2 }
					}
					remove_building = ct_as_hall_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_town_hall_1 }
							has_building = ct_town_hall_2
						}
					}
					remove_building = ct_town_hall_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ct_town_hall_2 }
					}
					remove_building = ct_town_hall_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_marketplace_1 }
							has_building = ct_marketplace_2
						}
					}
					remove_building = ct_marketplace_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_marketplace_2 }
							has_building = ct_marketplace_3
						}
					}
					remove_building = ct_marketplace_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_marketplace_3 }
							has_building = ct_marketplace_4
						}
					}
					remove_building = ct_marketplace_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_marketplace_4 }
							has_building = ct_marketplace_5
						}
					}
					remove_building = ct_marketplace_4
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_marketplace_5 }
							has_building = ct_marketplace_6
						}
					}
					remove_building = ct_marketplace_5
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ct_marketplace_6 }
					}
					remove_building = ct_marketplace_6
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ct_brewery }
					}
					remove_building = ct_brewery
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ct_masons_1 }
					}
					remove_building = ct_masons_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_health_1 }
							has_building = ct_health_2
						}
					}
					remove_building = ct_health_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ct_health_2 }
					}
					remove_building = ct_health_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_rom_health_1 }
							has_building = ct_rom_health_2
						}
					}
					remove_building = ct_rom_health_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_rom_health_2 }
							has_building = ct_rom_health_3
						}
					}
					remove_building = ct_rom_health_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_rom_health_3 }
							has_building = ct_rom_health_4
						}
					}
					remove_building = ct_rom_health_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_rom_health_4 }
							has_building = ct_rom_health_5
						}
					}
					remove_building = ct_rom_health_4
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ct_rom_health_5 }
					}
					remove_building = ct_rom_health_5
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_farms_1 }
							has_building = ct_farms_2
						}
					}
					remove_building = ct_farms_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ct_farms_2 }
					}
					remove_building = ct_farms_2
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ct_winery_1 }
					}
					remove_building = ct_winery_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_church_1 }
							has_building = ct_church_2
						}
					}
					remove_building = ct_church_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_church_2 }
							has_building = ct_church_3
						}
					}
					remove_building = ct_church_2
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ct_church_3 }
					}
					remove_building = ct_church_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_temple_1 }
							has_building = ct_temple_2
						}
					}
					remove_building = ct_temple_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_temple_2 }
							has_building = ct_temple_3
						}
					}
					remove_building = ct_temple_2
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ct_temple_3 }
					}
					remove_building = ct_temple_3
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ct_fishing }
					}
					remove_building = ct_fishing
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_port_1 }
							has_building = ct_port_2
						}
					}
					remove_building = ct_port_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_port_2 }
							has_building = ct_port_3
						}
					}
					remove_building = ct_port_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_port_3 }
							has_building = ct_port_4
						}
					}
					remove_building = ct_port_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_port_4 }
							has_building = ct_port_5
						}
					}
					remove_building = ct_port_4
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ct_port_5 }
					}
					remove_building = ct_port_5
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_caer_1 }
							has_building = ct_caer_2
						}
					}
					remove_building = ct_caer_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_caer_2 }
							has_building = ct_caer_3
						}
					}
					remove_building = ct_caer_2
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ct_caer_3 }
					}
					remove_building = ct_caer_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_guard_1 }
							has_building = ct_guard_2
						}
					}
					remove_building = ct_guard_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_guard_2 }
							has_building = ct_guard_3
						}
					}
					remove_building = ct_guard_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_guard_3 }
							has_building = ct_guard_4
						}
					}
					remove_building = ct_guard_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_guard_4 }
							has_building = ct_guard_5
						}
					}
					remove_building = ct_guard_4
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_guard_5 }
							has_building = ct_guard_6
						}
					}
					remove_building = ct_guard_5
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ct_guard_6 }
					}
					remove_building = ct_guard_6
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_barracks_1 }
							has_building = ct_barracks_2
						}
					}
					remove_building = ct_barracks_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_barracks_2 }
							has_building = ct_barracks_3
						}
					}
					remove_building = ct_barracks_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_barracks_3 }
							has_building = ct_barracks_4
						}
					}
					remove_building = ct_barracks_3
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ct_barracks_4 }
					}
					remove_building = ct_barracks_4
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_training_grounds_1 }
							has_building = ct_training_grounds_2
						}
					}
					remove_building = ct_training_grounds_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_training_grounds_2 }
							has_building = ct_training_grounds_3
						}
					}
					remove_building = ct_training_grounds_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_training_grounds_3 }
							has_building = ct_training_grounds_4
						}
					}
					remove_building = ct_training_grounds_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_training_grounds_4 }
							has_building = ct_training_grounds_5
						}
					}
					remove_building = ct_training_grounds_4
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = ct_training_grounds_5 }
							has_building = ct_training_grounds_6
						}
					}
					remove_building = ct_training_grounds_5
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = ct_training_grounds_6 }
					}
					remove_building = ct_training_grounds_6
				}
			}
		}
		if = {
			limit = { holding_type = TEMPLE }
			random_list = {
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_wall_1 }
							has_building = tp_wall_2
						}
					}
					remove_building = tp_wall_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_wall_2 }
							has_building = tp_wall_3
						}
					}
					remove_building = tp_wall_2
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tp_wall_3 }
					}
					remove_building = tp_wall_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_wall_q_1 }
							has_building = tp_wall_q_2
						}
					}
					remove_building = tp_wall_q_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_wall_q_2 }
							has_building = tp_wall_q_3
						}
					}
					remove_building = tp_wall_q_2
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tp_wall_q_3 }
					}
					remove_building = tp_wall_q_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_monastery_1 }
							has_building = tp_monastery_2
						}
					}
					remove_building = tp_monastery_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_monastery_2 }
							has_building = tp_monastery_3
						}
					}
					remove_building = tp_monastery_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_monastery_3 }
							has_building = tp_monastery_4
						}
					}
					remove_building = tp_monastery_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_monastery_4 }
							has_building = tp_monastery_5
						}
					}
					remove_building = tp_monastery_4
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_monastery_5 }
							has_building = tp_monastery_6
						}
					}
					remove_building = tp_monastery_5
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tp_monastery_6 }
					}
					remove_building = tp_monastery_6
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_pagan_temple_1 }
							has_building = tp_pagan_temple_2
						}
					}
					remove_building = tp_pagan_temple_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_pagan_temple_2 }
							has_building = tp_pagan_temple_3
						}
					}
					remove_building = tp_pagan_temple_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_pagan_temple_3 }
							has_building = tp_pagan_temple_4
						}
					}
					remove_building = tp_pagan_temple_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_pagan_temple_4 }
							has_building = tp_pagan_temple_5
						}
					}
					remove_building = tp_pagan_temple_4
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_pagan_temple_5 }
							has_building = tp_pagan_temple_6
						}
					}
					remove_building = tp_pagan_temple_5
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tp_pagan_temple_6 }
					}
					remove_building = tp_pagan_temple_6
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_barracks_1 }
							has_building = tp_barracks_2
						}
					}
					remove_building = tp_barracks_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_barracks_2 }
							has_building = tp_barracks_3
						}
					}
					remove_building = tp_barracks_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_barracks_3 }
							has_building = tp_barracks_4
						}
					}
					remove_building = tp_barracks_3
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tp_barracks_4 }
					}
					remove_building = tp_barracks_4
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_elite_barracks_1 }
							has_building = tp_elite_barracks_2
						}
					}
					remove_building = tp_elite_barracks_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_elite_barracks_2 }
							has_building = tp_elite_barracks_3
						}
					}
					remove_building = tp_elite_barracks_2
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tp_elite_barracks_3 }
					}
					remove_building = tp_elite_barracks_3
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tp_farms_1 }
					}
					remove_building = tp_farms_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tp_cattle }
					}
					remove_building = tp_cattle
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tp_sheep_1 }
					}
					remove_building = tp_sheep_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tp_goat }
					}
					remove_building = tp_goat
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_town_1 }
							has_building = tp_town_2
						}
					}
					remove_building = tp_town_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_town_2 }
							has_building = tp_town_3
						}
					}
					remove_building = tp_town_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_town_3 }
							has_building = tp_town_4
						}
					}
					remove_building = tp_town_3
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tp_town_4 }
					}
					remove_building = tp_town_4
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_school_1 }
							has_building = tp_school_2
						}
					}
					remove_building = tp_school_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tp_school_2 }
					}
					remove_building = tp_school_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_university_1 }
							has_building = tp_university_2
						}
					}
					remove_building = tp_university_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tp_university_2 }
							has_building = tp_university_3
						}
					}
					remove_building = tp_university_2
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tp_university_3 }
					}
					remove_building = tp_university_3
				}
			}
		}
		if = {
			limit = { holding_type = TRIBAL }
			random_list = {
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_hillfort_1 }
							has_building = tb_hillfort_2
						}
					}
					remove_building = tb_hillfort_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_hillfort_2 }
							has_building = tb_hillfort_3
						}
					}
					remove_building = tb_hillfort_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_hillfort_3 }
							has_building = tb_hillfort_4
						}
					}
					remove_building = tb_hillfort_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_hillfort_4 }
							has_building = tb_hillfort_5
						}
					}
					remove_building = tb_hillfort_4
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_hillfort_5 }
							has_building = tb_hillfort_6
						}
					}
					remove_building = tb_hillfort_5
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_hillfort_6 }
							has_building = tb_hillfort_7
						}
					}
					remove_building = tb_hillfort_6
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_hillfort_7 }
							has_building = tb_hillfort_8
						}
					}
					remove_building = tb_hillfort_7
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_hillfort_8 }
					}
					remove_building = tb_hillfort_8
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_roman_fort_1 }
							has_building = tb_roman_fort_2
						}
					}
					remove_building = tb_roman_fort_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_roman_fort_2 }
					}
					remove_building = tb_roman_fort_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_market_town_1 }
							has_building = tb_market_town_2
						}
					}
					remove_building = tb_market_town_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_market_town_2 }
							has_building = tb_market_town_3
						}
					}
					remove_building = tb_market_town_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_market_town_3 }
							has_building = tb_market_town_4
						}
					}
					remove_building = tb_market_town_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_market_town_4 }
							has_building = tb_market_town_5
						}
					}
					remove_building = tb_market_town_4
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_market_town_5 }
							has_building = tb_market_town_6
						}
					}
					remove_building = tb_market_town_5
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_market_town_6 }
							has_building = tb_market_town_7
						}
					}
					remove_building = tb_market_town_6
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_market_town_7 }
							has_building = tb_market_town_8
						}
					}
					remove_building = tb_market_town_7
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_market_town_8 }
					}
					remove_building = tb_market_town_8
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_shipyard_1 }
							has_building = tb_shipyard_2
						}
					}
					remove_building = tb_shipyard_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_shipyard_2 }
							has_building = tb_shipyard_3
						}
					}
					remove_building = tb_shipyard_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_shipyard_3 }
							has_building = tb_shipyard_4
						}
					}
					remove_building = tb_shipyard_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_shipyard_4 }
							has_building = tb_shipyard_5
						}
					}
					remove_building = tb_shipyard_4
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_shipyard_5 }
					}
					remove_building = tb_shipyard_5
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_training_grounds_1 }
							has_building = tb_training_grounds_2
						}
					}
					remove_building = tb_training_grounds_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_training_grounds_2 }
							has_building = tb_training_grounds_3
						}
					}
					remove_building = tb_training_grounds_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_training_grounds_3 }
							has_building = tb_training_grounds_4
						}
					}
					remove_building = tb_training_grounds_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_training_grounds_4 }
							has_building = tb_training_grounds_5
						}
					}
					remove_building = tb_training_grounds_4
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_training_grounds_5 }
							has_building = tb_training_grounds_6
						}
					}
					remove_building = tb_training_grounds_5
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_training_grounds_6 }
					}
					remove_building = tb_training_grounds_6
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_war_camp_1 }
							has_building = tb_war_camp_2
						}
					}
					remove_building = tb_war_camp_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_war_camp_2 }
							has_building = tb_war_camp_3
						}
					}
					remove_building = tb_war_camp_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_war_camp_3 }
							has_building = tb_war_camp_4
						}
					}
					remove_building = tb_war_camp_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_war_camp_4 }
							has_building = tb_war_camp_5
						}
					}
					remove_building = tb_war_camp_4
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_war_camp_5 }
							has_building = tb_war_camp_6
						}
					}
					remove_building = tb_war_camp_5
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_war_camp_6 }
					}
					remove_building = tb_war_camp_6
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_practice_range_1 }
							has_building = tb_practice_range_2
						}
					}
					remove_building = tb_practice_range_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_practice_range_2 }
							has_building = tb_practice_range_3
						}
					}
					remove_building = tb_practice_range_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_practice_range_3 }
							has_building = tb_practice_range_4
						}
					}
					remove_building = tb_practice_range_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_practice_range_4 }
							has_building = tb_practice_range_5
						}
					}
					remove_building = tb_practice_range_4
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_practice_range_5 }
							has_building = tb_practice_range_6
						}
					}
					remove_building = tb_practice_range_5
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_practice_range_6 }
					}
					remove_building = tb_practice_range_6
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_arsenal_1 }
							has_building = tb_arsenal_2
						}
					}
					remove_building = tb_arsenal_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_arsenal_2 }
							has_building = tb_arsenal_3
						}
					}
					remove_building = tb_arsenal_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_arsenal_3 }
							has_building = tb_arsenal_4
						}
					}
					remove_building = tb_arsenal_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_arsenal_4 }
							has_building = tb_arsenal_5
						}
					}
					remove_building = tb_arsenal_4
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_arsenal_5 }
							has_building = tb_arsenal_6
						}
					}
					remove_building = tb_arsenal_5
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_arsenal_6 }
					}
					remove_building = tb_arsenal_6
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_health_1 }
							has_building = tb_health_2
						}
					}
					remove_building = tb_health_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_health_2 }
					}
					remove_building = tb_health_2
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_farms_1 }
					}
					remove_building = tb_farms_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_cattle }
					}
					remove_building = tb_cattle
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_sheep_1 }
					}
					remove_building = tb_sheep_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_goat }
					}
					remove_building = tb_goat
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_swine_pen }
					}
					remove_building = tb_swine_pen
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_hunters_camp }
					}
					remove_building = tb_hunters_camp
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_lumberyard }
					}
					remove_building = tb_lumberyard
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_dartmoor_mines }
					}
					remove_building = tb_dartmoor_mines
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_gold_mines }
					}
					remove_building = tb_gold_mines
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_copper_mines }
					}
					remove_building = tb_copper_mines
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_iron_mines }
					}
					remove_building = tb_iron_mines
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_lead_mines }
					}
					remove_building = tb_lead_mines
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_vineyard_1 }
					}
					remove_building = tb_vineyard_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_warrior_cult }
					}
					remove_building = tb_warrior_cult
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_samarobriva_hall }
					}
					remove_building = tb_samarobriva_hall
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_saxon_war_hall_1 }
							has_building = tb_saxon_war_hall_2
						}
					}
					remove_building = tb_saxon_war_hall_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_saxon_war_hall_2 }
					}
					remove_building = tb_saxon_war_hall_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_irish_war_hall_1 }
							has_building = tb_irish_war_hall_2
						}
					}
					remove_building = tb_irish_war_hall_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_irish_war_hall_2 }
					}
					remove_building = tb_irish_war_hall_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_briton_war_hall_1 }
							has_building = tb_briton_war_hall_2
						}
					}
					remove_building = tb_briton_war_hall_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_briton_war_hall_2 }
					}
					remove_building = tb_briton_war_hall_2
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_basque_war_hall_1 }
					}
					remove_building = tb_basque_war_hall_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_norse_war_hall_1 }
					}
					remove_building = tb_norse_war_hall_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_norse_war_hall_1 }
							has_building = tb_norse_war_hall_2
						}
					}
					remove_building = tb_norse_war_hall_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_norse_war_hall_port_1 }
							has_building = tb_norse_war_hall_port_2
						}
					}
					remove_building = tb_norse_war_hall_port_1
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_norse_war_hall_port_2 }
					}
					remove_building = tb_norse_war_hall_port_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_caer_1 }
							has_building = tb_caer_2
						}
					}
					remove_building = tb_caer_1
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_caer_2 }
							has_building = tb_caer_3
						}
					}
					remove_building = tb_caer_2
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_caer_3 }
							has_building = tb_caer_4
						}
					}
					remove_building = tb_caer_3
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { has_building = tb_caer_4 }
							has_building = tb_caer_5
						}
					}
					remove_building = tb_caer_4
				}
				1 = {
					modifier = {
						factor = 0
						NOT = { has_building = tb_caer_5 }
					}
					remove_building = tb_caer_5
				}
			}
		}
	}
}

set_government_to_target_effect = {
	if = {
		limit = { event_target:target_to_switch_government_to = { government = imperial_government } }
		set_character_flag = converting_to_imperial_government
		set_government_type = imperial_government
		clr_character_flag = converting_to_imperial_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = sub_roman_brythonic_government } }
		set_government_type = sub_roman_brythonic_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = sub_roman_government } }
		set_government_type = sub_roman_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = germanic_government } }
		set_government_type = germanic_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = legion_government } }
		set_government_type = legion_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = feudal_government } }
		set_government_type = feudal_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = muslim_government } }
		set_government_type = muslim_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = nomadic_government } }
		set_government_type = nomadic_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = merchant_republic_government } }
		set_government_type = merchant_republic_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = republic_government } }
		set_government_type = republic_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = theocracy_government } }
		set_government_type = theocracy_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = tribal_government } }
		set_government_type = tribal_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = high_tribal_government } }
		set_government_type = high_tribal_government
	}
}

flag_target_government_effect = {
	if = {
		limit = { event_target:target_to_switch_government_to = { government = imperial_government } }
		set_character_flag = set_to_imperial_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = sub_roman_brythonic_government } }
		set_character_flag = set_to_sub_roman_brythonic_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = sub_roman_government } }
		set_character_flag = set_to_sub_roman_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = germanic_government } }
		set_character_flag = set_to_germanic_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = legion_government } }
		set_character_flag = set_to_legion_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = feudal_government } }
		set_character_flag = set_to_feudal_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = muslim_government } }
		set_character_flag = set_to_muslim_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = nomadic_government } }
		set_character_flag = set_to_nomadic_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = merchant_republic_government } }
		set_character_flag = set_to_merchant_republic_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = republic_government } }
		set_character_flag = set_to_republic_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = theocracy_government } }
		set_character_flag = set_to_theocracy_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = tribal_government } }
		set_character_flag = set_to_tribal_government
	}
	else_if = {
		limit = { event_target:target_to_switch_government_to = { government = high_tribal_government } }
		set_character_flag = set_to_high_tribal_government
	}
}

set_flagged_government_effect = {
	if = {
		limit = { has_character_flag = set_to_imperial_government }
		set_character_flag = converting_to_imperial_government
		set_government_type = imperial_government
		clr_character_flag = converting_to_imperial_government
		clr_character_flag = set_to_imperial_government
	}
	else_if = {
		limit = { has_character_flag = set_to_sub_roman_brythonic_government }
		set_government_type = sub_roman_brythonic_government
		clr_character_flag = set_to_sub_roman_brythonic_government
	}
	else_if = {
		limit = { has_character_flag = set_to_sub_roman_government }
		set_government_type = sub_roman_government
		clr_character_flag = set_to_sub_roman_government
	}
	else_if = {
		limit = { has_character_flag = set_to_germanic_government }
		set_government_type = germanic_government
		clr_character_flag = set_to_germanic_government
	}
	else_if = {
		limit = { has_character_flag = set_to_legion_government }
		set_government_type = legion_government
		clr_character_flag = set_to_legion_government
	}
	else_if = {
		limit = { has_character_flag = set_to_feudal_government }
		set_government_type = feudal_government
		clr_character_flag = set_to_feudal_government
	}
	else_if = {
		limit = { has_character_flag = set_to_muslim_government }
		set_government_type = muslim_government
		clr_character_flag = set_to_muslim_government
	}
	else_if = {
		limit = { has_character_flag = set_to_nomadic_government }
		set_government_type = nomadic_government
		clr_character_flag = set_to_nomadic_government
	}
	else_if = {
		limit = { has_character_flag = set_to_merchant_republic_government }
		set_government_type = merchant_republic_government
		clr_character_flag = set_to_merchant_republic_government
	}
	else_if = {
		limit = { has_character_flag = set_to_republic_government }
		set_government_type = republic_government
		clr_character_flag = set_to_republic_government
	}
	else_if = {
		limit = { has_character_flag = set_to_theocracy_government }
		set_government_type = theocracy_government
		clr_character_flag = set_to_theocracy_government
	}
	else_if = {
		limit = { has_character_flag = set_to_tribal_government }
		set_government_type = tribal_government
		clr_character_flag = set_to_tribal_government
	}
	else_if = {
		limit = { has_character_flag = set_to_high_tribal_government }
		set_government_type = high_tribal_government
		clr_character_flag = set_to_high_tribal_government
	}
}

flag_culture_pagan_religion_effect = {
	if = {
		limit = { is_brythonic_culture_trigger = yes }
		if = {
			limit = { NOT = { has_global_flag = briton_reformation } }
			set_character_flag = converted_briton_pagan
		}
		if = {
			limit = { has_global_flag = briton_reformation }
			set_character_flag = converted_briton_pagan_reformed
		}
	}
	if = {
		limit = { culture = pictish }
		if = {
			limit = { NOT = { has_global_flag = pict_reformation } }
			set_character_flag = converted_pict_pagan
		}
		if = {
			limit = { has_global_flag = pict_reformation }
			set_character_flag = converted_pict_pagan_reformed
		}
	}
	if = {
		limit = { is_gaelic_culture_trigger = yes }
		if = {
			limit = { NOT = { has_global_flag = gael_reformation } }
			set_character_flag = converted_gael_pagan
		}
		if = {
			limit = { has_global_flag = gael_reformation }
			set_character_flag = converted_gael_pagan_reformed
		}
	}
	if = {
		limit = { is_north_germanic_trigger = yes }
		if = {
			limit = { NOT = { has_global_flag = norse_reformation } }
			set_character_flag = converted_norse_pagan
		}
		if = {
			limit = { has_global_flag = norse_reformation }
			set_character_flag = converted_norse_pagan_reformed
		}
	}
	if = {
		limit = { is_ingvaeonic_culture_trigger = yes }
		if = {
			limit = { NOT = { has_global_flag = germanic_reformation } }
			set_character_flag = converted_germanic_pagan
		}
		if = {
			limit = { has_global_flag = germanic_reformation }
			set_character_flag = converted_germanic_pagan_reformed
		}
	}
	if = {
		limit = { is_istvaeonic_culture_trigger = yes }
		if = {
			limit = { NOT = { has_global_flag = frankish_reformation } }
			set_character_flag = converted_frankish_pagan
		}
		if = {
			limit = { has_global_flag = frankish_reformation }
			set_character_flag = converted_frankish_pagan_reformed
		}
	}
	if = {
		limit = { is_irminonic_culture_trigger = yes }
		if = {
			limit = { NOT = { has_global_flag = suebic_reformation } }
			set_character_flag = converted_suebic_pagan
		}
		if = {
			limit = { has_global_flag = suebic_reformation }
			set_character_flag = converted_suebic_pagan_reformed
		}
	}
	if = {
		limit = { is_east_germanic_trigger = yes }
		if = {
			limit = { NOT = { has_global_flag = gothic_reformation } }
			set_character_flag = converted_gothic_pagan
		}
		if = {
			limit = { has_global_flag = gothic_reformation }
			set_character_flag = converted_gothic_pagan_reformed
		}
	}
	if = {
		limit = { culture_group = sarmatian }
		if = {
			limit = { NOT = { has_global_flag = alan_reformation } }
			set_character_flag = converted_alan_pagan
		}
		if = {
			limit = { has_global_flag = alan_reformation }
			set_character_flag = converted_alan_pagan_reformed
		}
	}
	if = {
		limit = { culture_group = altaic }
		if = {
			limit = { NOT = { has_global_flag = tengri_reformation } }
			set_character_flag = converted_tengri_pagan
		}
		if = {
			limit = { has_global_flag = tengri_reformation }
			set_character_flag = converted_tengri_pagan_reformed
		}
	}
	if = {
		limit = { culture_group = basque }
		if = {
			limit = { NOT = { has_global_flag = vasconic_reformation } }
			set_character_flag = converted_vasconic_pagan
		}
		if = {
			limit = { has_global_flag = vasconic_reformation }
			set_character_flag = converted_vasconic_pagan_reformed
		}
	}
	if = {
		limit = { is_roman_pagan_culture_trigger = yes }
		if = {
			limit = { NOT = { has_global_flag = roman_reformation } }
			set_character_flag = converted_roman_pagan
		}
		else = {
			set_character_flag = converted_roman_pagan_reformed
		}
		# if = {
			# limit = { has_global_flag = roman_reformation_sol_invictus }
			# set_character_flag = converted_sol_invictus
		# }
	}
	if = {
		limit = { culture_group = israelite }
		set_character_flag = converted_jewish
	}
}

destroy_held_religion_head_title_effect = {
	if = {
		limit = { 
			NOR = {
				AND = {
					has_religion_features = no
					is_celtic_pagan_trigger = yes
				}
				has_religion_feature = religion_druidic_leadership
			}
		}
		any_demesne_title = {
			limit = {
				controls_religion = yes
			}
			if = {			# Temporal religious head titles are destroyed
				limit = { is_landless_type_title = no }
				destroy_landed_title = THIS
			}
			else = {		# Hierocratic religious head titles are given to a random new character
				hidden_tooltip = {
					liege = {
						save_event_target_as = liege_target
					}
					create_character = {
						age = 38
						dynasty = random
						religion = ROOT
						culture = ROOT
						random_traits = yes
					}
					new_character = {
						save_event_target_as = new_holder
					}
				}
				any_demesne_title = {
					limit = {
						controls_religion = yes
					}
					grant_title = event_target:new_holder
					holder_scope = {
						any_vassal = {
							set_defacto_liege = event_target:liege_target
						}
					}
				}
				hidden_tooltip = {
					set_defacto_liege = event_target:liege_target
				}
			}
		}
	}
	else = {		# Druidic religious head titles trigger succession
		if = {
			limit = { has_landed_title = d_briton_pagan }
			hidden_tooltip = { character_event = { id = 316047 } }
		}
		if = {
			limit = { has_landed_title = d_pict_pagan }
			hidden_tooltip = { character_event = { id = 316147 } }
		}
		if = {
			limit = { has_landed_title = d_gael_pagan }
			hidden_tooltip = { character_event = { id = 316247 } }
		}
	}
}

# Searches lieges of liege for the first one that is King-tier or higher, and then makes the current scope their vassal
# Used to ensure that characters don't become needlessly independent when taking a duke-tier title (i.e. the Archdruidship)
set_proper_liege_for_duke_tier_effect = {
	if = {
		limit = { 
			liege = { 
				lower_real_tier_than = KING 
				liege = {
					higher_real_tier_than = DUKE
				}
			} 	
		}
		liege = {
			liege = {
				set_defacto_vassal = ROOT
			}
		}
	}
	if = {
		limit = { 
			liege = { 
				lower_real_tier_than = KING 
				liege = {
					lower_real_tier_than = KING
					independent = no
				}
			} 	
		}
		liege = {
			liege = {
				liege = {
					set_defacto_vassal = ROOT
				}
			}
		}
	}
}

convert_to_default_cultural_pagan_religion_effect = {
	if = {
		limit = {
			is_brythonic_culture_trigger = yes
			NOT = { has_global_flag = briton_reformation }
		}
		religion = briton_pagan
	}
	if = {
		limit = {
			is_brythonic_culture_trigger = yes
			has_global_flag = briton_reformation
		}
		religion = briton_pagan_reformed
	}
	if = {
		limit = {
			culture = pictish 
			NOT = { has_global_flag = pict_reformation }
		}
		religion = pict_pagan
	}
	if = {
		limit = {
			culture = pictish 
			has_global_flag = pict_reformation
		}
		religion = pict_pagan_reformed
	}
	if = {
		limit = {
			is_gaelic_culture_trigger = yes
			NOT = { has_global_flag = gael_reformation }
		}
		religion = gael_pagan
	}
	if = {
		limit = {
			is_gaelic_culture_trigger = yes
			has_global_flag = gael_reformation
		}
		religion = gael_pagan_reformed
	}
	if = {
		limit = {
			is_ingvaeonic_culture_trigger = yes		
			NOT = { has_global_flag = germanic_reformation } 
		}
		religion = germanic_pagan
	}
	if = {
		limit = { 
			is_ingvaeonic_culture_trigger = yes
			has_global_flag = germanic_reformation 
		}
		religion = germanic_pagan_reformed
	}
	if = {
		limit = {
			is_north_germanic_trigger = yes	
			NOT = { has_global_flag = norse_reformation } 
		}
		religion = norse_pagan
	}
	if = {
		limit = {
			is_north_germanic_trigger = yes
			has_global_flag = norse_reformation 			
		}
		religion = norse_pagan_reformed
	}
	if = {
		limit = {
			is_istvaeonic_culture_trigger = yes		
			NOT = { has_global_flag = frankish_reformation } 
		}
		religion = frankish_pagan
	}
	if = {
		limit = {
			is_istvaeonic_culture_trigger = yes		
			has_global_flag = frankish_reformation 			
		}
		religion = frankish_pagan_reformed
	}
	if = {
		limit = {
			is_irminonic_culture_trigger = yes	
			NOT = { has_global_flag = suebic_reformation } 
		}
		religion = suebic_pagan
	}
	if = {
		limit = {
			is_irminonic_culture_trigger = yes		
			has_global_flag = suebic_reformation 			
		}
		religion = suebic_pagan_reformed
	}
	if = {
		limit = {
			is_east_germanic_trigger = yes	
			NOT = { has_global_flag = gothic_reformation } 
		}
		religion = gothic_pagan
	}
	if = {
		limit = {
			is_east_germanic_trigger = yes		
			has_global_flag = gothic_reformation 			
		}
		religion = gothic_pagan_reformed
	}
	if = {
		limit = {
			is_roman_pagan_culture_trigger = yes		
			NOT = { has_global_flag = roman_reformation }		
		}
		religion = roman_pagan
	}
	if = {
		limit = {
			is_roman_pagan_culture_trigger = yes		
			has_global_flag = roman_reformation			
		}
		religion = roman_pagan_reformed
	}
	# if = {
		# limit = {
			# is_roman_pagan_culture_trigger = yes		
			# has_global_flag = roman_reformation_sol_invictus 			
		# }
		# religion = sol_invictus
	# }
	if = {
		limit = { 
			culture_group = sarmatian
			NOT = { has_global_flag = alan_reformation } 
		}
		religion = alan_pagan
	}
	if = {
		limit = { 
			culture_group = sarmatian
			has_global_flag = alan_reformation 
		}
		religion = alan_pagan_reformed
	}
	if = {
		limit = { 
			culture_group = altaic
			NOT = { has_global_flag = tengri_reformation } 
		}
		religion = tengri_pagan
	}
	if = {
		limit = { 
			culture_group = altaic
			has_global_flag = tengri_reformation 
		}
		religion = tengri_pagan_reformed
	}
	if = {
		limit = { 
			culture_group = basque
			NOT = { has_global_flag = vasconic_reformation } 
		}
		religion = vasconic_pagan
	}
	if = {
		limit = { 
			culture_group = basque
			has_global_flag = vasconic_reformation 
		}
		religion = vasconic_pagan_reformed
	}
	if = {
		limit = { 
			culture_group = israelite
		}
		religion = jewish
	}
}

set_proper_pagan_religions_effect = {
	any_character = {
		limit = { religion = pagan }
		convert_to_default_cultural_pagan_religion_effect = yes
	}
	any_province = {
		limit = { religion = pagan }
		convert_to_default_cultural_pagan_religion_effect = yes
	}
}

flag_theocracy_titles_effect = {
	if = {
		limit = { is_theocracy = yes }
		set_character_flag = is_theocracy
		if = {
			limit = { independent = no }
			liege = { save_event_target_as = archdruid_liege }
		}
		any_demesne_title = {
			set_title_flag = archdruid_title_@PREV
		}
	}
}

# Used in conjunction with the above
restore_theocracy_titles_effect = {
	if = {
		limit = { has_character_flag = is_theocracy }
		clr_character_flag = is_theocracy
		any_title = {
			limit = { has_title_flag = archdruid_title_@PREV }
			clr_title_flag = archdruid_title_@PREV
			grant_title = PREV
		}
		event_target:archdruid_liege = {
			set_defacto_vassal = PREV
		}
	}
}

reset_aengland_bretwalda_authority_scores_effect = {
	set_variable = { 
		which = aengland_seize_control_score
		which = aengland_bretwalda_authority
	}
	set_variable = { 
		which = aengland_seize_control_score_2
		which = aengland_bretwalda_authority
	}
	set_variable = { 
		which = aengland_seize_control_score_3
		which = aengland_bretwalda_authority
	}
	set_variable = { 
		which = aengland_seize_control_score_4
		which = aengland_bretwalda_authority
	}
	set_variable = { 
		which = aengland_vassalize_subject_score
		which = aengland_bretwalda_authority
	}
	set_variable = { 
		which = aengland_vassalize_subject_score_2
		which = aengland_bretwalda_authority
	}
	set_variable = { 
		which = aengland_vassalize_subject_score_3
		which = aengland_bretwalda_authority
	}
	set_variable = { 
		which = aengland_vassalize_subject_score_4
		which = aengland_bretwalda_authority
	}
}

set_proper_local_resistance_level_effect = {
	if = {
		limit = { 
			check_variable = {
				which = pacification_years_remaining
				value = 26
			}
		}
		remove_province_modifier = local_resistance_1
		remove_province_modifier = local_resistance_2
		remove_province_modifier = local_resistance_1_quiet
		remove_province_modifier = local_resistance_2_quiet
		remove_province_modifier = local_resistance_1_march
		remove_province_modifier = local_resistance_2_march
		if = {
			limit = { owner = { culture = ROOT } }
			add_province_modifier = { 
				name = local_resistance_3_quiet
				duration = -1
			}
		}
		else_if = {
			limit = { owner = { top_liege = { is_tributary = { type = march } } } }
			add_province_modifier = { 
				name = local_resistance_3_march
				duration = -1
			}
		}
		else = {
			add_province_modifier = { 
				name = local_resistance_3
				duration = -1
			}
		}
	}
	else_if = {
		limit = { 
			check_variable = {
				which = pacification_years_remaining
				value = 11
			}
		}
		remove_province_modifier = local_resistance_1
		remove_province_modifier = local_resistance_3
		remove_province_modifier = local_resistance_1_quiet
		remove_province_modifier = local_resistance_3_quiet
		remove_province_modifier = local_resistance_1_march
		remove_province_modifier = local_resistance_3_march
		if = {
			limit = { owner = { culture = ROOT } }
			add_province_modifier = { 
				name = local_resistance_2_quiet
				duration = -1
			}
		}
		else_if = {
			limit = { owner = { top_liege = { is_tributary = { type = march } } } }
			add_province_modifier = { 
				name = local_resistance_2_march
				duration = -1
			}
		}
		else = {
			add_province_modifier = { 
				name = local_resistance_2
				duration = -1
			}
		}
	}
	else = {
		remove_province_modifier = local_resistance_1
		remove_province_modifier = local_resistance_2
		remove_province_modifier = local_resistance_1_quiet
		remove_province_modifier = local_resistance_2_quiet
		remove_province_modifier = local_resistance_1_march
		remove_province_modifier = local_resistance_2_march
		if = {
			limit = { owner = { culture = ROOT } }
			add_province_modifier = { 
				name = local_resistance_1_quiet
				duration = -1
			}
		}
		else_if = {
			limit = { owner = { top_liege = { is_tributary = { type = march } } } }
			add_province_modifier = { 
				name = local_resistance_1_march
				duration = -1
			}
		}
		else = {
			add_province_modifier = { 
				name = local_resistance_1
				duration = -1
			}
		}
	}
}

# Adds to the global_nat_revolt_progress_increase variable
calculate_province_nat_revolt_progress_increase_effect = {
	# Base value
	set_variable = {
		which = local_nat_revolt_progress_increase
		value = 0
	}
	if = {
		limit = {
			OR = {
				has_province_modifier = local_resistance_1
				has_province_modifier = local_resistance_1_quiet
				has_province_modifier = local_resistance_1_march
			}
		}
		change_variable = {
			which = local_nat_revolt_progress_increase
			value = 0.5
		}
	}
	else_if = {
		limit = {
			OR = {
				has_province_modifier = local_resistance_2
				has_province_modifier = local_resistance_2_quiet
				has_province_modifier = local_resistance_2_march
			}
		}
		change_variable = {
			which = local_nat_revolt_progress_increase
			value = 1
		}
	}
	else_if = {
		limit = {
			OR = {
				has_province_modifier = local_resistance_3
				has_province_modifier = local_resistance_3_quiet
				has_province_modifier = local_resistance_3_march
			}
		}
		change_variable = {
			which = local_nat_revolt_progress_increase
			value = 1.5
		}
	}
	
	# Local control and march modifiers
	if = {
		limit = {	# 20% more
			OR = {
				has_province_modifier = local_resistance_1_quiet
				has_province_modifier = local_resistance_2_quiet
				has_province_modifier = local_resistance_3_quiet
			}
		}
		multiply_variable = {
			which = local_nat_revolt_progress_increase
			value = 1.2
		}
	}
	else_if = {
		limit = {	# 25% less
			OR = {
				has_province_modifier = local_resistance_1_march
				has_province_modifier = local_resistance_2_march
				has_province_modifier = local_resistance_3_march
			}
		}
		multiply_variable = {
			which = local_nat_revolt_progress_increase
			value = 0.75
		}
	}
	
	# Some variation for each province
	random_list = {
		33 = {
			multiply_variable = {	# +15 %
				which = local_nat_revolt_progress_increase
				value = 1.15
			}
		}
		33 = {						# No change
		}
		33 = {
			multiply_variable = {	# -15 %
				which = local_nat_revolt_progress_increase
				value = 0.85
			}
		}
	}
	
	# Add to global count
	change_variable = {
		which = global_nat_revolt_progress_increase
		which = local_nat_revolt_progress_increase
	}
}

# Should only be used on top lieges, assumes that the event target current_resistance_region_province 
# Arguments:
# - current_resistance_region_province			event_target, a province in the region to check the nationalist revolt size of
update_nationalist_revolt_size = {
	set_variable = {
		which = global_nat_revolt_progress_increase
		value = 0
	}
	
	# Add together all provinces under the realm
	any_realm_province = {
		limit = {
			has_province_flag = has_local_resistance
			is_in_current_resistance_region_province = yes
		}
		calculate_province_nat_revolt_progress_increase_effect = yes
	}
	# ... including suzerains (if a march)
	if = {
		limit = { is_tributary = { type = march } }
		suzerain = {
			any_realm_province = {
				limit = {
					has_province_flag = has_local_resistance
					is_in_current_resistance_region_province = yes
				}
				calculate_province_nat_revolt_progress_increase_effect = yes
			}
			# Check other marches of suzerain
			any_tributary = {
				limit = { 
					is_tributary = { type = march } 
					NOT = { character = PREVPREV }
				}
				any_realm_province = {
					limit = {
						has_province_flag = has_local_resistance
						is_in_current_resistance_region_province = yes
					}
					calculate_province_nat_revolt_progress_increase_effect = yes
				}
			}
		}
	}
	# ... and marches (if realm has marches)
	any_tributary = {
		limit = { is_tributary = { type = march } }
		any_realm_province = {
			limit = {
				has_province_flag = has_local_resistance
				is_in_current_resistance_region_province = yes
			}
			calculate_province_nat_revolt_progress_increase_effect = yes
		}
	}
	
	# Calculate estimated revolt size
	set_variable = {
		which = global_nat_revolt_estimated_size
		which = global_nat_revolt_progress_increase
	}
	# Round down to nearest 10
	divide_variable = {
		which = global_nat_revolt_estimated_size
		value = 10
	}
	multiply_variable = {
		which = global_nat_revolt_estimated_size
		value = 5000
	}
	
	# Now we assign the estimated size (for tooltip purposes only)
	any_realm_province = {
		limit = {
			has_province_flag = has_local_resistance
			is_in_current_resistance_region_province = yes
		}
		set_variable = {
			which = nat_revolt_estimated_size
			which = global_nat_revolt_estimated_size
		}
	}
	if = {
		limit = { is_tributary = { type = march } }
		suzerain = {
			any_realm_province = {
				limit = {
					has_province_flag = has_local_resistance
					is_in_current_resistance_region_province = yes
				}
				set_variable = {
					which = nat_revolt_estimated_size
					which = global_nat_revolt_estimated_size
				}
			}
			# Check other marches of suzerain
			any_tributary = {
				limit = { 
					is_tributary = { type = march } 
					NOT = { character = PREVPREV }
				}
				any_realm_province = {
					limit = {
						has_province_flag = has_local_resistance
						is_in_current_resistance_region_province = yes
					}
					set_variable = {
						which = nat_revolt_estimated_size
						which = global_nat_revolt_estimated_size
					}
				}
			}
		}
	}
	any_tributary = {
		limit = { is_tributary = { type = march } }
		any_realm_province = {
			limit = {
				has_province_flag = has_local_resistance
				is_in_current_resistance_region_province = yes
			}
			set_variable = {
				which = nat_revolt_estimated_size
				which = global_nat_revolt_estimated_size
			}
		}
	}
}

# Called from province scope
clear_nationalist_revolt_progress_from_realm_region_effect = {
	save_event_target_as = current_resistance_region_province
	owner = {
		top_liege = {
			any_realm_province = {
				limit = {
					has_province_flag = has_local_resistance
					is_in_current_resistance_region_province = yes
				}
				set_variable = {
					which = nat_revolt_estimated_size
					value = 0
				}
			}
			if = {
				limit = { is_tributary = { type = march } }
				suzerain = {
					any_realm_province = {
						limit = {
							has_province_flag = has_local_resistance
							is_in_current_resistance_region_province = yes
						}
						set_variable = {
							which = nat_revolt_estimated_size
							value = 0
						}
					}
					# Check other marches of suzerain
					any_tributary = {
						limit = { 
							is_tributary = { type = march } 
							NOT = { character = PREVPREV }
						}
						any_realm_province = {
							limit = {
								has_province_flag = has_local_resistance
								is_in_current_resistance_region_province = yes
							}
							set_variable = {
								which = nat_revolt_estimated_size
								value = 0
							}
						}
					}
				}
			}
			any_tributary = {
				limit = { is_tributary = { type = march } }
				any_realm_province = {
					limit = {
						has_province_flag = has_local_resistance
						is_in_current_resistance_region_province = yes
					}
					set_variable = {
						which = nat_revolt_estimated_size
						value = 0
					}
				}
			}
		}
	}
}

adjust_revolt_army_size_effect = {
	set_variable = {
		which = global_troop_change
		value = 0
	}
	
	# Adjust for tribal holding slots (can make troops spiral out of control if there are many)
	if = {
		limit = { ROOT = { any_province_holding = { holding_type = TRIBAL } } }
		if = {
			limit = { 
				ROOT = { num_of_empty_holdings = 3 } 
			}
			change_variable = {
				which = global_troop_change
				value = -0.25
			}
		}
		else_if = {
			limit = { 
				ROOT = { num_of_empty_holdings = 2 } 
			}
			change_variable = {
				which = global_troop_change
				value = -0.15
			}
		}
		
		# Offset additional maluses from tribal + wrong culture/religion
		if = {
			limit = { ROOT = { owner = { NOT = { culture = ROOT } } } }
			change_variable = {
				which = global_troop_change
				value = 0.10
			}
		}
		if = {
			limit = { ROOT = { owner = { NOT = { culture_group = ROOT } } } }
			change_variable = {
				which = global_troop_change
				value = 0.15
			}
		}
		if = {
			limit = { ROOT = { owner = { NOT = { religion = ROOT } } } }
			change_variable = {
				which = global_troop_change
				value = 0.05
			}
		}
		if = {
			limit = { ROOT = { owner = { NOT = { religion_group = ROOT } } } }
			change_variable = {
				which = global_troop_change
				value = 0.10
			}
		}
		if = {
			limit = { ROOT = { has_province_modifier = province_not_dejure_liege } }
			change_variable = {
				which = global_troop_change
				value = 0.10
			}
		}
	}
	# Offset base wrong culture/religion maluses
	if = {
		limit = { ROOT = { owner = { NOT = { culture = ROOT } } } }
		change_variable = {
			which = global_troop_change
			value = 0.10
		}
	}
	if = {
		limit = { ROOT = { owner = { NOT = { culture_group = ROOT } } } }
		change_variable = {
			which = global_troop_change
			value = 0.15
		}
	}
	if = {
		limit = { ROOT = { owner = { NOT = { religion = ROOT } } } }
		change_variable = {
			which = global_troop_change
			value = 0.10
		}
	}
	if = {
		limit = { ROOT = { owner = { NOT = { religion_group = ROOT } } } }
		change_variable = {
			which = global_troop_change
			value = 0.15
		}
	}
	
	# Note: since many of the local resistance modifiers significantly decrease levy and garrison size, most of these increases
	# are not as large as they look like
	if = {
		limit = { ROOT = { has_province_modifier = local_resistance_3 } }
		change_variable = {
			which = global_troop_change
			value = 0.5
		}
	}
	else_if = {
		limit = { ROOT = { has_province_modifier = local_resistance_2 } }
		change_variable = {
			which = global_troop_change
			value = 0.37
		}
	}
	else_if = {
		limit = { ROOT = { has_province_modifier = local_resistance_1 } }
		change_variable = {
			which = global_troop_change
			value = 0.25
		}
	}
	else_if = {
		limit = { ROOT = { has_province_modifier = local_resistance_3_quiet } }
		change_variable = {
			which = global_troop_change
			value = 0.25
		}
	}
	else_if = {
		limit = { ROOT = { has_province_modifier = local_resistance_2_quiet } }
		change_variable = {
			which = global_troop_change
			value = 0.17
		}
	}
	else_if = {
		limit = { ROOT = { has_province_modifier = local_resistance_1_quiet } }
		change_variable = {
			which = global_troop_change
			value = 0.1
		}
	}
	else_if = {
		limit = { ROOT = { has_province_modifier = local_resistance_3_march } }
		change_variable = {
			which = global_troop_change
			value = 0.3
		}
	}
	else_if = {
		limit = { ROOT = { has_province_modifier = local_resistance_2_march } }
		change_variable = {
			which = global_troop_change
			value = 0.2
		}
	}
	else_if = {
		limit = { ROOT = { has_province_modifier = local_resistance_1_march } }
		change_variable = {
			which = global_troop_change
			value = 0.1
		}
	}
	
	# Cultural affinity of other provinces
	ROOT = { 
		owner = { 
			top_liege = {
				if = {
					limit = { 
						any_realm_province = {
							count = 15
							culture = ROOT
						}
					}
					change_variable = {
						which = global_troop_change
						value = 0.35
					}
				}
				if = {
					limit = { 
						any_realm_province = {
							count = 10
							culture = ROOT
						}
					}
					change_variable = {
						which = global_troop_change
						value = 0.2
					}
				}
				else_if = {
					limit = { 
						any_realm_province = {
							count = 7
							culture = ROOT
						}
					}
					change_variable = {
						which = global_troop_change
						value = 0.1
					}
				}
				else_if = {
					limit = {
						NOT = {
							any_realm_province = {
								count = 5
								culture = ROOT
							}
						}
					}
					change_variable = {
						which = global_troop_change
						value = -0.1
					}
				}
				else_if = {
					limit = {
						NOT = {
							any_realm_province = {
								count = 3
								culture = ROOT
							}
						}
					}
					change_variable = {
						which = global_troop_change
						value = -0.2
					}
				}
				else_if = {
					limit = {
						NOT = {
							any_realm_province = {
								count = 2
								culture = ROOT
							}
						}
					}
					change_variable = {
						which = global_troop_change
						value = -0.35
					}
				}
			} 
		} 
	}
	
	# Imperial provinces are less resistant if the owner is of the same religion
	if = {
		limit = { 
			ROOT = { 
				NOT = { any_province_holding = { holding_type = TRIBAL } }
				culture_group = imperiale
				owner = { 
					NOT = { culture_group = imperiale } 
					religion = ROOT
				}
			}
		}
		change_variable = {
			which = global_troop_change
			value = -0.15
		}
	}
	
	# global_troop_decrease = (1 + global_troop_change) / 2 - 1
	# Converts global_troop_decrease into a decrease from 2 * the normal size
	set_variable = {
		which = global_troop_decrease
		which = global_troop_change
	}
	change_variable = {
		which = global_troop_decrease
		value = 1
	}
	divide_variable = {
		which = global_troop_decrease
		value = 2
	}
	subtract_variable = {
		which = global_troop_decrease
		value = 1
	}
	any_army = {
		troops = global_troop_decrease
	}
}

flag_faction_revolt_title_effect = {
	ROOT = { 
		primary_title = { 
			if = {
				limit = {
					is_titular = yes
					temporary = yes
				}
				d_null = { set_title_flag = temp_revolt_title_@PREV } 
			}
		} 
	}
}

destroy_faction_revolt_title_effect = {
	hidden_tooltip = {
		any_title = {
			limit = {
				d_null = { has_title_flag = temp_revolt_title_@PREV }
				OR = {
					has_holder = no
					holder_scope = { war = no }
				}
			}
			destroy_landed_title = THIS
			activate_title = { title = THIS status = no }
			d_null = { clr_title_flag = temp_revolt_title_@PREV }
		}
	}
}

### ROMAN LEGIONS ###

spawn_legio_VI_victrix = {
	spawn_unit = {
		province = PREV
		troops = {
			archers = { 200 200 }
			heavy_infantry = { 800 800 }
		}
		attrition = 1.0
		reinforces = yes
		maintenance_multiplier = 1.5
		reinforce_rate_multiplier = 1.25
		earmark = legio_six_victrix
	}
}
spawn_legio_XX_valeria_victrix = {
	spawn_unit = {
		province = PREV
		troops = {
			light_cavalry = { 50 50 }
			archers = { 150 150 }
			heavy_infantry = { 800 800 }
		}
		attrition = 1.0
		reinforces = yes
		maintenance_multiplier = 1.5
		reinforce_rate_multiplier = 1.25
		earmark = legio_twenty_valeria_victrix
	}
}
spawn_legio_II_augusta = {
	spawn_unit = {
		province = PREV
		troops = {
			heavy_infantry = { 1000 1000 }
		}
		attrition = 1.0
		reinforces = yes
		maintenance_multiplier = 1.5
		reinforce_rate_multiplier = 1.25
		earmark = legio_two_augusta
	}
}
spawn_legio_II_britannica = {
	spawn_unit = {
		province = PREV
		troops = {
			heavy_infantry = { 900 900 }
			knights = { 100 100 }
		}
		attrition = 1.0
		reinforces = yes
		maintenance_multiplier = 1.5
		reinforce_rate_multiplier = 1.25
		earmark = legio_two_britannica
	}
}
spawn_legio_I_flavia_gallicana_constantia = {
	spawn_unit = {
		province = PREV
		troops = {
			knights = { 200 200 }
			heavy_infantry = { 1000 1000 }
		}
		attrition = 1.0
		reinforces = yes
		maintenance_multiplier = 1.5
		reinforce_rate_multiplier = 1.25
		earmark = legio_one_constantia
	}
}
spawn_legio_I_flavia_martis = {
	spawn_unit = {
		province = PREV
		troops = {
			heavy_infantry = { 900 900 }
			pikemen = { 100 100 }
			archers = { 100 100 }
			light_cavalry = { 100 100 }
		}
		attrition = 1.0
		reinforces = yes
		maintenance_multiplier = 1.5
		reinforce_rate_multiplier = 1.25
		earmark = legio_one_flavia
	}
}
spawn_legio_I_minervia = {
	spawn_unit = {
		province = PREV
		troops = {
			heavy_infantry = { 800 800 }
			pikemen = { 300 300 }
			light_cavalry = { 100 100 }
		}
		attrition = 1.0
		reinforces = yes
		maintenance_multiplier = 1.5
		reinforce_rate_multiplier = 1.25
		earmark = legio_one_minervia
	}
}
spawn_legio_XXX_ulpia_victrix = {
	spawn_unit = {
		province = PREV
		troops = {
			heavy_infantry = { 1000 1000 }
			pikemen = { 100 100 }
			knights = { 100 100 }
		}
		attrition = 1.0
		reinforces = yes
		maintenance_multiplier = 1.5
		reinforce_rate_multiplier = 1.25
		earmark = legio_thirty_ulpia
	}
}
spawn_legio_XII_victrix = {
	spawn_unit = {
		province = PREV
		troops = {
			heavy_infantry = { 700 700 }
			pikemen = { 300 300 }
			light_cavalry = { 200 200 }
		}
		attrition = 1.0
		reinforces = yes
		maintenance_multiplier = 1.5
		reinforce_rate_multiplier = 1.25
		earmark = legio_twelve_victrix
	}
}
spawn_legio_VI_gallicana = {
	spawn_unit = {
		province = PREV
		troops = {
			archers = { 200 200 }
			heavy_infantry = { 1000 1000 }
		}
		attrition = 1.0
		reinforces = yes
		maintenance_multiplier = 1.5
		reinforce_rate_multiplier = 1.25
		earmark = legio_six_gallicana
	}
}
spawn_classis_britannica = {
	spawn_unit = {
		province = PREV
		troops = {
			galleys = { 60 60 }
		}
		#attrition = 1.0
		reinforces = yes
		maintenance_multiplier = 0.75
		reinforce_rate_multiplier = 1.25
		earmark = classis_britannica
	}
}

ROOT_rebel_spawn_held_legion_at_capital = {
	if = {
		limit = { 
			has_landed_title = d_legio_vi_victrix 
			ROOT = { liege_before_war = { has_earmarked_regiments = legio_six_victrix } }
		}
		ROOT = {
			capital_scope = {
				ROOT = {
					spawn_legio_VI_victrix = yes
				}
			}
		}
	}
	if = {
		limit = { 
			has_landed_title = d_legio_xx_valeria_victrix 
			ROOT = { liege_before_war = { has_earmarked_regiments = legio_twenty_valeria_victrix } }
		}
		ROOT = {
			capital_scope = {
				ROOT = {
					spawn_legio_XX_valeria_victrix = yes
				}
			}
		}
	}
	if = {
		limit = { 
			has_landed_title = d_legio_ii_augusta 
			ROOT = { liege_before_war = { has_earmarked_regiments = legio_two_augusta } }
		}
		ROOT = {
			capital_scope = {
				ROOT = {
					spawn_legio_II_augusta = yes
				}
			}
		}
	}
	if = {
		limit = { 
			has_landed_title = d_legio_ii_britannica 
			ROOT = { liege_before_war = { has_earmarked_regiments = legio_two_britannica } }
		}
		ROOT = {
			capital_scope = {
				ROOT = {
					spawn_legio_II_britannica = yes
				}
			}
		}
	}
	if = {
		limit = { 
			has_landed_title = d_legio_i_flavia_gallicana_constantia 
			ROOT = { liege_before_war = { has_earmarked_regiments = legio_one_constantia } }
		}
		ROOT = {
			capital_scope = {
				ROOT = {
					spawn_legio_I_flavia_gallicana_constantia = yes
				}
			}
		}
	}
	if = {
		limit = { 
			has_landed_title = d_legio_i_flavia_martis 
			ROOT = { liege_before_war = { has_earmarked_regiments = legio_one_flavia } }
		}
		ROOT = {
			capital_scope = {
				ROOT = {
					spawn_legio_I_flavia_martis = yes
				}
			}
		}
	}
	if = {
		limit = { 
			has_landed_title = d_legio_i_minervia 
			ROOT = { liege_before_war = { has_earmarked_regiments = legio_one_minervia } }
		}
		ROOT = {
			capital_scope = {
				ROOT = {
					spawn_legio_I_minervia = yes
				}
			}
		}
	}
	if = {
		limit = { 
			has_landed_title = d_legio_xxx_ulpia_victrix 
			ROOT = { liege_before_war = { has_earmarked_regiments = legio_thirty_ulpia } }
		}
		ROOT = {
			capital_scope = {
				ROOT = {
					spawn_legio_XXX_ulpia_victrix = yes
				}
			}
		}
	}
	if = {
		limit = { 
			has_landed_title = d_legio_xii_victrix 
			ROOT = { liege_before_war = { has_earmarked_regiments = legio_twelve_victrix } }
		}
		ROOT = {
			capital_scope = {
				ROOT = {
					spawn_legio_XII_victrix = yes
				}
			}
		}
	}
	if = {
		limit = { 
			has_landed_title = d_legio_vi_gallicana 
			ROOT = { liege_before_war = { has_earmarked_regiments = legio_six_gallicana } }
		}
		ROOT = {
			capital_scope = {
				ROOT = {
					spawn_legio_VI_gallicana = yes
				}
			}
		}
	}
	if = {
		limit = { 
			has_landed_title = d_classis_britannica 
			ROOT = { liege_before_war = { has_earmarked_regiments = classis_britannica } }
		}
		ROOT = {
			capital_scope = {
				ROOT = {
					spawn_classis_britannica = yes
				}
			}
		}
	}
}

disband_held_rebel_legion_from_ROOT = {
	custom_tooltip = {
		text = EVTOPTA315921TT
	}
	hidden_tooltip = {
		if = {
			limit = { 
				has_landed_title = d_legio_vi_victrix 
				ROOT = { has_earmarked_regiments = legio_six_victrix }
			}
			ROOT = {
				disband_event_forces = legio_six_victrix
			}
		}
		if = {
			limit = { 
				has_landed_title = d_legio_xx_valeria_victrix 
				ROOT = { has_earmarked_regiments = legio_twenty_valeria_victrix }
			}
			ROOT = {
				disband_event_forces = legio_twenty_valeria_victrix
			}
		}
		if = {
			limit = { 
				has_landed_title = d_legio_ii_augusta 
				ROOT = { has_earmarked_regiments = legio_two_augusta }
			}
			ROOT = {
				disband_event_forces = legio_two_augusta
			}
		}
		if = {
			limit = { 
				has_landed_title = d_legio_ii_britannica 
				ROOT = { has_earmarked_regiments = legio_two_britannica }
			}
			ROOT = {
				disband_event_forces = legio_two_britannica
			}
		}
		if = {
			limit = { 
				has_landed_title = d_legio_i_flavia_gallicana_constantia 
				ROOT = { has_earmarked_regiments = legio_one_constantia }
			}
			ROOT = {
				disband_event_forces = legio_one_constantia
			}
		}
		if = {
			limit = { 
				has_landed_title = d_legio_i_flavia_martis 
				ROOT = { has_earmarked_regiments = legio_one_flavia }
			}
			ROOT = {
				disband_event_forces = legio_one_flavia
			}
		}
		if = {
			limit = { 
				has_landed_title = d_legio_i_minervia 
				ROOT = { has_earmarked_regiments = legio_one_minervia }
			}
			ROOT = {
				disband_event_forces = legio_one_minervia
			}
		}
		if = {
			limit = { 
				has_landed_title = d_legio_xxx_ulpia_victrix 
				ROOT = { has_earmarked_regiments = legio_thirty_ulpia }
			}
			ROOT = {
				disband_event_forces = legio_thirty_ulpia
			}
		}
		if = {
			limit = { 
				has_landed_title = d_legio_xii_victrix 
				ROOT = { has_earmarked_regiments = legio_twelve_victrix }
			}
			ROOT = {
				disband_event_forces = legio_twelve_victrix
			}
		}
		if = {
			limit = { 
				has_landed_title = d_legio_vi_gallicana 
				ROOT = { has_earmarked_regiments = legio_six_gallicana }
			}
			ROOT = {
				disband_event_forces = legio_six_gallicana
			}
		}
		if = {
			limit = { 
				has_landed_title = d_classis_britannica 
				ROOT = { has_earmarked_regiments = classis_britannica }
			}
			ROOT = {
				disband_event_forces = classis_britannica
			}
		}
	}
}

# Requires the former_rebel event target to be set to place the legion properly
ROOT_respawn_held_rebel_legion = {
	# Respawn legion event troops
	if = {
		limit = { 
			has_landed_title = d_legio_vi_victrix
			any_playable_ruler = { has_earmarked_regiments = legio_six_victrix }
		}
		any_playable_ruler = {
			limit = { has_earmarked_regiments = legio_six_victrix }
			disband_event_forces = legio_six_victrix
		}
		event_target:former_rebel = {
			capital_scope = {
				ROOT = {
					spawn_legio_VI_victrix = yes
				}
			}
		}
	}
	if = {
		limit = { 
			has_landed_title = d_legio_xx_valeria_victrix 
			any_playable_ruler = { has_earmarked_regiments = legio_twenty_valeria_victrix }
		}
		any_playable_ruler = {
			limit = { has_earmarked_regiments = legio_twenty_valeria_victrix }
			disband_event_forces = legio_twenty_valeria_victrix
		}
		event_target:former_rebel = {
			capital_scope = {
				ROOT = {
					spawn_legio_XX_valeria_victrix = yes
				}
			}
		}
	}
	if = {
		limit = { 
			has_landed_title = d_legio_ii_augusta 
			any_playable_ruler = { has_earmarked_regiments = legio_two_augusta }
		}
		any_playable_ruler = {
			limit = { has_earmarked_regiments = legio_two_augusta }
			disband_event_forces = legio_two_augusta
		}
		event_target:former_rebel = {
			capital_scope = {
				ROOT = {
					spawn_legio_II_augusta = yes
				}
			}
		}
	}
	if = {
		limit = { 
			has_landed_title = d_legio_ii_britannica 
			any_playable_ruler = { has_earmarked_regiments = legio_two_britannica }
		}
		any_playable_ruler = {
			limit = { has_earmarked_regiments = legio_two_britannica }
			disband_event_forces = legio_two_britannica
		}
		event_target:former_rebel = {
			capital_scope = {
				ROOT = {
					spawn_legio_II_britannica = yes
				}
			}
		}
	}
	if = {
		limit = { 
			has_landed_title = d_legio_i_flavia_gallicana_constantia 
			any_playable_ruler = { has_earmarked_regiments = legio_one_constantia }
		}
		any_playable_ruler = {
			limit = { has_earmarked_regiments = legio_one_constantia }
			disband_event_forces = legio_one_constantia
		}
		event_target:former_rebel = {
			capital_scope = {
				ROOT = {
					spawn_legio_I_flavia_gallicana_constantia = yes
				}
			}
		}
	}
	if = {
		limit = { 
			has_landed_title = d_legio_i_flavia_martis 
			any_playable_ruler = { has_earmarked_regiments = legio_one_flavia }
		}
		any_playable_ruler = {
			limit = { has_earmarked_regiments = legio_one_flavia }
			disband_event_forces = legio_one_flavia
		}
		event_target:former_rebel = {
			capital_scope = {
				ROOT = {
					spawn_legio_I_flavia_martis = yes
				}
			}
		}
	}
	if = {
		limit = { 
			has_landed_title = d_legio_i_minervia 
			any_playable_ruler = { has_earmarked_regiments = legio_one_minervia }
		}
		any_playable_ruler = {
			limit = { has_earmarked_regiments = legio_one_minervia }
			disband_event_forces = legio_one_minervia
		}
		event_target:former_rebel = {
			capital_scope = {
				ROOT = {
					spawn_legio_I_minervia = yes
				}
			}
		}
	}
	if = {
		limit = { 
			has_landed_title = d_legio_xxx_ulpia_victrix 
			any_playable_ruler = { has_earmarked_regiments = legio_thirty_ulpia }
		}
		any_playable_ruler = {
			limit = { has_earmarked_regiments = legio_thirty_ulpia }
			disband_event_forces = legio_thirty_ulpia
		}
		event_target:former_rebel = {
			capital_scope = {
				ROOT = {
					spawn_legio_XXX_ulpia_victrix = yes
				}
			}
		}
	}
	if = {
		limit = { 
			has_landed_title = d_legio_xii_victrix 
			any_playable_ruler = { has_earmarked_regiments = legio_twelve_victrix }
		}
		any_playable_ruler = {
			limit = { has_earmarked_regiments = legio_twelve_victrix }
			disband_event_forces = legio_twelve_victrix
		}
		event_target:former_rebel = {
			capital_scope = {
				ROOT = {
					spawn_legio_XII_victrix = yes
				}
			}
		}
	}
	if = {
		limit = { 
			has_landed_title = d_legio_vi_gallicana 
			any_playable_ruler = { has_earmarked_regiments = legio_six_gallicana }
		}
		any_playable_ruler = {
			limit = { has_earmarked_regiments = legio_six_gallicana }
			disband_event_forces = legio_six_gallicana
		}
		event_target:former_rebel = {
			capital_scope = {
				ROOT = {
					spawn_legio_VI_gallicana = yes
				}
			}
		}
	}
	if = {
		limit = { 
			has_landed_title = d_classis_britannica 
			any_playable_ruler = { has_earmarked_regiments = classis_britannica }
		}
		any_playable_ruler = {
			limit = { has_earmarked_regiments = classis_britannica }
			disband_event_forces = classis_britannica
		}
		event_target:former_rebel = {
			capital_scope = {
				ROOT = {
					spawn_classis_britannica = yes
				}
			}
		}
	}
}