#	Example:
# 
#	example_effect = {
#		treasury = 100
#		prestige = 50
#	}
#
#
#	In a script file:
#
#	effect = {
#		example_effect = yes
#	}
#
# Naming convention:  xxxx_effect
#

### BRITANNIA CUSTOM SCRIPTED EFFECTS ###

restore_roman_provinces_gaul_effect = {
	set_global_flag = roman_provinces_gaul_restored
	
	if = {
		limit = { NOT = { has_global_flag = maxima_sequanorum_conquered_burgundy } }
		d_sequania = { de_jure_liege = k_maxima_sequanorum }
		d_equestria = { de_jure_liege = k_maxima_sequanorum }
		d_helvitioria = { de_jure_liege = k_maxima_sequanorum }
		d_rauricia = { de_jure_liege = k_maxima_sequanorum }
	}
	if = {
		limit = { NOT = { has_global_flag = lugdunensisprima_conquered_burgundy } }
		d_sapaudia = { de_jure_liege = k_lugdunesis_prima }
		d_aeduia = { de_jure_liege = k_lugdunesis_prima }
		d_nivernia = { de_jure_liege = k_lugdunesis_prima }
		d_cabiolonia = { de_jure_liege = k_lugdunesis_prima }
		d_matiscia = { de_jure_liege = k_lugdunesis_prima }
		d_lingonia = { de_jure_liege = k_lugdunesis_prima }
	}
	if = {
		limit = { NOT = { has_global_flag = viennensisprima_conquered_burgundy } }
		d_allobrigia = { de_jure_liege = k_viennensis_prima }
		d_segovellaunia = { de_jure_liege = k_viennensis_prima }
		d_helvia = { de_jure_liege = k_viennensis_prima }
		d_gratianopolitia = { de_jure_liege = k_viennensis_prima }
		d_vocontia = { de_jure_liege = k_viennensis_prima }
		d_genavensia = { de_jure_liege = k_viennensis_prima }
	}
	
	if = {
		limit = { NOT = { has_global_flag = benoic_armorica_created } }
		d_veliocassia = { de_jure_liege = k_lugdunesis_secunda }
		d_lexovia = { de_jure_liege = k_lugdunesis_secunda }
		d_eburovicia = { de_jure_liege = k_lugdunesis_secunda }
		d_sagia = { de_jure_liege = k_lugdunesis_secunda }
		d_baiocassia = { de_jure_liege = k_lugdunesis_secunda }
	}
	
	if = {
		limit = { 
			OR = {
				has_global_flag = benoic_renamed
				AND = {
					has_global_flag = broceliande_renamed 
					has_global_flag = benoic_destroyed
				}
			}
			NOT = { has_global_flag = benoic_armorica_created }
		}
		d_normannia = { de_jure_liege = k_lugdunesis_secunda }
		d_trebes = { de_jure_liege = k_lugdunesis_secunda }
	}
	
	if = {
		limit = { NOT = { has_global_flag = naoned_created } }
		d_namnetia = { de_jure_liege = k_lugdunesis_tertia }
	}
	if = {
		limit = { NOT = { has_global_flag = blesum_armorica_created } }
		d_andecavia = { de_jure_liege = k_lugdunesis_tertia }
		d_cenomannia = { de_jure_liege = k_lugdunesis_tertia }
		d_turonia = { de_jure_liege = k_lugdunesis_tertia }
	}
	if = {
		limit = { has_global_flag = broceliande_renamed }
		d_broerec = { de_jure_liege = k_lugdunesis_tertia }
		d_domnonea = { de_jure_liege = k_lugdunesis_tertia }
		d_finis_terrae = { de_jure_liege = k_lugdunesis_tertia }
	}
	if = {
		limit = {
			OR = {
				AND = {
					NOT = { has_global_flag = benoic_armorica_created }
					has_global_flag = benoic_renamed
				}
				AND = {
					has_global_flag = broceliande_renamed 
					has_global_flag = benoic_destroyed
				}
			}
		}
		d_redonia = { de_jure_liege = k_lugdunesis_tertia }
	}
	
	d_parisia = { de_jure_liege = k_lugdunesis_quartia }
	d_meldia = { de_jure_liege = k_lugdunesis_quartia }
	d_senonia = { de_jure_liege = k_lugdunesis_quartia }
	d_autissiodoria = { de_jure_liege = k_lugdunesis_quartia }
	if = {
		limit = { NOT = { has_global_flag = blesum_armorica_created } }
		d_carnutia = { de_jure_liege = k_lugdunesis_quartia }
		d_blesum = { de_jure_liege = k_lugdunesis_quartia }
		d_aureliania = { de_jure_liege = k_lugdunesis_quartia }
	}
	d_tricassia = { de_jure_liege = k_lugdunesis_quartia }
	
	d_mediomatricia = { de_jure_liege = k_belgica_prima }
	d_treveria = { de_jure_liege = k_belgica_prima }
	d_verodunensia = { de_jure_liege = k_belgica_prima }
	d_leucia = { de_jure_liege = k_belgica_prima }
	
	d_alaudania = { de_jure_liege = k_belgica_secunda }
	d_catalaunia = { de_jure_liege = k_belgica_secunda }
	d_suessionia = { de_jure_liege = k_belgica_secunda }
	d_ambiania = { de_jure_liege = k_belgica_secunda }
	d_viromanduia = { de_jure_liege = k_belgica_secunda }
	d_bellovacia = { de_jure_liege = k_belgica_secunda }
	d_morinia = { de_jure_liege = k_belgica_secunda }
	d_atrebatia = { de_jure_liege = k_belgica_secunda }
	d_nervia = { de_jure_liege = k_belgica_secunda }
	d_menapia = { de_jure_liege = k_belgica_secunda }
	
	d_tribocia = { de_jure_liege = k_germania_prima }
	d_nemetia = { de_jure_liege = k_germania_prima }
	d_vangionia = { de_jure_liege = k_germania_prima }
	d_moguntiacensia = { de_jure_liege = k_germania_prima }
	
	d_toxandria = { de_jure_liege = k_germania_secunda }
	d_tungria = { de_jure_liege = k_germania_secunda }
	d_batavia = { de_jure_liege = k_germania_secunda }
	d_cananefatia = { de_jure_liege = k_germania_secunda }
	d_ubia = { de_jure_liege = k_germania_secunda }
	
	if = {
		limit = { NOT = { has_global_flag = aquitaniaprima_conquered_visigoths } }
		d_biturigia = { de_jure_liege = k_aquitania_prima }
		d_lemovicia = { de_jure_liege = k_aquitania_prima }
		d_alvernia = { de_jure_liege = k_aquitania_prima }
		d_gabalia = { de_jure_liege = k_aquitania_prima }
		d_vellavia = { de_jure_liege = k_aquitania_prima }
		d_cadurcia = { de_jure_liege = k_aquitania_prima }
		d_rutenia = { de_jure_liege = k_aquitania_prima }
		d_albigensia = { de_jure_liege = k_aquitania_prima }
	}
	if = {
		limit = { NOT = { has_global_flag = tolosa_conquered_visigoths } }
		d_tolosatia = { de_jure_liege = k_narbonensis_prima }
	}
	if = {
		limit = { NOT = { has_global_flag = aquitania_secunda_conquered_visigoths } }
		d_aquitania = { de_jure_liege = k_aquitania_secunda }
		d_santonia = { de_jure_liege = k_aquitania_secunda }
		d_ecolismensia = { de_jure_liege = k_aquitania_secunda }
		d_petrocoria = { de_jure_liege = k_aquitania_secunda }
		if = {
			limit = { 
				NAND = { 
					has_global_flag = aquitania_created 
					has_global_flag = basque_vasconia_created
				} 
			}
			d_viviscia = { de_jure_liege = k_aquitania_secunda }
			d_nitiobrogia = { de_jure_liege = k_aquitania_secunda }
		}
	}
	if = {
		limit = { 
			NOR = { 
				has_global_flag = aquitania_tertia_conquered_visigoths
				has_global_flag = basque_vasconia_created  
			} 
		}
		d_elusatia = { de_jure_liege = k_aquitania_tertia }
		d_auscia = { de_jure_liege = k_aquitania_tertia }
		d_lactoratia = { de_jure_liege = k_aquitania_tertia }
		d_convenia = { de_jure_liege = k_aquitania_tertia }
		d_consorannia = { de_jure_liege = k_aquitania_tertia }
		d_bigerria = { de_jure_liege = k_aquitania_tertia }
		d_aturensia = { de_jure_liege = k_aquitania_tertia }
		d_vasatia = { de_jure_liege = k_aquitania_tertia }
		d_benearia = { de_jure_liege = k_aquitania_tertia }
		d_iluronensia = { de_jure_liege = k_aquitania_tertia }
		d_boiatia = { de_jure_liege = k_aquitania_tertia }
		d_tarbellia = { de_jure_liege = k_aquitania_tertia }
	}
	if = {
		limit = { NOT = { has_global_flag = septimania_conquered_visigoths } }
		d_tolosatia = { de_jure_liege = k_narbonensis_prima }
		d_narbonensia = { de_jure_liege = k_narbonensis_prima }
		d_biterrensia = { de_jure_liege = k_narbonensis_prima }
		d_lutevania = { de_jure_liege = k_narbonensis_prima }
		d_nemausensia = { de_jure_liege = k_narbonensis_prima }
		d_ucetiensia = { de_jure_liege = k_narbonensis_prima }
	}
	if = {
		limit = { 
			NOR = { 
				has_global_flag = northern_provence_conquered_burgundy
				has_global_flag = northern_provence_conquered_ostrogoths  
			} 
		}
		d_avenionensia = { de_jure_liege = k_viennensis_secunda }
		d_arausicensia = { de_jure_liege = k_viennensis_secunda }
		d_tricastinensia = { de_jure_liege = k_viennensis_secunda }
		d_vasensia = { de_jure_liege = k_viennensis_secunda }
		d_carpentoratensia = { de_jure_liege = k_viennensis_secunda }
		d_cavilonensia = { de_jure_liege = k_viennensis_secunda }
		d_aptensia = { de_jure_liege = k_narbonensis_secunda }
		d_segesteronensia = { de_jure_liege = k_narbonensis_secunda }
		d_vapincensia = { de_jure_liege = k_narbonensis_secunda }
		d_ebrodunensia = { de_jure_liege = k_alpes_maritimae }
	}
	if = {
		limit = { 
			NOR = { 
				has_global_flag = southern_provence_conquered_visigoths 
				has_global_flag = southern_provence_conquered_ostrogoths 
				has_global_flag = southern_provence_conquered_burgundy 
			} 
		}
		d_arelatensia = { de_jure_liege = k_viennensis_secunda }
		d_massiliensia = { de_jure_liege = k_viennensis_secunda }
		d_tolonensia = { de_jure_liege = k_viennensis_secunda }
		d_aquensia = { de_jure_liege = k_narbonensis_secunda }
		d_regensia = { de_jure_liege = k_narbonensis_secunda }
		d_forojuliensia = { de_jure_liege = k_narbonensis_secunda }
		d_diniensia = { de_jure_liege = k_alpes_maritimae }
		d_sanitiensia = { de_jure_liege = k_alpes_maritimae }
		d_glannativia = { de_jure_liege = k_alpes_maritimae }
		d_vintiensia = { de_jure_liege = k_alpes_maritimae }
		d_antipolitania = { de_jure_liege = k_alpes_maritimae }
		d_cemelenensia = { de_jure_liege = k_alpes_maritimae }
	}
	
	#k_gaul = { destroy_landed_title = THIS }
}

convert_to_local_roman_culture_effect = {
	if = {
		limit = { is_romanoscandian_area_trigger = yes }
		culture = romanoscandian
	}
	else_if = {
		limit = { is_romanogermanic_area_trigger = yes }
		culture = romanogermanic
	}
	else_if = {
		limit = { is_romanoaquitanian_area_trigger = yes }
		culture = romanoaquitanian
	}
	else_if = {
		limit = { is_romanogallic_area_trigger = yes }
		culture = romanogallic
	}
	else_if = {
		limit = { is_romanobritish_area_trigger = yes }
		culture = romanobritish
	}
}

# Called from county scope
declare_conquest_war = {
	add_claim = ROOT
	reverse_war = {
		target = ROOT
		casus_belli = county_conquest
	}
	hidden_tooltip = {
		if = {
			limit = { ROOT = { war = no } }
			reverse_war = {
				target = ROOT
				casus_belli = claim
			}
		}
	}
}

unsafe_declare_conquest_war = {
	add_claim = ROOT
	reverse_war = {
		target = ROOT
		casus_belli = county_conquest
	}
	hidden_tooltip = {
		if = {
			limit = { ROOT = { war = no } }
			reverse_unsafe_war = {
				target = ROOT
				casus_belli = claim
			}
		}
	}
}

# Tries to declare an Anglo-Saxon subjugation war first, then falls back on a county_conquest/claim war if not allowed
declare_anglosaxon_conquest_war = {
	if = {
		limit = { year = 560 }
		ROOT = {
			if = {
				limit = { has_character_modifier = vassalize_timer }
				remove_character_modifier = vassalize_timer
			}
			if = {
				limit = { NOT = { prestige = 1000 } }
				export_to_variable = {
					which = char_prestige
					value = prestige
				}
				multiply_variable = {
					which = char_prestige
					value = -1
				}
				change_variable = {
					which = char_prestige
					value = 1150
				}
				prestige = char_prestige
			}
		}
		reverse_war = {
			target = ROOT
			casus_belli = anglosaxon_subjugation
		}
	}
	if = {
		limit = { ROOT = { war = no } }
		declare_conquest_war = yes
	}
}

destroy_landless_count_level_title_effect = {
	unsafe_destroy_landed_title = THIS
	activate_title = {
		title = THIS
		status = no
	}
	set_title_flag = disabled_county_title
	hidden_tooltip = {
		d_null = {
			holder_scope = {
				grant_title_no_opinion = PREVPREV
				set_defacto_liege = THIS
			}
		}
	}
}

roman_legion_succession_effect = {
	create_character = {
		random_traits = yes
		dynasty = random
		employer = ROOT
		religion = ROOT
		culture = ROOT
		female = no
		age = 30
		attributes = {
			martial = 3
			diplomacy = 3
		}
		trait = skilled_tactician
		trait = skilled_warrior
		trait = veteran
		trait = roman_trained
	}
	new_character = {
		grant_title = PREV
		set_character_flag = new_legion_commander
		gender_succ = agnatic
		succession_w_cooldown = open_elective
		
		# Randomize martial skill
		random_list = {
			15 = {
				change_martial = 1
				add_trait = tough_soldier
				remove_trait = skilled_tactician
			}
			35 = {
				change_martial = 2
			}
			35 = {
				change_martial = 4
			}
			15 = {
				change_martial = 5
				add_trait = brilliant_strategist
				remove_trait = skilled_tactician
			}
		}
		
		# Randomize diplomacy skill
		random_list = {
			25 = {
			}
			25 = {
				change_diplomacy = 1
			}
			25 = {
				change_diplomacy = 2
			}
			25 = {
				change_diplomacy = 3
			}
		}
	}
}

convert_to_thuringian_culture_effect = {
	if = {
		limit = { NOT = { has_global_flag = thuringian_culture_switched } }
		culture = oldthuringian
	}
	if = {
		limit = { has_global_flag = thuringian_culture_switched }
		culture = thuringian
	}
}

remove_base_levies_modifiers = {
	remove_character_modifier = base_levies_1
	remove_character_modifier = base_levies_2
	remove_character_modifier = base_levies_3
	remove_character_modifier = base_levies_4
	remove_character_modifier = base_levies_5
	remove_character_modifier = base_levies_6
	remove_character_modifier = base_levies_7
	remove_character_modifier = base_levies_8
	remove_character_modifier = base_levies_9
	remove_character_modifier = base_levies_10
	remove_character_modifier = base_levies_11
	remove_character_modifier = base_levies_12
	remove_character_modifier = base_levies_13
}

remove_tribal_modifiers = {
	remove_character_modifier = tribal_modifier_0
	remove_character_modifier = tribal_modifier_1
	remove_character_modifier = tribal_modifier_2
	remove_character_modifier = tribal_modifier_3
	remove_character_modifier = tribal_modifier_4
	remove_character_modifier = tribal_modifier_5
	remove_character_modifier = tribal_modifier_6
	remove_character_modifier = tribal_modifier_7
	remove_character_modifier = tribal_modifier_8
	remove_character_modifier = tribal_modifier_9
	remove_character_modifier = tribal_modifier_10
	remove_character_modifier = tribal_modifier_11
	remove_character_modifier = tribal_modifier_12
	remove_character_modifier = tribal_modifier_13
	remove_character_modifier = tribal_modifier_14
	remove_character_modifier = tribal_modifier_15
	remove_character_modifier = tribal_modifier_16
	remove_character_modifier = tribal_modifier_17
	remove_character_modifier = tribal_modifier_18
	remove_character_modifier = tribal_modifier_19
	remove_character_modifier = tribal_modifier_20
	remove_character_modifier = tribal_modifier_-1
	remove_character_modifier = tribal_modifier_-2
	remove_character_modifier = tribal_modifier_-3
	remove_character_modifier = tribal_modifier_-4
	remove_character_modifier = tribal_modifier_-5
	remove_character_modifier = tribal_modifier_-6
	remove_character_modifier = tribal_modifier_-7
	remove_character_modifier = tribal_modifier_-8
	remove_character_modifier = tribal_modifier_-9
	remove_character_modifier = tribal_modifier_-10
	remove_character_modifier = tribal_modifier_-11
	remove_character_modifier = tribal_modifier_-12
	remove_character_modifier = tribal_modifier_-13
	remove_character_modifier = tribal_modifier_-14
	remove_character_modifier = tribal_modifier_-15
}

destroy_landed_title_and_transfer_vassals_to_liege_effect = {
	holder_scope = {
		if = {
			limit = { 
				independent = no
				NOT = {
					any_demesne_title = {
						higher_tier_than = COUNT
						NOT = { de_jure_liege = k_benoic }
					}
				}
			}
			any_vassal = {
				limit = { higher_tier_than = BARON }
				top_liege = {
					set_defacto_vassal = PREVPREV
				}
			}
			destroy_landed_title = PREV
			if = {
				limit = { independent = yes	}
				top_liege = {
					set_defacto_vassal = PREVPREV
				}
			}
		}			
	}
	destroy_landed_title = THIS
}

decrease_prosperity_or_increase_depopulation_effect = {
	hidden_tooltip = {
		set_variable = { which = prosperity_value value = 0 }
	}
	# Provinces with prosperity 2 or 3 lose prosperity, but don't become depopulated
	if = {
		limit = {
			has_province_modifier = prosperity_modifier_3
		}
		remove_province_modifier = prosperity_modifier_3
		break = yes
	}
	if = {
		limit = {
			has_province_modifier = prosperity_modifier_2
		}
		remove_province_modifier = prosperity_modifier_2
		break = yes
	}
	if = {
		limit = {
			has_province_modifier = prosperity_modifier_1
		}
		remove_province_modifier = prosperity_modifier_1
	}
	if = {
		limit = {
			has_province_modifier = depopulated_2
		}
		remove_province_modifier = depopulated_2
		add_province_modifier = {
			name = depopulated_3
			duration = -1
		}
	}
	if = {
		limit = {
			has_province_modifier = depopulated_1
		}
		remove_province_modifier = depopulated_1
		add_province_modifier = {
			name = depopulated_2
			duration = -1
		}
	}
	if = {
		limit = {
			NOR = {
				has_province_modifier = depopulated_3
				has_province_modifier = depopulated_2
				has_province_modifier = depopulated_1
			}
		}
		add_province_modifier = {
			name = depopulated_1
			duration = -1
		}
	}
}

increase_depopulation_always_effect = {
	hidden_tooltip = {
		set_variable = { which = prosperity_value value = 0 }
	}
	if = {
		limit = {
			has_province_modifier = prosperity_modifier_3
		}
		remove_province_modifier = prosperity_modifier_3
	}
	if = {
		limit = {
			has_province_modifier = prosperity_modifier_2
		}
		remove_province_modifier = prosperity_modifier_2
	}
	if = {
		limit = {
			has_province_modifier = prosperity_modifier_1
		}
		remove_province_modifier = prosperity_modifier_1
	}
	if = {
		limit = {
			has_province_modifier = depopulated_2
		}
		remove_province_modifier = depopulated_2
		add_province_modifier = {
			name = depopulated_3
			duration = -1
		}
	}
	if = {
		limit = {
			has_province_modifier = depopulated_1
		}
		remove_province_modifier = depopulated_1
		add_province_modifier = {
			name = depopulated_2
			duration = -1
		}
	}
	if = {
		limit = {
			NOR = {
				has_province_modifier = depopulated_3
				has_province_modifier = depopulated_2
				has_province_modifier = depopulated_1
			}
		}
		add_province_modifier = {
			name = depopulated_1
			duration = -1
		}
	}
}

make_britannia_subject_of_ROOT_effect = {
	ROOT = {
		if = {
			limit = { is_tributary = yes }
			suzerain = {
				remove_tributary = PREV
			}
		}
		if = {
			limit = { NOT = { has_global_flag = britannia_established_central_mint } }
			make_tributary = {
				who = PREV 
				tributary_type = britannia_subject 
			}
		}
		else = {
			make_tributary = {
				who = PREV 
				tributary_type = britannia_subject
				percentage = 0.15
			}
		}
	}
}

make_britannia_subject_of_event_target_effect = {
	event_target:britannia_high_king = {
		if = {
			limit = { is_tributary = yes }
			suzerain = {
				remove_tributary = PREV
			}
		}
		if = {
			limit = { NOT = { has_global_flag = britannia_established_central_mint } }
			make_tributary = {
				who = PREV 
				tributary_type = britannia_subject 
			}
		}
		else = {
			make_tributary = {
				who = PREV 
				tributary_type = britannia_subject
				percentage = 0.15
			}
		}
	}
}

britannia_revoke_last_reform_effect = {
	if = {
		limit = { has_global_flag = britannia_restored_roman_senate }
		clr_global_flag = britannia_restored_roman_senate
	}
	else_if = {
		limit = { has_global_flag = britannia_unified_legal_code }
		clr_global_flag = britannia_unified_legal_code
	}
	else_if = {
		limit = { has_global_flag = britannia_formalized_heir }
		clr_global_flag = britannia_formalized_heir
	}
	else_if = {
		limit = { has_global_flag = britannia_centralized_church }
		clr_global_flag = britannia_centralized_church
	}
	else_if = {
		limit = { has_global_flag = britannia_empowered_high_council }
		clr_global_flag = britannia_empowered_high_council
	}
	else_if = {
		limit = { has_global_flag = britannia_established_central_mint }
		clr_global_flag = britannia_established_central_mint
	}
	else_if = {
		limit = { has_global_flag = britannia_formalized_high_kingship }
		clr_global_flag = britannia_formalized_high_kingship
	}
}

# Searches lieges of liege for the first one that is King-tier or higher, and then makes the current scope their vassal
# Used to ensure that characters don't become needlessly independent when taking a duke-tier title (i.e. the Archdruidship)
set_proper_liege_for_duke_tier_effect = {
	if = {
		limit = { 
			liege = { 
				lower_real_tier_than = KING 
				liege = {
					higher_real_tier_than = DUKE
				}
			} 	
		}
		liege = {
			liege = {
				set_defacto_vassal = ROOT
			}
		}
	}
	if = {
		limit = { 
			liege = { 
				lower_real_tier_than = KING 
				liege = {
					lower_real_tier_than = KING
					independent = no
				}
			} 	
		}
		liege = {
			liege = {
				liege = {
					set_defacto_vassal = ROOT
				}
			}
		}
	}
}

reset_aengland_bretwalda_authority_scores_effect = {
	set_variable = { 
		which = aengland_seize_control_score
		which = aengland_bretwalda_authority
	}
	set_variable = { 
		which = aengland_seize_control_score_2
		which = aengland_bretwalda_authority
	}
	set_variable = { 
		which = aengland_seize_control_score_3
		which = aengland_bretwalda_authority
	}
	set_variable = { 
		which = aengland_seize_control_score_4
		which = aengland_bretwalda_authority
	}
	set_variable = { 
		which = aengland_vassalize_subject_score
		which = aengland_bretwalda_authority
	}
	set_variable = { 
		which = aengland_vassalize_subject_score_2
		which = aengland_bretwalda_authority
	}
	set_variable = { 
		which = aengland_vassalize_subject_score_3
		which = aengland_bretwalda_authority
	}
	set_variable = { 
		which = aengland_vassalize_subject_score_4
		which = aengland_bretwalda_authority
	}
}

flag_faction_revolt_title_effect = {
	ROOT = { 
		primary_title = { 
			if = {
				limit = {
					is_titular = yes
					temporary = yes
				}
				d_null = { set_title_flag = temp_revolt_title_@PREV } 
			}
		} 
	}
}

destroy_faction_revolt_title_effect = {
	hidden_tooltip = {
		any_title = {
			limit = {
				d_null = { has_title_flag = temp_revolt_title_@PREV }
				OR = {
					has_holder = no
					holder_scope = { war = no }
				}
			}
			destroy_landed_title = THIS
			activate_title = { title = THIS status = no }
			d_null = { clr_title_flag = temp_revolt_title_@PREV }
		}
	}
}