
set_proper_local_resistance_level_effect = {
	if = {
		limit = { 
			check_variable = {
				which = pacification_years_remaining
				value = 26
			}
		}
		remove_province_modifier = local_resistance_1
		remove_province_modifier = local_resistance_2
		remove_province_modifier = local_resistance_1_quiet
		remove_province_modifier = local_resistance_2_quiet
		remove_province_modifier = local_resistance_1_march
		remove_province_modifier = local_resistance_2_march
		if = {
			limit = { owner = { culture = ROOT } }
			add_province_modifier = { 
				name = local_resistance_3_quiet
				duration = -1
			}
		}
		else_if = {
			limit = { owner = { top_liege = { is_tributary = { type = march } } } }
			add_province_modifier = { 
				name = local_resistance_3_march
				duration = -1
			}
		}
		else = {
			add_province_modifier = { 
				name = local_resistance_3
				duration = -1
			}
		}
	}
	else_if = {
		limit = { 
			check_variable = {
				which = pacification_years_remaining
				value = 11
			}
		}
		remove_province_modifier = local_resistance_1
		remove_province_modifier = local_resistance_3
		remove_province_modifier = local_resistance_1_quiet
		remove_province_modifier = local_resistance_3_quiet
		remove_province_modifier = local_resistance_1_march
		remove_province_modifier = local_resistance_3_march
		if = {
			limit = { owner = { culture = ROOT } }
			add_province_modifier = { 
				name = local_resistance_2_quiet
				duration = -1
			}
		}
		else_if = {
			limit = { owner = { top_liege = { is_tributary = { type = march } } } }
			add_province_modifier = { 
				name = local_resistance_2_march
				duration = -1
			}
		}
		else = {
			add_province_modifier = { 
				name = local_resistance_2
				duration = -1
			}
		}
	}
	else = {
		remove_province_modifier = local_resistance_1
		remove_province_modifier = local_resistance_2
		remove_province_modifier = local_resistance_1_quiet
		remove_province_modifier = local_resistance_2_quiet
		remove_province_modifier = local_resistance_1_march
		remove_province_modifier = local_resistance_2_march
		if = {
			limit = { owner = { culture = ROOT } }
			add_province_modifier = { 
				name = local_resistance_1_quiet
				duration = -1
			}
		}
		else_if = {
			limit = { owner = { top_liege = { is_tributary = { type = march } } } }
			add_province_modifier = { 
				name = local_resistance_1_march
				duration = -1
			}
		}
		else = {
			add_province_modifier = { 
				name = local_resistance_1
				duration = -1
			}
		}
	}
}

# Adds to the global_nat_revolt_progress_increase variable
calculate_province_nat_revolt_progress_increase_effect = {
	# Base value
	set_variable = {
		which = local_nat_revolt_progress_increase
		value = 0
	}
	if = {
		limit = {
			OR = {
				has_province_modifier = local_resistance_1
				has_province_modifier = local_resistance_1_quiet
				has_province_modifier = local_resistance_1_march
			}
		}
		change_variable = {
			which = local_nat_revolt_progress_increase
			value = 0.5
		}
	}
	else_if = {
		limit = {
			OR = {
				has_province_modifier = local_resistance_2
				has_province_modifier = local_resistance_2_quiet
				has_province_modifier = local_resistance_2_march
			}
		}
		change_variable = {
			which = local_nat_revolt_progress_increase
			value = 1
		}
	}
	else_if = {
		limit = {
			OR = {
				has_province_modifier = local_resistance_3
				has_province_modifier = local_resistance_3_quiet
				has_province_modifier = local_resistance_3_march
			}
		}
		change_variable = {
			which = local_nat_revolt_progress_increase
			value = 1.5
		}
	}
	
	# Local control and march modifiers
	if = {
		limit = {	# 20% more
			OR = {
				has_province_modifier = local_resistance_1_quiet
				has_province_modifier = local_resistance_2_quiet
				has_province_modifier = local_resistance_3_quiet
			}
		}
		multiply_variable = {
			which = local_nat_revolt_progress_increase
			value = 1.2
		}
	}
	else_if = {
		limit = {	# 25% less
			OR = {
				has_province_modifier = local_resistance_1_march
				has_province_modifier = local_resistance_2_march
				has_province_modifier = local_resistance_3_march
			}
		}
		multiply_variable = {
			which = local_nat_revolt_progress_increase
			value = 0.75
		}
	}
	
	# Some variation for each province
	random_list = {
		33 = {
			multiply_variable = {	# +15 %
				which = local_nat_revolt_progress_increase
				value = 1.15
			}
		}
		33 = {						# No change
		}
		33 = {
			multiply_variable = {	# -15 %
				which = local_nat_revolt_progress_increase
				value = 0.85
			}
		}
	}
	
	# Add to global count
	change_variable = {
		which = global_nat_revolt_progress_increase
		which = local_nat_revolt_progress_increase
	}
}

# Should only be used on top lieges, assumes that the event target current_resistance_region_province 
# Arguments:
# - current_resistance_region_province			event_target, a province in the region to check the nationalist revolt size of
update_nationalist_revolt_size = {
	set_variable = {
		which = global_nat_revolt_progress_increase
		value = 0
	}
	
	# Add together all provinces under the realm
	any_realm_province = {
		limit = {
			has_province_flag = has_local_resistance
			is_in_current_resistance_region_province = yes
		}
		calculate_province_nat_revolt_progress_increase_effect = yes
	}
	# ... including suzerains (if a march)
	if = {
		limit = { is_tributary = { type = march } }
		suzerain = {
			any_realm_province = {
				limit = {
					has_province_flag = has_local_resistance
					is_in_current_resistance_region_province = yes
				}
				calculate_province_nat_revolt_progress_increase_effect = yes
			}
			# Check other marches of suzerain
			any_tributary = {
				limit = { 
					is_tributary = { type = march } 
					NOT = { character = PREVPREV }
				}
				any_realm_province = {
					limit = {
						has_province_flag = has_local_resistance
						is_in_current_resistance_region_province = yes
					}
					calculate_province_nat_revolt_progress_increase_effect = yes
				}
			}
		}
	}
	# ... and marches (if realm has marches)
	any_tributary = {
		limit = { is_tributary = { type = march } }
		any_realm_province = {
			limit = {
				has_province_flag = has_local_resistance
				is_in_current_resistance_region_province = yes
			}
			calculate_province_nat_revolt_progress_increase_effect = yes
		}
	}
	
	# Calculate estimated revolt size
	set_variable = {
		which = global_nat_revolt_estimated_size
		which = global_nat_revolt_progress_increase
	}
	# Round down to nearest 10
	divide_variable = {
		which = global_nat_revolt_estimated_size
		value = 10
	}
	multiply_variable = {
		which = global_nat_revolt_estimated_size
		value = 5000
	}
	
	# Now we assign the estimated size (for tooltip purposes only)
	any_realm_province = {
		limit = {
			has_province_flag = has_local_resistance
			is_in_current_resistance_region_province = yes
		}
		set_variable = {
			which = nat_revolt_estimated_size
			which = global_nat_revolt_estimated_size
		}
	}
	if = {
		limit = { is_tributary = { type = march } }
		suzerain = {
			any_realm_province = {
				limit = {
					has_province_flag = has_local_resistance
					is_in_current_resistance_region_province = yes
				}
				set_variable = {
					which = nat_revolt_estimated_size
					which = global_nat_revolt_estimated_size
				}
			}
			# Check other marches of suzerain
			any_tributary = {
				limit = { 
					is_tributary = { type = march } 
					NOT = { character = PREVPREV }
				}
				any_realm_province = {
					limit = {
						has_province_flag = has_local_resistance
						is_in_current_resistance_region_province = yes
					}
					set_variable = {
						which = nat_revolt_estimated_size
						which = global_nat_revolt_estimated_size
					}
				}
			}
		}
	}
	any_tributary = {
		limit = { is_tributary = { type = march } }
		any_realm_province = {
			limit = {
				has_province_flag = has_local_resistance
				is_in_current_resistance_region_province = yes
			}
			set_variable = {
				which = nat_revolt_estimated_size
				which = global_nat_revolt_estimated_size
			}
		}
	}
}

# Called from province scope
clear_nationalist_revolt_progress_from_realm_region_effect = {
	save_event_target_as = current_resistance_region_province
	owner = {
		top_liege = {
			any_realm_province = {
				limit = {
					has_province_flag = has_local_resistance
					is_in_current_resistance_region_province = yes
				}
				set_variable = {
					which = nat_revolt_estimated_size
					value = 0
				}
			}
			if = {
				limit = { is_tributary = { type = march } }
				suzerain = {
					any_realm_province = {
						limit = {
							has_province_flag = has_local_resistance
							is_in_current_resistance_region_province = yes
						}
						set_variable = {
							which = nat_revolt_estimated_size
							value = 0
						}
					}
					# Check other marches of suzerain
					any_tributary = {
						limit = { 
							is_tributary = { type = march } 
							NOT = { character = PREVPREV }
						}
						any_realm_province = {
							limit = {
								has_province_flag = has_local_resistance
								is_in_current_resistance_region_province = yes
							}
							set_variable = {
								which = nat_revolt_estimated_size
								value = 0
							}
						}
					}
				}
			}
			any_tributary = {
				limit = { is_tributary = { type = march } }
				any_realm_province = {
					limit = {
						has_province_flag = has_local_resistance
						is_in_current_resistance_region_province = yes
					}
					set_variable = {
						which = nat_revolt_estimated_size
						value = 0
					}
				}
			}
		}
	}
}

adjust_revolt_army_size_effect = {
	set_variable = {
		which = global_troop_change
		value = 0
	}
	
	# Adjust for tribal holding slots (can make troops spiral out of control if there are many)
	if = {
		limit = { ROOT = { any_province_holding = { holding_type = TRIBAL } } }		
		# Offset additional maluses from tribal + wrong culture/religion
		if = {
			limit = { ROOT = { owner = { NOT = { culture = ROOT } } } }
			change_variable = {
				which = global_troop_change
				value = 0.10
			}
		}
		if = {
			limit = { ROOT = { owner = { NOT = { culture_group = ROOT } } } }
			change_variable = {
				which = global_troop_change
				value = 0.15
			}
		}
		if = {
			limit = { ROOT = { owner = { NOT = { religion = ROOT } } } }
			change_variable = {
				which = global_troop_change
				value = 0.05
			}
		}
		if = {
			limit = { ROOT = { owner = { NOT = { religion_group = ROOT } } } }
			change_variable = {
				which = global_troop_change
				value = 0.10
			}
		}
		if = {
			limit = { ROOT = { has_province_modifier = province_not_dejure_liege } }
			change_variable = {
				which = global_troop_change
				value = 0.10
			}
		}
	}
	# Offset base wrong culture/religion maluses
	if = {
		limit = { ROOT = { owner = { NOT = { culture = ROOT } } } }
		change_variable = {
			which = global_troop_change
			value = 0.10
		}
	}
	if = {
		limit = { ROOT = { owner = { NOT = { culture_group = ROOT } } } }
		change_variable = {
			which = global_troop_change
			value = 0.15
		}
	}
	if = {
		limit = { ROOT = { owner = { NOT = { religion = ROOT } } } }
		change_variable = {
			which = global_troop_change
			value = 0.10
		}
	}
	if = {
		limit = { ROOT = { owner = { NOT = { religion_group = ROOT } } } }
		change_variable = {
			which = global_troop_change
			value = 0.15
		}
	}
	
	# Note: since many of the local resistance modifiers significantly decrease levy and garrison size, most of these increases
	# are not as large as they look like
	if = {
		limit = { ROOT = { has_province_modifier = local_resistance_3 } }
		change_variable = {
			which = global_troop_change
			value = 0.5
		}
	}
	else_if = {
		limit = { ROOT = { has_province_modifier = local_resistance_2 } }
		change_variable = {
			which = global_troop_change
			value = 0.37
		}
	}
	else_if = {
		limit = { ROOT = { has_province_modifier = local_resistance_1 } }
		change_variable = {
			which = global_troop_change
			value = 0.25
		}
	}
	else_if = {
		limit = { ROOT = { has_province_modifier = local_resistance_3_quiet } }
		change_variable = {
			which = global_troop_change
			value = 0.25
		}
	}
	else_if = {
		limit = { ROOT = { has_province_modifier = local_resistance_2_quiet } }
		change_variable = {
			which = global_troop_change
			value = 0.17
		}
	}
	else_if = {
		limit = { ROOT = { has_province_modifier = local_resistance_1_quiet } }
		change_variable = {
			which = global_troop_change
			value = 0.1
		}
	}
	else_if = {
		limit = { ROOT = { has_province_modifier = local_resistance_3_march } }
		change_variable = {
			which = global_troop_change
			value = 0.3
		}
	}
	else_if = {
		limit = { ROOT = { has_province_modifier = local_resistance_2_march } }
		change_variable = {
			which = global_troop_change
			value = 0.2
		}
	}
	else_if = {
		limit = { ROOT = { has_province_modifier = local_resistance_1_march } }
		change_variable = {
			which = global_troop_change
			value = 0.1
		}
	}
	
	# Cultural affinity of other provinces
	ROOT = { 
		owner = { 
			top_liege = {
				if = {
					limit = { 
						any_realm_province = {
							count = 20
							culture = ROOT
						}
						NOT = { PREVPREVPREV = { has_character_flag = peasant_revolter } }
					}
					change_variable = {
						which = global_troop_change
						value = 0.50
					}
				}
				else_if = {
					limit = { 
						any_realm_province = {
							count = 15
							culture = ROOT
						}
						NOT = { PREVPREVPREV = { has_character_flag = peasant_revolter } }
					}
					change_variable = {
						which = global_troop_change
						value = 0.35
					}
				}
				else_if = {
					limit = { 
						any_realm_province = {
							count = 10
							culture = ROOT
						}
					}
					change_variable = {
						which = global_troop_change
						value = 0.2
					}
				}
				else_if = {
					limit = { 
						any_realm_province = {
							count = 7
							culture = ROOT
						}
					}
					change_variable = {
						which = global_troop_change
						value = 0.1
					}
				}
				else_if = {
					limit = {
						NOT = {
							any_realm_province = {
								count = 5
								culture = ROOT
							}
						}
					}
					change_variable = {
						which = global_troop_change
						value = -0.1
					}
				}
				else_if = {
					limit = {
						NOT = {
							any_realm_province = {
								count = 4
								culture = ROOT
							}
						}
					}
					change_variable = {
						which = global_troop_change
						value = -0.2
					}
				}
				else_if = {
					limit = {
						NOT = {
							any_realm_province = {
								count = 3
								culture = ROOT
							}
						}
					}
					change_variable = {
						which = global_troop_change
						value = -0.33
					}
				}
				else_if = {
					limit = {
						NOT = {
							any_realm_province = {
								count = 2
								culture = ROOT
							}
						}
					}
					change_variable = {
						which = global_troop_change
						value = -0.5
					}
				}
				
				# Wrong culture group tribal revolts also scale more
				if = {
					limit = {
						ROOT = { 
							any_province_holding = { holding_type = TRIBAL } 
							NOT = { culture_group = PREVPREV }
						}
					}
					if = {
						limit = { 
							any_realm_province = {
								count = 30
								culture = ROOT
							}
							NOT = { PREVPREVPREV = { has_character_flag = peasant_revolter } }
						}
						change_variable = {
							which = global_troop_change
							value = 0.5
						}
					}
					else_if = {
						limit = { 
							any_realm_province = {
								count = 25
								culture = ROOT
							}
							NOT = { PREVPREVPREV = { has_character_flag = peasant_revolter } }
						}
						change_variable = {
							which = global_troop_change
							value = 0.4
						}
					}
					else_if = {
						limit = { 
							any_realm_province = {
								count = 18
								culture = ROOT
							}
							NOT = { PREVPREVPREV = { has_character_flag = peasant_revolter } }
						}
						change_variable = {
							which = global_troop_change
							value = 0.3
						}
					}
					else_if = {
						limit = { 
							any_realm_province = {
								count = 12
								culture = ROOT
							}
							NOT = { PREVPREVPREV = { has_character_flag = peasant_revolter } }
						}
						change_variable = {
							which = global_troop_change
							value = 0.2
						}
					}
					else_if = {
						limit = { 
							any_realm_province = {
								count = 8
								culture = ROOT
							}
						}
						change_variable = {
							which = global_troop_change
							value = 0.1
						}
					}
					else_if = {
						limit = { 
							any_realm_province = {
								count = 6
								culture = ROOT
							}
						}
						change_variable = {
							which = global_troop_change
							value = 0.05
						}
					}
				}
			} 
		} 
	}
	
	# Imperial provinces are less resistant if the owner is of the same religion
	if = {
		limit = { 
			ROOT = { 
				NOT = { any_province_holding = { holding_type = TRIBAL } }
				culture_group = imperiale
				owner = { 
					NOT = { culture_group = imperiale } 
					religion = ROOT
				}
			}
		}
		change_variable = {
			which = global_troop_change
			value = -0.15
		}
	}
	
	# global_troop_decrease = (1 + global_troop_change) / 4 - 1
	# Converts global_troop_decrease into a decrease from 4 * the normal size
	set_variable = {
		which = global_troop_decrease
		which = global_troop_change
	}
	change_variable = {
		which = global_troop_decrease
		value = 1
	}
	divide_variable = {
		which = global_troop_decrease
		value = 4
	}
	subtract_variable = {
		which = global_troop_decrease
		value = 1
	}
	any_army = {
		troops = global_troop_decrease
	}
	
	# Adjust for tribal holding slots (can make troops spiral out of control if there are many)
	# Applied as a final multiplier
	if = {
		limit = { ROOT = { any_province_holding = { holding_type = TRIBAL } } }
		if = {
			limit = { 
				ROOT = { num_of_empty_holdings = 3 } 
			}
			any_army = {
				troops = -0.25
			}
		}
		else_if = {
			limit = { 
				ROOT = { num_of_empty_holdings = 2 } 
			}
			any_army = {
				troops = -0.15
			}
		}
	}
}

# SCOPE - The march title to transfer the vassal to
# ROOT - The title to be grant
# FROM - The liege of the march (and original holder of the title)
grant_county_to_march_effect = {
	holder_scope = {
		show_scope_change = no
		grant_title = ROOT
		tooltip = {
			opinion = {
				modifier = opinion_granted_county
				who = FROM
			}
		}
		character_event = { id = 320925 }
	}
}

# SCOPE - The march title to transfer the vassal to
# ROOT - The vassal to be transferred
# FROM - The liege of the march and vassal
transfer_vassal_to_march_effect = {
	holder_scope = {
		show_scope_change = no
		set_defacto_vassal = ROOT
		opinion = {
			modifier = opinion_vassal_transfer
			who = FROM
		}
		character_event = { id = 320926 }
	}
}

# Flags all marches of the event target
flag_target_marches_effect = {
	event_target:target_char = {
		set_character_flag = i_am_from
		any_tributary = {
			set_character_flag = i_pay_tribute_to_from
		}
		any_tributary = {
			limit = { is_tributary = { type = march } }
			set_character_flag = is_march_of_@PREV
		}
	}
}

# Transfers relevant marches from FROM to the new owner after a claimant war (or similar). Assumes that flag_FROM_marches_effect was called before the title was usurped. mostly in case FROM becomes unlanded and the marches are lost.
# The march will be transferred if one of the following is true:
# - FROM is no longer landed
# - FROM is now a vassal of ROOT
# - FROM no longer neighbours the march, and ROOT does
# - The usurped title was Neustria, and the march was the Breton March
# - The usurped title was Aquitaine, and the march was Vasconia
# - The usurped title was Mercia, and the march was the Welsh March
# - The usurped title was Northumbria, and the march was the Pictish March
# SCOPE - The claimed title that was usurped
# event_target:new_holder - The claimant taking the title
# event_target:old_holder - The old holder of the title
transfer_marches_to_new_holder_claim_effect = {
	any_playable_ruler = {
		limit = {
			has_character_flag = is_march_of_@FROM
		}
		clr_character_flag = is_march_of_@FROM
		if = {
			limit = {
				OR = {
					FROM = { is_landed = no }
					FROM = { any_liege = { character = event_target:new_holder } }
					AND = {
						PREV = { title = k_neustria }
						has_landed_title = k_breton_march
					}
					AND = {
						PREV = { title = k_aquitaine }
						has_landed_title = k_vasconia
					}
					AND = {
						PREV = { title = k_mercia }
						has_landed_title = k_wales
					}
					AND = {
						PREV = { title = k_northumbria }
						has_landed_title = k_pictland
					}
					AND = {
						any_realm_province = {
							any_neighbor_province = {
								any_liege = { character = event_target:new_holder }
							}
						}
						NOT = {
							any_realm_province = {
								any_neighbor_province = {
									any_liege = { character = FROM }
								}
							}
						}
					}
				}
			}
			if = {
				limit = { is_tributary = yes }
				suzerain = {
					remove_tributary = PREV
				}
			}
			event_target:new_holder = {
				make_tributary = {
					who = PREV
					tributary_type = march
				}
			}
		}
	}
}